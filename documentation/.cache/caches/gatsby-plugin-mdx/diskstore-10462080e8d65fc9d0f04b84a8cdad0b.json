{"expireTime":9007200881073057000,"key":"gatsby-plugin-mdx-entire-payload-93da70d02592f91def69b2ff09c0de88-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"Multiple bots via Binary","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":29,"offset":29},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":29,"offset":29},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Users can run multiple bots of Hummingbot installed via binary by simply running a new instance to open a new window.","position":{"start":{"line":4,"column":1,"offset":31},"end":{"line":4,"column":118,"offset":148},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":31},"end":{"line":4,"column":118,"offset":148},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"img/multiple_bots1.gif","alt":null,"position":{"start":{"line":6,"column":1,"offset":150},"end":{"line":6,"column":28,"offset":177},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":150},"end":{"line":6,"column":28,"offset":177},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Multiple bots via Docker","position":{"start":{"line":8,"column":5,"offset":183},"end":{"line":8,"column":29,"offset":207},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":179},"end":{"line":8,"column":29,"offset":207},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create multiple instances using ","position":{"start":{"line":10,"column":1,"offset":209},"end":{"line":10,"column":33,"offset":241},"indent":[]}},{"type":"inlineCode","value":"./create.sh","position":{"start":{"line":10,"column":33,"offset":241},"end":{"line":10,"column":46,"offset":254},"indent":[]}},{"type":"text","value":" script. Then, use the following commands to download the create script and make it executable.","position":{"start":{"line":10,"column":46,"offset":254},"end":{"line":10,"column":141,"offset":349},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":209},"end":{"line":10,"column":141,"offset":349},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Linux","position":{"start":{"line":12,"column":5,"offset":355},"end":{"line":12,"column":10,"offset":360},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":351},"end":{"line":12,"column":10,"offset":360},"indent":[]}},{"type":"code","lang":"Linux","meta":null,"value":"wget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nchmod a+x *.sh","position":{"start":{"line":14,"column":1,"offset":362},"end":{"line":17,"column":4,"offset":500},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"MacOS","position":{"start":{"line":19,"column":5,"offset":506},"end":{"line":19,"column":10,"offset":511},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":502},"end":{"line":19,"column":10,"offset":511},"indent":[]}},{"type":"code","lang":"MacOS","meta":null,"value":"curl https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh -o create.sh\nchmod a+x *.sh","position":{"start":{"line":21,"column":1,"offset":513},"end":{"line":24,"column":4,"offset":664},"indent":[1,1,1]}},{"type":"code","lang":"Windows","meta":"via Docker Toolbox","value":"cd ~\ncurl https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh -o create.sh\nchmod a+x *.sh","position":{"start":{"line":26,"column":1,"offset":666},"end":{"line":30,"column":4,"offset":843},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Running in the background (via Docker)","position":{"start":{"line":32,"column":5,"offset":849},"end":{"line":32,"column":43,"offset":887},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":845},"end":{"line":32,"column":43,"offset":887},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Press keys ","position":{"start":{"line":34,"column":1,"offset":889},"end":{"line":34,"column":12,"offset":900},"indent":[]}},{"type":"inlineCode","value":"Ctrl+P","position":{"start":{"line":34,"column":12,"offset":900},"end":{"line":34,"column":20,"offset":908},"indent":[]}},{"type":"text","value":" then ","position":{"start":{"line":34,"column":20,"offset":908},"end":{"line":34,"column":26,"offset":914},"indent":[]}},{"type":"inlineCode","value":"Ctrl+Q","position":{"start":{"line":34,"column":26,"offset":914},"end":{"line":34,"column":34,"offset":922},"indent":[]}},{"type":"text","value":" in sequence to detach from Docker, i.e., return to the command line. This exits out of Hummingbot without shutting down the container instance.","position":{"start":{"line":34,"column":34,"offset":922},"end":{"line":34,"column":178,"offset":1066},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":889},"end":{"line":34,"column":178,"offset":1066},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Restart or connect to a running instance using the ","position":{"start":{"line":36,"column":1,"offset":1068},"end":{"line":36,"column":52,"offset":1119},"indent":[]}},{"type":"inlineCode","value":"./start.sh","position":{"start":{"line":36,"column":52,"offset":1119},"end":{"line":36,"column":64,"offset":1131},"indent":[]}},{"type":"text","value":" script. Below commands download the start script and make it executable.","position":{"start":{"line":36,"column":64,"offset":1131},"end":{"line":36,"column":137,"offset":1204},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1068},"end":{"line":36,"column":137,"offset":1204},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Linux","position":{"start":{"line":38,"column":5,"offset":1210},"end":{"line":38,"column":10,"offset":1215},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1206},"end":{"line":38,"column":10,"offset":1215},"indent":[]}},{"type":"code","lang":"Linux","meta":null,"value":"wget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nchmod a+x *.sh","position":{"start":{"line":40,"column":1,"offset":1217},"end":{"line":43,"column":4,"offset":1354},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"MacOS","position":{"start":{"line":45,"column":5,"offset":1360},"end":{"line":45,"column":10,"offset":1365},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1356},"end":{"line":45,"column":10,"offset":1365},"indent":[]}},{"type":"code","lang":"MacOS","meta":null,"value":"curl https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh -o start.sh\nchmod a+x *.sh","position":{"start":{"line":47,"column":1,"offset":1367},"end":{"line":50,"column":4,"offset":1516},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Multiple bots from source","position":{"start":{"line":52,"column":5,"offset":1522},"end":{"line":52,"column":30,"offset":1547},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1518},"end":{"line":52,"column":30,"offset":1547},"indent":[]}},{"type":"jsx","value":"<Callout\n  type=\"tip\"\n  body=\"We recommend that users download and install Hummingbot separately for each instance they wish to run.\"\n/>","position":{"start":{"line":54,"column":1,"offset":1549},"end":{"line":57,"column":3,"offset":1685},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The below command downloads the Hummingbot repository from GitHub, where ","position":{"start":{"line":59,"column":1,"offset":1687},"end":{"line":59,"column":74,"offset":1760},"indent":[]}},{"type":"inlineCode","value":"$FOLDER_NAME","position":{"start":{"line":59,"column":74,"offset":1760},"end":{"line":59,"column":88,"offset":1774},"indent":[]}},{"type":"text","value":" is the name of the separate directory.","position":{"start":{"line":59,"column":88,"offset":1774},"end":{"line":59,"column":127,"offset":1813},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1687},"end":{"line":59,"column":127,"offset":1813},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"cd ~\ngit clone https://github.com/CoinAlpha/hummingbot.git $FOLDER_NAME","position":{"start":{"line":61,"column":1,"offset":1815},"end":{"line":64,"column":4,"offset":1894},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Do another install in the new directory.","position":{"start":{"line":66,"column":1,"offset":1896},"end":{"line":66,"column":41,"offset":1936},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1896},"end":{"line":66,"column":41,"offset":1936},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"cd $FOLDER_NAME\n./install\nconda activate hummingbot\n./compile","position":{"start":{"line":68,"column":1,"offset":1938},"end":{"line":73,"column":4,"offset":2007},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Running in the background (from source)","position":{"start":{"line":75,"column":5,"offset":2013},"end":{"line":75,"column":44,"offset":2052},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2009},"end":{"line":75,"column":44,"offset":2052},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use either ","position":{"start":{"line":77,"column":1,"offset":2054},"end":{"line":77,"column":12,"offset":2065},"indent":[]}},{"type":"inlineCode","value":"tmux","position":{"start":{"line":77,"column":12,"offset":2065},"end":{"line":77,"column":18,"offset":2071},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":77,"column":18,"offset":2071},"end":{"line":77,"column":22,"offset":2075},"indent":[]}},{"type":"inlineCode","value":"screen","position":{"start":{"line":77,"column":22,"offset":2075},"end":{"line":77,"column":30,"offset":2083},"indent":[]}},{"type":"text","value":" to run multiple bots installed from source. Check out these external links how to use them.","position":{"start":{"line":77,"column":30,"offset":2083},"end":{"line":77,"column":122,"offset":2175},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2054},"end":{"line":77,"column":122,"offset":2175},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://linuxize.com/post/getting-started-with-tmux/","children":[{"type":"text","value":"Getting started with Tmux","position":{"start":{"line":79,"column":4,"offset":2180},"end":{"line":79,"column":29,"offset":2205},"indent":[]}}],"position":{"start":{"line":79,"column":3,"offset":2179},"end":{"line":79,"column":84,"offset":2260},"indent":[]}}],"position":{"start":{"line":79,"column":3,"offset":2179},"end":{"line":79,"column":84,"offset":2260},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2177},"end":{"line":79,"column":84,"offset":2260},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://linuxize.com/post/how-to-use-linux-screen/","children":[{"type":"text","value":"How to use Linux Screen","position":{"start":{"line":80,"column":4,"offset":2264},"end":{"line":80,"column":27,"offset":2287},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":2263},"end":{"line":80,"column":80,"offset":2340},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":2263},"end":{"line":80,"column":80,"offset":2340},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2261},"end":{"line":80,"column":80,"offset":2340},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2177},"end":{"line":80,"column":80,"offset":2340},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"When using screen to run an instance in the background, run either of the following commands: ","position":{"start":{"line":82,"column":1,"offset":2342},"end":{"line":82,"column":95,"offset":2436},"indent":[]}},{"type":"inlineCode","value":"screen","position":{"start":{"line":82,"column":95,"offset":2436},"end":{"line":82,"column":103,"offset":2444},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":82,"column":103,"offset":2444},"end":{"line":82,"column":107,"offset":2448},"indent":[]}},{"type":"inlineCode","value":"screen -S $NAME","position":{"start":{"line":82,"column":107,"offset":2448},"end":{"line":82,"column":124,"offset":2465},"indent":[]}},{"type":"text","value":", where ","position":{"start":{"line":82,"column":124,"offset":2465},"end":{"line":82,"column":132,"offset":2473},"indent":[]}},{"type":"inlineCode","value":"$NAME","position":{"start":{"line":82,"column":132,"offset":2473},"end":{"line":82,"column":139,"offset":2480},"indent":[]}},{"type":"text","value":" is what you wish to call this background instance. Use the latter to be more explicit if you want to run multiple bots.","position":{"start":{"line":82,"column":139,"offset":2480},"end":{"line":82,"column":259,"offset":2600},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2342},"end":{"line":82,"column":259,"offset":2600},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Navigate to the folder where your separate Hummingbot is installed, then start the bot like normal.","position":{"start":{"line":84,"column":1,"offset":2602},"end":{"line":84,"column":100,"offset":2701},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2602},"end":{"line":84,"column":100,"offset":2701},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"conda activate hummingbot\nbin/hummingbot.py","position":{"start":{"line":86,"column":1,"offset":2703},"end":{"line":89,"column":4,"offset":2754},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To exit the screen (detach), press ","position":{"start":{"line":91,"column":1,"offset":2756},"end":{"line":91,"column":36,"offset":2791},"indent":[]}},{"type":"inlineCode","value":"Ctrl+A","position":{"start":{"line":91,"column":36,"offset":2791},"end":{"line":91,"column":44,"offset":2799},"indent":[]}},{"type":"text","value":" then ","position":{"start":{"line":91,"column":44,"offset":2799},"end":{"line":91,"column":50,"offset":2805},"indent":[]}},{"type":"inlineCode","value":"Ctrl+D","position":{"start":{"line":91,"column":50,"offset":2805},"end":{"line":91,"column":58,"offset":2813},"indent":[]}},{"type":"text","value":" in sequence.","position":{"start":{"line":91,"column":58,"offset":2813},"end":{"line":91,"column":71,"offset":2826},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2756},"end":{"line":91,"column":71,"offset":2826},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To list all running instances, use ","position":{"start":{"line":93,"column":1,"offset":2828},"end":{"line":93,"column":36,"offset":2863},"indent":[]}},{"type":"inlineCode","value":"screen -ls","position":{"start":{"line":93,"column":36,"offset":2863},"end":{"line":93,"column":48,"offset":2875},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":93,"column":48,"offset":2875},"end":{"line":93,"column":49,"offset":2876},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2828},"end":{"line":93,"column":49,"offset":2876},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"/img/screen.png","alt":"List Screen Instances","position":{"start":{"line":95,"column":1,"offset":2878},"end":{"line":95,"column":42,"offset":2919},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":2878},"end":{"line":95,"column":42,"offset":2919},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Log back into the screen by using either ","position":{"start":{"line":97,"column":1,"offset":2921},"end":{"line":97,"column":42,"offset":2962},"indent":[]}},{"type":"inlineCode","value":"screen","position":{"start":{"line":97,"column":42,"offset":2962},"end":{"line":97,"column":50,"offset":2970},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":97,"column":50,"offset":2970},"end":{"line":97,"column":54,"offset":2974},"indent":[]}},{"type":"inlineCode","value":"screen -r $NAME","position":{"start":{"line":97,"column":54,"offset":2974},"end":{"line":97,"column":71,"offset":2991},"indent":[]}},{"type":"text","value":" to open a specific instance.","position":{"start":{"line":97,"column":71,"offset":2991},"end":{"line":97,"column":100,"offset":3020},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":2921},"end":{"line":97,"column":100,"offset":3020},"indent":[]}},{"type":"jsx","value":"<small>\n  Credits to discord user `@matha` for this question and `@pfj` for the\n  solution.\n</small>","position":{"start":{"line":99,"column":1,"offset":3022},"end":{"line":102,"column":9,"offset":3122},"indent":[1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Running Multiple Bots\"}","position":{"start":{"line":105,"column":1,"offset":3125},"end":{"line":105,"column":62,"offset":3186},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":105,"column":62,"offset":3186}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Running Multiple Bots\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Callout = makeShortcode(\"Callout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"multiple-bots-via-binary\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#multiple-bots-via-binary\",\n    \"aria-label\": \"multiple bots via binary permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Multiple bots via Binary\"), mdx(\"p\", null, \"Users can run multiple bots of Hummingbot installed via binary by simply running a new instance to open a new window.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/8dea2157520b20e16fbb35c1408d36bd/multiple_bots1.gif\",\n    \"alt\": null\n  }))), mdx(\"h3\", {\n    \"id\": \"multiple-bots-via-docker\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#multiple-bots-via-docker\",\n    \"aria-label\": \"multiple bots via docker permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Multiple bots via Docker\"), mdx(\"p\", null, \"Create multiple instances using \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"./create.sh\"), \" script. Then, use the following commands to download the create script and make it executable.\"), mdx(\"h3\", {\n    \"id\": \"linux\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#linux\",\n    \"aria-label\": \"linux permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Linux\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"linux\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-linux line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-linux\"\n  }), \"wget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\\nchmod a+x *.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"macos\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#macos\",\n    \"aria-label\": \"macos permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"MacOS\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"macos\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-macos line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-macos\"\n  }), \"curl https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh -o create.sh\\nchmod a+x *.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"windowsvia docker toolbox\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-windowsvia docker toolbox line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-windowsvia docker toolbox\"\n  }), \"cd ~\\ncurl https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh -o create.sh\\nchmod a+x *.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"running-in-the-background-via-docker\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#running-in-the-background-via-docker\",\n    \"aria-label\": \"running in the background via docker permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Running in the background (via Docker)\"), mdx(\"p\", null, \"Press keys \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Ctrl+P\"), \" then \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Ctrl+Q\"), \" in sequence to detach from Docker, i.e., return to the command line. This exits out of Hummingbot without shutting down the container instance.\"), mdx(\"p\", null, \"Restart or connect to a running instance using the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"./start.sh\"), \" script. Below commands download the start script and make it executable.\"), mdx(\"h3\", {\n    \"id\": \"linux-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#linux-1\",\n    \"aria-label\": \"linux 1 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Linux\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"linux\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-linux line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-linux\"\n  }), \"wget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\\nchmod a+x *.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"macos-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#macos-1\",\n    \"aria-label\": \"macos 1 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"MacOS\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"macos\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-macos line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-macos\"\n  }), \"curl https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh -o start.sh\\nchmod a+x *.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"multiple-bots-from-source\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#multiple-bots-from-source\",\n    \"aria-label\": \"multiple bots from source permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Multiple bots from source\"), mdx(Callout, {\n    type: \"tip\",\n    body: \"We recommend that users download and install Hummingbot separately for each instance they wish to run.\",\n    mdxType: \"Callout\"\n  }), mdx(\"p\", null, \"The below command downloads the Hummingbot repository from GitHub, where \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$FOLDER_NAME\"), \" is the name of the separate directory.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"cd ~\\ngit clone https://github.com/CoinAlpha/hummingbot.git $FOLDER_NAME\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Do another install in the new directory.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"cd $FOLDER_NAME\\n./install\\nconda activate hummingbot\\n./compile\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"running-in-the-background-from-source\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#running-in-the-background-from-source\",\n    \"aria-label\": \"running in the background from source permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Running in the background (from source)\"), mdx(\"p\", null, \"Use either \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"tmux\"), \" or \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"screen\"), \" to run multiple bots installed from source. Check out these external links how to use them.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://linuxize.com/post/getting-started-with-tmux/\"\n  }), \"Getting started with Tmux\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://linuxize.com/post/how-to-use-linux-screen/\"\n  }), \"How to use Linux Screen\"))), mdx(\"p\", null, \"When using screen to run an instance in the background, run either of the following commands: \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"screen\"), \" or \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"screen -S $NAME\"), \", where \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$NAME\"), \" is what you wish to call this background instance. Use the latter to be more explicit if you want to run multiple bots.\"), mdx(\"p\", null, \"Navigate to the folder where your separate Hummingbot is installed, then start the bot like normal.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"conda activate hummingbot\\nbin/hummingbot.py\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"To exit the screen (detach), press \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Ctrl+A\"), \" then \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Ctrl+D\"), \" in sequence.\"), mdx(\"p\", null, \"To list all running instances, use \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"screen -ls\"), \".\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/1b3d3f6fa4651d7405e428bef9b57c62/screen.png\",\n    \"alt\": \"List Screen Instances\"\n  }))), mdx(\"p\", null, \"Log back into the screen by using either \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"screen\"), \" or \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"screen -r $NAME\"), \" to open a specific instance.\"), mdx(\"small\", null, \"Credits to discord user `@matha` for this question and `@pfj` for the solution.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Running Multiple Bots\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Callout = makeShortcode(\"Callout\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h3 {...{\n      \"id\": \"multiple-bots-via-binary\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#multiple-bots-via-binary\",\n        \"aria-label\": \"multiple bots via binary permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Multiple bots via Binary`}</h3>\n    <p>{`Users can run multiple bots of Hummingbot installed via binary by simply running a new instance to open a new window.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/8dea2157520b20e16fbb35c1408d36bd/multiple_bots1.gif\",\n        \"alt\": null\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"multiple-bots-via-docker\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#multiple-bots-via-docker\",\n        \"aria-label\": \"multiple bots via docker permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Multiple bots via Docker`}</h3>\n    <p>{`Create multiple instances using `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`./create.sh`}</code>{` script. Then, use the following commands to download the create script and make it executable.`}</p>\n    <h3 {...{\n      \"id\": \"linux\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#linux\",\n        \"aria-label\": \"linux permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Linux`}</h3>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"linux\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-linux line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-linux\"\n        }}>{`wget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nchmod a+x *.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"macos\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#macos\",\n        \"aria-label\": \"macos permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`MacOS`}</h3>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"macos\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-macos line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-macos\"\n        }}>{`curl https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh -o create.sh\nchmod a+x *.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"windowsvia docker toolbox\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-windowsvia docker toolbox line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-windowsvia docker toolbox\"\n        }}>{`cd ~\ncurl https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh -o create.sh\nchmod a+x *.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"running-in-the-background-via-docker\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#running-in-the-background-via-docker\",\n        \"aria-label\": \"running in the background via docker permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Running in the background (via Docker)`}</h3>\n    <p>{`Press keys `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Ctrl+P`}</code>{` then `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Ctrl+Q`}</code>{` in sequence to detach from Docker, i.e., return to the command line. This exits out of Hummingbot without shutting down the container instance.`}</p>\n    <p>{`Restart or connect to a running instance using the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`./start.sh`}</code>{` script. Below commands download the start script and make it executable.`}</p>\n    <h3 {...{\n      \"id\": \"linux-1\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#linux-1\",\n        \"aria-label\": \"linux 1 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Linux`}</h3>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"linux\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-linux line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-linux\"\n        }}>{`wget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nchmod a+x *.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"macos-1\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#macos-1\",\n        \"aria-label\": \"macos 1 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`MacOS`}</h3>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"macos\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-macos line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-macos\"\n        }}>{`curl https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh -o start.sh\nchmod a+x *.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"multiple-bots-from-source\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#multiple-bots-from-source\",\n        \"aria-label\": \"multiple bots from source permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Multiple bots from source`}</h3>\n    <Callout type=\"tip\" body=\"We recommend that users download and install Hummingbot separately for each instance they wish to run.\" mdxType=\"Callout\" />\n    <p>{`The below command downloads the Hummingbot repository from GitHub, where `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$FOLDER_NAME`}</code>{` is the name of the separate directory.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`cd ~\ngit clone https://github.com/CoinAlpha/hummingbot.git $FOLDER_NAME`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Do another install in the new directory.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`cd $FOLDER_NAME\n./install\nconda activate hummingbot\n./compile`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"running-in-the-background-from-source\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#running-in-the-background-from-source\",\n        \"aria-label\": \"running in the background from source permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Running in the background (from source)`}</h3>\n    <p>{`Use either `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`tmux`}</code>{` or `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`screen`}</code>{` to run multiple bots installed from source. Check out these external links how to use them.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://linuxize.com/post/getting-started-with-tmux/\"\n        }}>{`Getting started with Tmux`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://linuxize.com/post/how-to-use-linux-screen/\"\n        }}>{`How to use Linux Screen`}</a></li>\n    </ul>\n    <p>{`When using screen to run an instance in the background, run either of the following commands: `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`screen`}</code>{` or `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`screen -S $NAME`}</code>{`, where `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$NAME`}</code>{` is what you wish to call this background instance. Use the latter to be more explicit if you want to run multiple bots.`}</p>\n    <p>{`Navigate to the folder where your separate Hummingbot is installed, then start the bot like normal.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`conda activate hummingbot\nbin/hummingbot.py`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`To exit the screen (detach), press `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Ctrl+A`}</code>{` then `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Ctrl+D`}</code>{` in sequence.`}</p>\n    <p>{`To list all running instances, use `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`screen -ls`}</code>{`.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/1b3d3f6fa4651d7405e428bef9b57c62/screen.png\",\n        \"alt\": \"List Screen Instances\"\n      }}></img></p>\n    <p>{`Log back into the screen by using either `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`screen`}</code>{` or `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`screen -r $NAME`}</code>{` to open a specific instance.`}</p>\n    <small>\n  Credits to discord user `@matha` for this question and `@pfj` for the\n  solution.\n    </small>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}