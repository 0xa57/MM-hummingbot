{"expireTime":9007200881073057000,"key":"gatsby-plugin-mdx-entire-payload-cdf0d08a01a5c51aaa1275ed1ae794c1-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import Callout from \"../../src/components/Callout\";","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":52,"offset":52},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can install Docker and/or Hummingbot by selecting ","position":{"start":{"line":4,"column":1,"offset":54},"end":{"line":4,"column":55,"offset":108},"indent":[]}},{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"either","position":{"start":{"line":4,"column":58,"offset":111},"end":{"line":4,"column":64,"offset":117},"indent":[]}}],"position":{"start":{"line":4,"column":57,"offset":110},"end":{"line":4,"column":65,"offset":118},"indent":[]}}],"position":{"start":{"line":4,"column":55,"offset":108},"end":{"line":4,"column":67,"offset":120},"indent":[]}},{"type":"text","value":" of the following options from the tabs below:","position":{"start":{"line":4,"column":67,"offset":120},"end":{"line":4,"column":113,"offset":166},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":54},"end":{"line":4,"column":113,"offset":166},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Scripts","position":{"start":{"line":6,"column":5,"offset":172},"end":{"line":6,"column":12,"offset":179},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":170},"end":{"line":6,"column":14,"offset":181},"indent":[]}},{"type":"text","value":": download and use automated install scripts.","position":{"start":{"line":6,"column":14,"offset":181},"end":{"line":6,"column":59,"offset":226},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":170},"end":{"line":6,"column":59,"offset":226},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":168},"end":{"line":6,"column":59,"offset":226},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Manual","position":{"start":{"line":7,"column":5,"offset":231},"end":{"line":7,"column":11,"offset":237},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":229},"end":{"line":7,"column":13,"offset":239},"indent":[]}},{"type":"text","value":": run install commands manually.","position":{"start":{"line":7,"column":13,"offset":239},"end":{"line":7,"column":45,"offset":271},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":229},"end":{"line":7,"column":45,"offset":271},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":227},"end":{"line":7,"column":45,"offset":271},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":168},"end":{"line":7,"column":45,"offset":271},"indent":[1]}},{"type":"jsx","value":"<Callout\n  type=\"info\"\n  body=\"Recommended for Developers Only — Installation using Docker is more efficient for running Hummingbot. Installing from source is only recommended for developers who want to access and modify the software code.\"\n/>","position":{"start":{"line":9,"column":1,"offset":273},"end":{"line":12,"column":3,"offset":516},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Or prepare your development environment and get started developing for Hummingbot.","position":{"start":{"line":14,"column":1,"offset":518},"end":{"line":14,"column":83,"offset":600},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":518},"end":{"line":14,"column":83,"offset":600},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Ubuntu","position":{"start":{"line":16,"column":4,"offset":605},"end":{"line":16,"column":10,"offset":611},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":602},"end":{"line":16,"column":10,"offset":611},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Install via Docker","position":{"start":{"line":18,"column":5,"offset":617},"end":{"line":18,"column":23,"offset":635},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":613},"end":{"line":18,"column":23,"offset":635},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Supported versions: 16.04 LTS, 18.04 LTS, 19.04","position":{"start":{"line":20,"column":2,"offset":638},"end":{"line":20,"column":49,"offset":685},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":637},"end":{"line":20,"column":50,"offset":686},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":637},"end":{"line":20,"column":50,"offset":686},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Docker","position":{"start":{"line":22,"column":4,"offset":691},"end":{"line":22,"column":18,"offset":705},"indent":[]}}],"position":{"start":{"line":22,"column":4,"offset":691},"end":{"line":22,"column":18,"offset":705},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":688},"end":{"line":22,"column":18,"offset":705},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":688},"end":{"line":22,"column":18,"offset":705},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Skip this step if you already have Docker installed. Run the following commands:","position":{"start":{"line":24,"column":1,"offset":707},"end":{"line":24,"column":81,"offset":787},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":707},"end":{"line":24,"column":81,"offset":787},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":26,"column":1,"offset":789},"end":{"line":26,"column":8,"offset":796},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":789},"end":{"line":26,"column":8,"offset":796},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download Docker install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-docker/install-docker-ubuntu.sh\n\n# 2) Enable script permissions\nchmod a+x install-docker-ubuntu.sh\n\n# 3) Run installation\n./install-docker-ubuntu.sh","position":{"start":{"line":28,"column":1,"offset":798},"end":{"line":37,"column":4,"offset":1090},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":39,"column":1,"offset":1092},"end":{"line":39,"column":7,"offset":1098},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1092},"end":{"line":39,"column":7,"offset":1098},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Update Ubuntu's database of software\nsudo apt-get update\n\n# 2) Install tmux\nsudo apt-get install -y tmux\n\n# 3) Install Docker\nsudo apt install -y docker.io\n\n# 4) Start and Automate Docker\nsudo systemctl start docker && sudo systemctl enable docker\n\n# 5) Change permissions for docker (optional)\n# Allow docker commands without requiring sudo prefix\nsudo usermod -a -G docker $USER\n\n# 6) Close terminal\nexit","position":{"start":{"line":41,"column":1,"offset":1100},"end":{"line":60,"column":4,"offset":1525},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Callout\n  type=\"warning\"\n  body=\"Please restart terminal — Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding to next step.\"\n/>","position":{"start":{"line":62,"column":1,"offset":1527},"end":{"line":65,"column":3,"offset":1716},"indent":[1,1,1]}},{"type":"list","ordered":true,"start":2,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Hummingbot","position":{"start":{"line":67,"column":4,"offset":1721},"end":{"line":67,"column":22,"offset":1739},"indent":[]}}],"position":{"start":{"line":67,"column":4,"offset":1721},"end":{"line":67,"column":22,"offset":1739},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1718},"end":{"line":67,"column":22,"offset":1739},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1718},"end":{"line":67,"column":22,"offset":1739},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run the following commands:","position":{"start":{"line":69,"column":1,"offset":1741},"end":{"line":69,"column":28,"offset":1768},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1741},"end":{"line":69,"column":28,"offset":1768},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":71,"column":1,"offset":1770},"end":{"line":71,"column":8,"offset":1777},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1770},"end":{"line":71,"column":8,"offset":1777},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download Hummingbot install, start, and update script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\n\n# 2) Enable script permissions\nchmod a+x *.sh\n\n# 3) Create a hummingbot instance\n./create.sh","position":{"start":{"line":73,"column":1,"offset":1779},"end":{"line":84,"column":4,"offset":2278},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":86,"column":1,"offset":2280},"end":{"line":86,"column":7,"offset":2286},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2280},"end":{"line":86,"column":7,"offset":2286},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Create folder for your new instance\nmkdir hummingbot_files\n\n# 2) Create folders for logs, config files and database file\nmkdir hummingbot_files/hummingbot_conf\nmkdir hummingbot_files/hummingbot_logs\nmkdir hummingbot_files/hummingbot_data\nmkdir hummingbot_files/hummingbot_scripts\n\n# 3) Launch a new instance of hummingbot\ndocker run -it \\\n--network host \\\n--name hummingbot-instance \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\" \\\ncoinalpha/hummingbot:latest","position":{"start":{"line":88,"column":1,"offset":2288},"end":{"line":107,"column":4,"offset":3077},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Install from Source","position":{"start":{"line":109,"column":5,"offset":3083},"end":{"line":109,"column":24,"offset":3102},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3079},"end":{"line":109,"column":24,"offset":3102},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Supported versions: 16.04 LTS, 18.04 LTS, 19.04","position":{"start":{"line":111,"column":2,"offset":3105},"end":{"line":111,"column":49,"offset":3152},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":3104},"end":{"line":111,"column":50,"offset":3153},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":3104},"end":{"line":111,"column":50,"offset":3153},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":113,"column":1,"offset":3155},"end":{"line":113,"column":8,"offset":3162},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3155},"end":{"line":113,"column":8,"offset":3162},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-from-source/install-source-ubuntu.sh\n\n# 2) Enable script permissions\nchmod a+x install-source-ubuntu.sh\n\n# 3) Run installation\n./install-source-ubuntu.sh","position":{"start":{"line":115,"column":1,"offset":3164},"end":{"line":124,"column":4,"offset":3454},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":126,"column":1,"offset":3456},"end":{"line":126,"column":7,"offset":3462},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3456},"end":{"line":126,"column":7,"offset":3462},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Install dependencies\nsudo apt-get update\nsudo apt-get install -y build-essential\n\n# 2) Install Miniconda3\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nsh Miniconda3-latest-Linux-x86_64.sh\n\n# 3) Reload .bashrc to register \"conda\" command\nexec bash\n\n# 4) Clone Hummingbot\ngit clone https://github.com/CoinAlpha/hummingbot.git\n\n# 5) Install Hummingbot\ncd hummingbot && ./clean && ./install\n\n# 6) Activate environment and compile code\nconda activate hummingbot && ./compile\n\n# 7) Start Hummingbot\nbin/hummingbot.py","position":{"start":{"line":128,"column":1,"offset":3464},"end":{"line":151,"column":4,"offset":4023},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After installing Hummingbot from source, see ","position":{"start":{"line":153,"column":1,"offset":4025},"end":{"line":153,"column":46,"offset":4070},"indent":[]}},{"type":"link","title":null,"url":"/operation/launch-exit/","children":[{"type":"text","value":"Launch Hummingbot from source","position":{"start":{"line":153,"column":47,"offset":4071},"end":{"line":153,"column":76,"offset":4100},"indent":[]}}],"position":{"start":{"line":153,"column":46,"offset":4070},"end":{"line":153,"column":102,"offset":4126},"indent":[]}},{"type":"text","value":" for instructions on how to start and run Hummingbot from source.","position":{"start":{"line":153,"column":102,"offset":4126},"end":{"line":153,"column":167,"offset":4191},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":4025},"end":{"line":153,"column":167,"offset":4191},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Debian","position":{"start":{"line":155,"column":4,"offset":4196},"end":{"line":155,"column":10,"offset":4202},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":4193},"end":{"line":155,"column":10,"offset":4202},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Install via Docker","position":{"start":{"line":157,"column":5,"offset":4208},"end":{"line":157,"column":23,"offset":4226},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":4204},"end":{"line":157,"column":23,"offset":4226},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Supported version: Debian GNU/Linux 9","position":{"start":{"line":159,"column":2,"offset":4229},"end":{"line":159,"column":39,"offset":4266},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":4228},"end":{"line":159,"column":40,"offset":4267},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":4228},"end":{"line":159,"column":40,"offset":4267},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Docker","position":{"start":{"line":161,"column":4,"offset":4272},"end":{"line":161,"column":18,"offset":4286},"indent":[]}}],"position":{"start":{"line":161,"column":4,"offset":4272},"end":{"line":161,"column":18,"offset":4286},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4269},"end":{"line":161,"column":18,"offset":4286},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4269},"end":{"line":161,"column":18,"offset":4286},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Skip this step if you already have Docker installed. Run the following commands:","position":{"start":{"line":163,"column":1,"offset":4288},"end":{"line":163,"column":81,"offset":4368},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":4288},"end":{"line":163,"column":81,"offset":4368},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":165,"column":1,"offset":4370},"end":{"line":165,"column":8,"offset":4377},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":4370},"end":{"line":165,"column":8,"offset":4377},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download Docker install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-docker/install-docker-debian.sh\n\n# 2) Enable script permissions\nchmod a+x install-docker-debian.sh\n\n# 3) Run installation\n./install-docker-debian.sh","position":{"start":{"line":167,"column":1,"offset":4379},"end":{"line":176,"column":4,"offset":4671},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":178,"column":1,"offset":4673},"end":{"line":178,"column":7,"offset":4679},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":4673},"end":{"line":178,"column":7,"offset":4679},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Update package database\nsudo apt update\n\n# 2) Install dependencies\nsudo apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common tmux\n\n# 3) Register Docker repository to your system\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"\nsudo apt update\n\n# 4) Install Docker\nsudo apt install -y docker-ce\n\n# 5) Change permissions for docker (optional)\n# Allow docker commands without requiring sudo prefix\nsudo usermod -a -G docker $USER\n\n# 6) Close terminal\nexit","position":{"start":{"line":180,"column":1,"offset":4681},"end":{"line":201,"column":4,"offset":5327},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Callout\n  type=\"warning\"\n  body=\"Please restart terminal — Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding to next step.\"\n/>","position":{"start":{"line":203,"column":1,"offset":5329},"end":{"line":206,"column":3,"offset":5518},"indent":[1,1,1]}},{"type":"list","ordered":true,"start":2,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Hummingbot","position":{"start":{"line":208,"column":4,"offset":5523},"end":{"line":208,"column":22,"offset":5541},"indent":[]}}],"position":{"start":{"line":208,"column":4,"offset":5523},"end":{"line":208,"column":22,"offset":5541},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":5520},"end":{"line":208,"column":22,"offset":5541},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":5520},"end":{"line":208,"column":22,"offset":5541},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run the following commands:","position":{"start":{"line":210,"column":1,"offset":5543},"end":{"line":210,"column":28,"offset":5570},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":5543},"end":{"line":210,"column":28,"offset":5570},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":212,"column":1,"offset":5572},"end":{"line":212,"column":8,"offset":5579},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":5572},"end":{"line":212,"column":8,"offset":5579},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download Hummingbot install, start, and update script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\n\n# 2) Enable script permissions\nchmod a+x *.sh\n\n# 3) Create a hummingbot instance\n./create.sh","position":{"start":{"line":214,"column":1,"offset":5581},"end":{"line":225,"column":4,"offset":6080},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":227,"column":1,"offset":6082},"end":{"line":227,"column":7,"offset":6088},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":6082},"end":{"line":227,"column":7,"offset":6088},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Create folder for your new instance\nmkdir hummingbot_files\n\n# 2) Create folders for logs, config files and database file\nmkdir hummingbot_files/hummingbot_conf\nmkdir hummingbot_files/hummingbot_logs\nmkdir hummingbot_files/hummingbot_data\nmkdir hummingbot_files/hummingbot_scripts\n\n# 3) Launch a new instance of hummingbot\ndocker run -it \\\n--network host \\\n--name hummingbot-instance \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\" \\\ncoinalpha/hummingbot:latest","position":{"start":{"line":229,"column":1,"offset":6090},"end":{"line":248,"column":4,"offset":6879},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Install from Source","position":{"start":{"line":250,"column":5,"offset":6885},"end":{"line":250,"column":24,"offset":6904},"indent":[]}}],"position":{"start":{"line":250,"column":1,"offset":6881},"end":{"line":250,"column":24,"offset":6904},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Supported version: Debian GNU/Linux 9","position":{"start":{"line":252,"column":2,"offset":6907},"end":{"line":252,"column":39,"offset":6944},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":6906},"end":{"line":252,"column":40,"offset":6945},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":6906},"end":{"line":252,"column":40,"offset":6945},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":254,"column":1,"offset":6947},"end":{"line":254,"column":8,"offset":6954},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":6947},"end":{"line":254,"column":8,"offset":6954},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-from-source/install-source-debian.sh\n\n# 2) Enable script permissions\nchmod a+x install-source-debian.sh\n\n# 3) Run installation\n./install-source-debian.sh","position":{"start":{"line":256,"column":1,"offset":6956},"end":{"line":265,"column":4,"offset":7246},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":267,"column":1,"offset":7248},"end":{"line":267,"column":7,"offset":7254},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":7248},"end":{"line":267,"column":7,"offset":7254},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Install dependencies\nsudo apt-get update\nsudo apt-get install -y build-essential git\n\n# 2) Install Miniconda3\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nbash Miniconda3-latest-Linux-x86_64.sh\n\n# 3) Reload .bashrc to register \"conda\" command\nexec bash\n\n# 4) Clone Hummingbot\ngit clone https://github.com/CoinAlpha/hummingbot.git\n\n# 5) Install Hummingbot\ncd hummingbot && ./clean && ./install\n\n# 6) Activate environment and compile code\nconda activate hummingbot && ./compile\n\n# 7) Start Hummingbot\nbin/hummingbot.py","position":{"start":{"line":269,"column":1,"offset":7256},"end":{"line":292,"column":4,"offset":7821},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After installing Hummingbot from source, see ","position":{"start":{"line":294,"column":1,"offset":7823},"end":{"line":294,"column":46,"offset":7868},"indent":[]}},{"type":"link","title":null,"url":"/operation/launch-exit/","children":[{"type":"text","value":"Launch Hummingbot from source","position":{"start":{"line":294,"column":47,"offset":7869},"end":{"line":294,"column":76,"offset":7898},"indent":[]}}],"position":{"start":{"line":294,"column":46,"offset":7868},"end":{"line":294,"column":102,"offset":7924},"indent":[]}},{"type":"text","value":" for instructions on how to start and run Hummingbot from source.","position":{"start":{"line":294,"column":102,"offset":7924},"end":{"line":294,"column":167,"offset":7989},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":7823},"end":{"line":294,"column":167,"offset":7989},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"CentOS","position":{"start":{"line":296,"column":4,"offset":7994},"end":{"line":296,"column":10,"offset":8000},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":7991},"end":{"line":296,"column":10,"offset":8000},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Install via Docker","position":{"start":{"line":298,"column":5,"offset":8006},"end":{"line":298,"column":23,"offset":8024},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":8002},"end":{"line":298,"column":23,"offset":8024},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Supported version: 7","position":{"start":{"line":300,"column":2,"offset":8027},"end":{"line":300,"column":22,"offset":8047},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":8026},"end":{"line":300,"column":23,"offset":8048},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":8026},"end":{"line":300,"column":23,"offset":8048},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Docker","position":{"start":{"line":302,"column":4,"offset":8053},"end":{"line":302,"column":18,"offset":8067},"indent":[]}}],"position":{"start":{"line":302,"column":4,"offset":8053},"end":{"line":302,"column":18,"offset":8067},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":8050},"end":{"line":302,"column":18,"offset":8067},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":8050},"end":{"line":302,"column":18,"offset":8067},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Skip this step if you already have Docker installed. Run the following commands:","position":{"start":{"line":304,"column":1,"offset":8069},"end":{"line":304,"column":81,"offset":8149},"indent":[]}}],"position":{"start":{"line":304,"column":1,"offset":8069},"end":{"line":304,"column":81,"offset":8149},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":306,"column":1,"offset":8151},"end":{"line":306,"column":8,"offset":8158},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":8151},"end":{"line":306,"column":8,"offset":8158},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download Docker install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-docker/install-docker-centos.sh\n\n# 2) Enable script permissions\nchmod a+x install-docker-centos.sh\n\n# 3) Run installation\n./install-docker-centos.sh","position":{"start":{"line":308,"column":1,"offset":8160},"end":{"line":317,"column":4,"offset":8452},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":319,"column":1,"offset":8454},"end":{"line":319,"column":7,"offset":8460},"indent":[]}}],"position":{"start":{"line":319,"column":1,"offset":8454},"end":{"line":319,"column":7,"offset":8460},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Update package database\nsudo yum check-update\n\n# 2) Install tmux\nsudo yum -y install tmux\n\n# 3) Install Docker\ncurl -fsSL https://get.docker.com/ | sh\n\n# 4) Start and Automate Docker\nsudo systemctl start docker && sudo systemctl enable docker\n\n# 5) Change permissions for docker (optional)\n# Allow docker commands without requiring sudo prefix\nsudo usermod -a -G docker $USER\n\n# 6) Close terminal\nexit","position":{"start":{"line":321,"column":1,"offset":8462},"end":{"line":340,"column":4,"offset":8882},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Callout\n  type=\"warning\"\n  body=\"Please restart terminal — Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding to next step.\"\n/>","position":{"start":{"line":342,"column":1,"offset":8884},"end":{"line":345,"column":3,"offset":9073},"indent":[1,1,1]}},{"type":"list","ordered":true,"start":2,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Hummingbot","position":{"start":{"line":347,"column":4,"offset":9078},"end":{"line":347,"column":22,"offset":9096},"indent":[]}}],"position":{"start":{"line":347,"column":4,"offset":9078},"end":{"line":347,"column":22,"offset":9096},"indent":[]}}],"position":{"start":{"line":347,"column":1,"offset":9075},"end":{"line":347,"column":22,"offset":9096},"indent":[]}}],"position":{"start":{"line":347,"column":1,"offset":9075},"end":{"line":347,"column":22,"offset":9096},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Run the following commands:","position":{"start":{"line":349,"column":1,"offset":9098},"end":{"line":349,"column":28,"offset":9125},"indent":[]}}],"position":{"start":{"line":349,"column":1,"offset":9098},"end":{"line":349,"column":28,"offset":9125},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":351,"column":1,"offset":9127},"end":{"line":351,"column":8,"offset":9134},"indent":[]}}],"position":{"start":{"line":351,"column":1,"offset":9127},"end":{"line":351,"column":8,"offset":9134},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download Hummingbot install, start, and update script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\n\n# 2) Enable script permissions\nchmod a+x *.sh\n\n# 3) Create a hummingbot instance\n./create.sh","position":{"start":{"line":353,"column":1,"offset":9136},"end":{"line":364,"column":4,"offset":9635},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":366,"column":1,"offset":9637},"end":{"line":366,"column":7,"offset":9643},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":9637},"end":{"line":366,"column":7,"offset":9643},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Create folder for your new instance\nmkdir hummingbot_files\n\n# 2) Create folders for logs, config files and database file\nmkdir hummingbot_files/hummingbot_conf\nmkdir hummingbot_files/hummingbot_logs\nmkdir hummingbot_files/hummingbot_data\nmkdir hummingbot_files/hummingbot_scripts\n\n# 3) Launch a new instance of hummingbot\ndocker run -it \\\n--network host \\\n--name hummingbot-instance \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\" \\\ncoinalpha/hummingbot:latest","position":{"start":{"line":368,"column":1,"offset":9645},"end":{"line":387,"column":4,"offset":10434},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Install from Source","position":{"start":{"line":389,"column":5,"offset":10440},"end":{"line":389,"column":24,"offset":10459},"indent":[]}}],"position":{"start":{"line":389,"column":1,"offset":10436},"end":{"line":389,"column":24,"offset":10459},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Supported version: 7","position":{"start":{"line":391,"column":2,"offset":10462},"end":{"line":391,"column":22,"offset":10482},"indent":[]}}],"position":{"start":{"line":391,"column":1,"offset":10461},"end":{"line":391,"column":23,"offset":10483},"indent":[]}}],"position":{"start":{"line":391,"column":1,"offset":10461},"end":{"line":391,"column":23,"offset":10483},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":393,"column":1,"offset":10485},"end":{"line":393,"column":8,"offset":10492},"indent":[]}}],"position":{"start":{"line":393,"column":1,"offset":10485},"end":{"line":393,"column":8,"offset":10492},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-from-source/install-source-centos.sh\n\n# 2) Enable script permissions\nchmod a+x install-source-centos.sh\n\n# 3) Run installation\n./install-source-centos.sh","position":{"start":{"line":395,"column":1,"offset":10494},"end":{"line":404,"column":4,"offset":10784},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":406,"column":1,"offset":10786},"end":{"line":406,"column":7,"offset":10792},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":10786},"end":{"line":406,"column":7,"offset":10792},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Install dependencies\nsudo yum install -y wget bzip2 git\nsudo yum groupinstall -y 'Development Tools'\n\n# 2) Install Miniconda3\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nsh Miniconda3-latest-Linux-x86_64.sh\n\n# 3) Reload .bashrc to register \"conda\" command\nexec bash\n\n# 4) Clone Hummingbot\ngit clone https://github.com/CoinAlpha/hummingbot.git\n\n# 5) Install Hummingbot\ncd hummingbot && ./clean && ./install\n\n# 6) Activate environment and compile code\nconda activate hummingbot && ./compile\n\n# 7) Start Hummingbot\nbin/hummingbot.py","position":{"start":{"line":408,"column":1,"offset":10794},"end":{"line":431,"column":4,"offset":11373},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After installing Hummingbot from source, see ","position":{"start":{"line":433,"column":1,"offset":11375},"end":{"line":433,"column":46,"offset":11420},"indent":[]}},{"type":"link","title":null,"url":"/operation/launch-exit/","children":[{"type":"text","value":"Launch Hummingbot from source","position":{"start":{"line":433,"column":47,"offset":11421},"end":{"line":433,"column":76,"offset":11450},"indent":[]}}],"position":{"start":{"line":433,"column":46,"offset":11420},"end":{"line":433,"column":102,"offset":11476},"indent":[]}},{"type":"text","value":" for instructions on how to start and run Hummingbot from source.","position":{"start":{"line":433,"column":102,"offset":11476},"end":{"line":433,"column":167,"offset":11541},"indent":[]}}],"position":{"start":{"line":433,"column":1,"offset":11375},"end":{"line":433,"column":167,"offset":11541},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Developer Notes","position":{"start":{"line":435,"column":4,"offset":11546},"end":{"line":435,"column":19,"offset":11561},"indent":[]}}],"position":{"start":{"line":435,"column":1,"offset":11543},"end":{"line":435,"column":19,"offset":11561},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Additional details of the scripts can be found on ","position":{"start":{"line":437,"column":3,"offset":11565},"end":{"line":437,"column":53,"offset":11615},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/development/installation/install-docker","children":[{"type":"text","value":"Github: Hummingbot Install with Docker","position":{"start":{"line":437,"column":54,"offset":11616},"end":{"line":437,"column":92,"offset":11654},"indent":[]}}],"position":{"start":{"line":437,"column":53,"offset":11615},"end":{"line":437,"column":179,"offset":11741},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":437,"column":179,"offset":11741},"end":{"line":437,"column":180,"offset":11742},"indent":[]}}],"position":{"start":{"line":437,"column":3,"offset":11565},"end":{"line":437,"column":180,"offset":11742},"indent":[]}}],"position":{"start":{"line":437,"column":1,"offset":11563},"end":{"line":437,"column":180,"offset":11742},"indent":[]}}],"position":{"start":{"line":437,"column":1,"offset":11563},"end":{"line":437,"column":180,"offset":11742},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Linux\",\"description\":\"Ubuntu, Debian, CentOS and Source Installation Guide\"}","position":{"start":{"line":440,"column":1,"offset":11745},"end":{"line":440,"column":115,"offset":11859},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":440,"column":115,"offset":11859}}},"scopeImports":["import Callout from \"../../src/components/Callout\";","import * as React from 'react'"],"scopeIdentifiers":["Callout","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Linux\",\n  \"description\": \"Ubuntu, Debian, CentOS and Source Installation Guide\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You can install Docker and/or Hummingbot by selecting \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"either\")), \" of the following options from the tabs below:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Scripts\"), \": download and use automated install scripts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Manual\"), \": run install commands manually.\")), mdx(Callout, {\n    type: \"info\",\n    body: \"Recommended for Developers Only \\u2014 Installation using Docker is more efficient for running Hummingbot. Installing from source is only recommended for developers who want to access and modify the software code.\",\n    mdxType: \"Callout\"\n  }), mdx(\"p\", null, \"Or prepare your development environment and get started developing for Hummingbot.\"), mdx(\"h2\", {\n    \"id\": \"ubuntu\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#ubuntu\",\n    \"aria-label\": \"ubuntu permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Ubuntu\"), mdx(\"h3\", {\n    \"id\": \"install-via-docker\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#install-via-docker\",\n    \"aria-label\": \"install via docker permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install via Docker\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Supported versions: 16.04 LTS, 18.04 LTS, 19.04\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Docker\")), mdx(\"p\", null, \"Skip this step if you already have Docker installed. Run the following commands:\"), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download Docker install script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-docker/install-docker-ubuntu.sh\\n\\n# 2) Enable script permissions\\nchmod a+x install-docker-ubuntu.sh\\n\\n# 3) Run installation\\n./install-docker-ubuntu.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Update Ubuntu's database of software\\nsudo apt-get update\\n\\n# 2) Install tmux\\nsudo apt-get install -y tmux\\n\\n# 3) Install Docker\\nsudo apt install -y docker.io\\n\\n# 4) Start and Automate Docker\\nsudo systemctl start docker && sudo systemctl enable docker\\n\\n# 5) Change permissions for docker (optional)\\n# Allow docker commands without requiring sudo prefix\\nsudo usermod -a -G docker $USER\\n\\n# 6) Close terminal\\nexit\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(Callout, {\n    type: \"warning\",\n    body: \"Please restart terminal \\u2014 Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding to next step.\",\n    mdxType: \"Callout\"\n  }), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Hummingbot\")), mdx(\"p\", null, \"Run the following commands:\"), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download Hummingbot install, start, and update script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\\n\\n# 2) Enable script permissions\\nchmod a+x *.sh\\n\\n# 3) Create a hummingbot instance\\n./create.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Create folder for your new instance\\nmkdir hummingbot_files\\n\\n# 2) Create folders for logs, config files and database file\\nmkdir hummingbot_files/hummingbot_conf\\nmkdir hummingbot_files/hummingbot_logs\\nmkdir hummingbot_files/hummingbot_data\\nmkdir hummingbot_files/hummingbot_scripts\\n\\n# 3) Launch a new instance of hummingbot\\ndocker run -it \\\\\\n--network host \\\\\\n--name hummingbot-instance \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\\\" \\\\\\ncoinalpha/hummingbot:latest\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"install-from-source\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#install-from-source\",\n    \"aria-label\": \"install from source permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install from Source\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Supported versions: 16.04 LTS, 18.04 LTS, 19.04\")), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download install script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-from-source/install-source-ubuntu.sh\\n\\n# 2) Enable script permissions\\nchmod a+x install-source-ubuntu.sh\\n\\n# 3) Run installation\\n./install-source-ubuntu.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Install dependencies\\nsudo apt-get update\\nsudo apt-get install -y build-essential\\n\\n# 2) Install Miniconda3\\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\\nsh Miniconda3-latest-Linux-x86_64.sh\\n\\n# 3) Reload .bashrc to register \\\"conda\\\" command\\nexec bash\\n\\n# 4) Clone Hummingbot\\ngit clone https://github.com/CoinAlpha/hummingbot.git\\n\\n# 5) Install Hummingbot\\ncd hummingbot && ./clean && ./install\\n\\n# 6) Activate environment and compile code\\nconda activate hummingbot && ./compile\\n\\n# 7) Start Hummingbot\\nbin/hummingbot.py\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"After installing Hummingbot from source, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/operation/launch-exit/\"\n  }), \"Launch Hummingbot from source\"), \" for instructions on how to start and run Hummingbot from source.\"), mdx(\"h2\", {\n    \"id\": \"debian\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#debian\",\n    \"aria-label\": \"debian permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Debian\"), mdx(\"h3\", {\n    \"id\": \"install-via-docker-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#install-via-docker-1\",\n    \"aria-label\": \"install via docker 1 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install via Docker\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Supported version: Debian GNU/Linux 9\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Docker\")), mdx(\"p\", null, \"Skip this step if you already have Docker installed. Run the following commands:\"), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download Docker install script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-docker/install-docker-debian.sh\\n\\n# 2) Enable script permissions\\nchmod a+x install-docker-debian.sh\\n\\n# 3) Run installation\\n./install-docker-debian.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Update package database\\nsudo apt update\\n\\n# 2) Install dependencies\\nsudo apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common tmux\\n\\n# 3) Register Docker repository to your system\\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -\\nsudo add-apt-repository \\\"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\\\"\\nsudo apt update\\n\\n# 4) Install Docker\\nsudo apt install -y docker-ce\\n\\n# 5) Change permissions for docker (optional)\\n# Allow docker commands without requiring sudo prefix\\nsudo usermod -a -G docker $USER\\n\\n# 6) Close terminal\\nexit\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(Callout, {\n    type: \"warning\",\n    body: \"Please restart terminal \\u2014 Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding to next step.\",\n    mdxType: \"Callout\"\n  }), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Hummingbot\")), mdx(\"p\", null, \"Run the following commands:\"), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download Hummingbot install, start, and update script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\\n\\n# 2) Enable script permissions\\nchmod a+x *.sh\\n\\n# 3) Create a hummingbot instance\\n./create.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Create folder for your new instance\\nmkdir hummingbot_files\\n\\n# 2) Create folders for logs, config files and database file\\nmkdir hummingbot_files/hummingbot_conf\\nmkdir hummingbot_files/hummingbot_logs\\nmkdir hummingbot_files/hummingbot_data\\nmkdir hummingbot_files/hummingbot_scripts\\n\\n# 3) Launch a new instance of hummingbot\\ndocker run -it \\\\\\n--network host \\\\\\n--name hummingbot-instance \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\\\" \\\\\\ncoinalpha/hummingbot:latest\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"install-from-source-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#install-from-source-1\",\n    \"aria-label\": \"install from source 1 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install from Source\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Supported version: Debian GNU/Linux 9\")), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download install script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-from-source/install-source-debian.sh\\n\\n# 2) Enable script permissions\\nchmod a+x install-source-debian.sh\\n\\n# 3) Run installation\\n./install-source-debian.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Install dependencies\\nsudo apt-get update\\nsudo apt-get install -y build-essential git\\n\\n# 2) Install Miniconda3\\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\\nbash Miniconda3-latest-Linux-x86_64.sh\\n\\n# 3) Reload .bashrc to register \\\"conda\\\" command\\nexec bash\\n\\n# 4) Clone Hummingbot\\ngit clone https://github.com/CoinAlpha/hummingbot.git\\n\\n# 5) Install Hummingbot\\ncd hummingbot && ./clean && ./install\\n\\n# 6) Activate environment and compile code\\nconda activate hummingbot && ./compile\\n\\n# 7) Start Hummingbot\\nbin/hummingbot.py\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"After installing Hummingbot from source, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/operation/launch-exit/\"\n  }), \"Launch Hummingbot from source\"), \" for instructions on how to start and run Hummingbot from source.\"), mdx(\"h2\", {\n    \"id\": \"centos\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#centos\",\n    \"aria-label\": \"centos permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"CentOS\"), mdx(\"h3\", {\n    \"id\": \"install-via-docker-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#install-via-docker-2\",\n    \"aria-label\": \"install via docker 2 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install via Docker\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Supported version: 7\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Docker\")), mdx(\"p\", null, \"Skip this step if you already have Docker installed. Run the following commands:\"), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download Docker install script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-docker/install-docker-centos.sh\\n\\n# 2) Enable script permissions\\nchmod a+x install-docker-centos.sh\\n\\n# 3) Run installation\\n./install-docker-centos.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Update package database\\nsudo yum check-update\\n\\n# 2) Install tmux\\nsudo yum -y install tmux\\n\\n# 3) Install Docker\\ncurl -fsSL https://get.docker.com/ | sh\\n\\n# 4) Start and Automate Docker\\nsudo systemctl start docker && sudo systemctl enable docker\\n\\n# 5) Change permissions for docker (optional)\\n# Allow docker commands without requiring sudo prefix\\nsudo usermod -a -G docker $USER\\n\\n# 6) Close terminal\\nexit\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(Callout, {\n    type: \"warning\",\n    body: \"Please restart terminal \\u2014 Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding to next step.\",\n    mdxType: \"Callout\"\n  }), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Hummingbot\")), mdx(\"p\", null, \"Run the following commands:\"), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download Hummingbot install, start, and update script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\\n\\n# 2) Enable script permissions\\nchmod a+x *.sh\\n\\n# 3) Create a hummingbot instance\\n./create.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Create folder for your new instance\\nmkdir hummingbot_files\\n\\n# 2) Create folders for logs, config files and database file\\nmkdir hummingbot_files/hummingbot_conf\\nmkdir hummingbot_files/hummingbot_logs\\nmkdir hummingbot_files/hummingbot_data\\nmkdir hummingbot_files/hummingbot_scripts\\n\\n# 3) Launch a new instance of hummingbot\\ndocker run -it \\\\\\n--network host \\\\\\n--name hummingbot-instance \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\\\" \\\\\\ncoinalpha/hummingbot:latest\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h3\", {\n    \"id\": \"install-from-source-2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#install-from-source-2\",\n    \"aria-label\": \"install from source 2 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install from Source\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Supported version: 7\")), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download install script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-from-source/install-source-centos.sh\\n\\n# 2) Enable script permissions\\nchmod a+x install-source-centos.sh\\n\\n# 3) Run installation\\n./install-source-centos.sh\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Install dependencies\\nsudo yum install -y wget bzip2 git\\nsudo yum groupinstall -y 'Development Tools'\\n\\n# 2) Install Miniconda3\\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\\nsh Miniconda3-latest-Linux-x86_64.sh\\n\\n# 3) Reload .bashrc to register \\\"conda\\\" command\\nexec bash\\n\\n# 4) Clone Hummingbot\\ngit clone https://github.com/CoinAlpha/hummingbot.git\\n\\n# 5) Install Hummingbot\\ncd hummingbot && ./clean && ./install\\n\\n# 6) Activate environment and compile code\\nconda activate hummingbot && ./compile\\n\\n# 7) Start Hummingbot\\nbin/hummingbot.py\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"After installing Hummingbot from source, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/operation/launch-exit/\"\n  }), \"Launch Hummingbot from source\"), \" for instructions on how to start and run Hummingbot from source.\"), mdx(\"h2\", {\n    \"id\": \"developer-notes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#developer-notes\",\n    \"aria-label\": \"developer notes permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Developer Notes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Additional details of the scripts can be found on \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/development/installation/install-docker\"\n  }), \"Github: Hummingbot Install with Docker\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Callout from \"../../src/components/Callout\";\nexport const _frontmatter = {\n  \"title\": \"Linux\",\n  \"description\": \"Ubuntu, Debian, CentOS and Source Installation Guide\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`You can install Docker and/or Hummingbot by selecting `}<strong parentName=\"p\"><em parentName=\"strong\">{`either`}</em></strong>{` of the following options from the tabs below:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Scripts`}</strong>{`: download and use automated install scripts.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Manual`}</strong>{`: run install commands manually.`}</li>\n    </ul>\n    <Callout type=\"info\" body=\"Recommended for Developers Only — Installation using Docker is more efficient for running Hummingbot. Installing from source is only recommended for developers who want to access and modify the software code.\" mdxType=\"Callout\" />\n    <p>{`Or prepare your development environment and get started developing for Hummingbot.`}</p>\n    <h2 {...{\n      \"id\": \"ubuntu\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#ubuntu\",\n        \"aria-label\": \"ubuntu permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Ubuntu`}</h2>\n    <h3 {...{\n      \"id\": \"install-via-docker\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#install-via-docker\",\n        \"aria-label\": \"install via docker permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Install via Docker`}</h3>\n    <p><em parentName=\"p\">{`Supported versions: 16.04 LTS, 18.04 LTS, 19.04`}</em></p>\n    <ol>\n      <li parentName=\"ol\">{`Install Docker`}</li>\n    </ol>\n    <p>{`Skip this step if you already have Docker installed. Run the following commands:`}</p>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download Docker install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-docker/install-docker-ubuntu.sh\n\n# 2) Enable script permissions\nchmod a+x install-docker-ubuntu.sh\n\n# 3) Run installation\n./install-docker-ubuntu.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Update Ubuntu's database of software\nsudo apt-get update\n\n# 2) Install tmux\nsudo apt-get install -y tmux\n\n# 3) Install Docker\nsudo apt install -y docker.io\n\n# 4) Start and Automate Docker\nsudo systemctl start docker && sudo systemctl enable docker\n\n# 5) Change permissions for docker (optional)\n# Allow docker commands without requiring sudo prefix\nsudo usermod -a -G docker $USER\n\n# 6) Close terminal\nexit`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <Callout type=\"warning\" body=\"Please restart terminal — Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding to next step.\" mdxType=\"Callout\" />\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Install Hummingbot`}</li>\n    </ol>\n    <p>{`Run the following commands:`}</p>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download Hummingbot install, start, and update script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\n\n# 2) Enable script permissions\nchmod a+x *.sh\n\n# 3) Create a hummingbot instance\n./create.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Create folder for your new instance\nmkdir hummingbot_files\n\n# 2) Create folders for logs, config files and database file\nmkdir hummingbot_files/hummingbot_conf\nmkdir hummingbot_files/hummingbot_logs\nmkdir hummingbot_files/hummingbot_data\nmkdir hummingbot_files/hummingbot_scripts\n\n# 3) Launch a new instance of hummingbot\ndocker run -it \\\\\n--network host \\\\\n--name hummingbot-instance \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\" \\\\\ncoinalpha/hummingbot:latest`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"install-from-source\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#install-from-source\",\n        \"aria-label\": \"install from source permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Install from Source`}</h3>\n    <p><em parentName=\"p\">{`Supported versions: 16.04 LTS, 18.04 LTS, 19.04`}</em></p>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-from-source/install-source-ubuntu.sh\n\n# 2) Enable script permissions\nchmod a+x install-source-ubuntu.sh\n\n# 3) Run installation\n./install-source-ubuntu.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Install dependencies\nsudo apt-get update\nsudo apt-get install -y build-essential\n\n# 2) Install Miniconda3\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nsh Miniconda3-latest-Linux-x86_64.sh\n\n# 3) Reload .bashrc to register \"conda\" command\nexec bash\n\n# 4) Clone Hummingbot\ngit clone https://github.com/CoinAlpha/hummingbot.git\n\n# 5) Install Hummingbot\ncd hummingbot && ./clean && ./install\n\n# 6) Activate environment and compile code\nconda activate hummingbot && ./compile\n\n# 7) Start Hummingbot\nbin/hummingbot.py`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`After installing Hummingbot from source, see `}<a parentName=\"p\" {...{\n        \"href\": \"/operation/launch-exit/\"\n      }}>{`Launch Hummingbot from source`}</a>{` for instructions on how to start and run Hummingbot from source.`}</p>\n    <h2 {...{\n      \"id\": \"debian\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#debian\",\n        \"aria-label\": \"debian permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Debian`}</h2>\n    <h3 {...{\n      \"id\": \"install-via-docker-1\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#install-via-docker-1\",\n        \"aria-label\": \"install via docker 1 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Install via Docker`}</h3>\n    <p><em parentName=\"p\">{`Supported version: Debian GNU/Linux 9`}</em></p>\n    <ol>\n      <li parentName=\"ol\">{`Install Docker`}</li>\n    </ol>\n    <p>{`Skip this step if you already have Docker installed. Run the following commands:`}</p>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download Docker install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-docker/install-docker-debian.sh\n\n# 2) Enable script permissions\nchmod a+x install-docker-debian.sh\n\n# 3) Run installation\n./install-docker-debian.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Update package database\nsudo apt update\n\n# 2) Install dependencies\nsudo apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common tmux\n\n# 3) Register Docker repository to your system\ncurl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"\nsudo apt update\n\n# 4) Install Docker\nsudo apt install -y docker-ce\n\n# 5) Change permissions for docker (optional)\n# Allow docker commands without requiring sudo prefix\nsudo usermod -a -G docker $USER\n\n# 6) Close terminal\nexit`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <Callout type=\"warning\" body=\"Please restart terminal — Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding to next step.\" mdxType=\"Callout\" />\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Install Hummingbot`}</li>\n    </ol>\n    <p>{`Run the following commands:`}</p>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download Hummingbot install, start, and update script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\n\n# 2) Enable script permissions\nchmod a+x *.sh\n\n# 3) Create a hummingbot instance\n./create.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Create folder for your new instance\nmkdir hummingbot_files\n\n# 2) Create folders for logs, config files and database file\nmkdir hummingbot_files/hummingbot_conf\nmkdir hummingbot_files/hummingbot_logs\nmkdir hummingbot_files/hummingbot_data\nmkdir hummingbot_files/hummingbot_scripts\n\n# 3) Launch a new instance of hummingbot\ndocker run -it \\\\\n--network host \\\\\n--name hummingbot-instance \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\" \\\\\ncoinalpha/hummingbot:latest`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"install-from-source-1\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#install-from-source-1\",\n        \"aria-label\": \"install from source 1 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Install from Source`}</h3>\n    <p><em parentName=\"p\">{`Supported version: Debian GNU/Linux 9`}</em></p>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-from-source/install-source-debian.sh\n\n# 2) Enable script permissions\nchmod a+x install-source-debian.sh\n\n# 3) Run installation\n./install-source-debian.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Install dependencies\nsudo apt-get update\nsudo apt-get install -y build-essential git\n\n# 2) Install Miniconda3\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nbash Miniconda3-latest-Linux-x86_64.sh\n\n# 3) Reload .bashrc to register \"conda\" command\nexec bash\n\n# 4) Clone Hummingbot\ngit clone https://github.com/CoinAlpha/hummingbot.git\n\n# 5) Install Hummingbot\ncd hummingbot && ./clean && ./install\n\n# 6) Activate environment and compile code\nconda activate hummingbot && ./compile\n\n# 7) Start Hummingbot\nbin/hummingbot.py`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`After installing Hummingbot from source, see `}<a parentName=\"p\" {...{\n        \"href\": \"/operation/launch-exit/\"\n      }}>{`Launch Hummingbot from source`}</a>{` for instructions on how to start and run Hummingbot from source.`}</p>\n    <h2 {...{\n      \"id\": \"centos\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#centos\",\n        \"aria-label\": \"centos permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`CentOS`}</h2>\n    <h3 {...{\n      \"id\": \"install-via-docker-2\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#install-via-docker-2\",\n        \"aria-label\": \"install via docker 2 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Install via Docker`}</h3>\n    <p><em parentName=\"p\">{`Supported version: 7`}</em></p>\n    <ol>\n      <li parentName=\"ol\">{`Install Docker`}</li>\n    </ol>\n    <p>{`Skip this step if you already have Docker installed. Run the following commands:`}</p>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download Docker install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-docker/install-docker-centos.sh\n\n# 2) Enable script permissions\nchmod a+x install-docker-centos.sh\n\n# 3) Run installation\n./install-docker-centos.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Update package database\nsudo yum check-update\n\n# 2) Install tmux\nsudo yum -y install tmux\n\n# 3) Install Docker\ncurl -fsSL https://get.docker.com/ | sh\n\n# 4) Start and Automate Docker\nsudo systemctl start docker && sudo systemctl enable docker\n\n# 5) Change permissions for docker (optional)\n# Allow docker commands without requiring sudo prefix\nsudo usermod -a -G docker $USER\n\n# 6) Close terminal\nexit`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <Callout type=\"warning\" body=\"Please restart terminal — Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding to next step.\" mdxType=\"Callout\" />\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Install Hummingbot`}</li>\n    </ol>\n    <p>{`Run the following commands:`}</p>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download Hummingbot install, start, and update script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\n\n# 2) Enable script permissions\nchmod a+x *.sh\n\n# 3) Create a hummingbot instance\n./create.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Create folder for your new instance\nmkdir hummingbot_files\n\n# 2) Create folders for logs, config files and database file\nmkdir hummingbot_files/hummingbot_conf\nmkdir hummingbot_files/hummingbot_logs\nmkdir hummingbot_files/hummingbot_data\nmkdir hummingbot_files/hummingbot_scripts\n\n# 3) Launch a new instance of hummingbot\ndocker run -it \\\\\n--network host \\\\\n--name hummingbot-instance \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\" \\\\\ncoinalpha/hummingbot:latest`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h3 {...{\n      \"id\": \"install-from-source-2\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#install-from-source-2\",\n        \"aria-label\": \"install from source 2 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Install from Source`}</h3>\n    <p><em parentName=\"p\">{`Supported version: 7`}</em></p>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download install script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/install-from-source/install-source-centos.sh\n\n# 2) Enable script permissions\nchmod a+x install-source-centos.sh\n\n# 3) Run installation\n./install-source-centos.sh`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Install dependencies\nsudo yum install -y wget bzip2 git\nsudo yum groupinstall -y 'Development Tools'\n\n# 2) Install Miniconda3\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nsh Miniconda3-latest-Linux-x86_64.sh\n\n# 3) Reload .bashrc to register \"conda\" command\nexec bash\n\n# 4) Clone Hummingbot\ngit clone https://github.com/CoinAlpha/hummingbot.git\n\n# 5) Install Hummingbot\ncd hummingbot && ./clean && ./install\n\n# 6) Activate environment and compile code\nconda activate hummingbot && ./compile\n\n# 7) Start Hummingbot\nbin/hummingbot.py`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`After installing Hummingbot from source, see `}<a parentName=\"p\" {...{\n        \"href\": \"/operation/launch-exit/\"\n      }}>{`Launch Hummingbot from source`}</a>{` for instructions on how to start and run Hummingbot from source.`}</p>\n    <h2 {...{\n      \"id\": \"developer-notes\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#developer-notes\",\n        \"aria-label\": \"developer notes permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Developer Notes`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Additional details of the scripts can be found on `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/development/installation/install-docker\"\n        }}>{`Github: Hummingbot Install with Docker`}</a>{`.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}