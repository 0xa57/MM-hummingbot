{"expireTime":9007200881073053000,"key":"gatsby-plugin-mdx-entire-payload-52c237694c03b68c85d2882bdf98968b-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import Callout from \"../../src/components/Callout\";","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":52,"offset":52},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Docker Autostart","position":{"start":{"line":4,"column":4,"offset":57},"end":{"line":4,"column":20,"offset":73},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":54},"end":{"line":4,"column":20,"offset":73},"indent":[]}},{"type":"jsx","value":"<Callout\n  type=\"warning\"\n  body=\"This is a recently released experimental feature. Running any trading bots without manual supervision may incur additional risks. It is imperative that you thoroughly understand and test the strategy and parameters before deploying bots that can trade in an unattended manner.\"\n/>","position":{"start":{"line":6,"column":1,"offset":75},"end":{"line":9,"column":3,"offset":389},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Hummingbot can automatically start the execution of a previously configured trading strategy upon launch without needing user interaction when provided with pre-existing configuration files. This can be very useful if you wish to deploy already well-tested strategies and configurations to cloud services and have Hummingbot running automatically in the background.","position":{"start":{"line":11,"column":1,"offset":391},"end":{"line":11,"column":366,"offset":756},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":391},"end":{"line":11,"column":366,"offset":756},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":13,"column":5,"offset":762},"end":{"line":13,"column":18,"offset":775},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":758},"end":{"line":13,"column":18,"offset":775},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You have Hummingbot installed via Docker","position":{"start":{"line":15,"column":3,"offset":779},"end":{"line":15,"column":43,"offset":819},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":779},"end":{"line":15,"column":43,"offset":819},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":777},"end":{"line":15,"column":43,"offset":819},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You have already connected exchanges by adding API keys","position":{"start":{"line":16,"column":3,"offset":822},"end":{"line":16,"column":58,"offset":877},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":822},"end":{"line":16,"column":58,"offset":877},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":820},"end":{"line":16,"column":58,"offset":877},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You have at least one strategy configuration file that has been set up previously","position":{"start":{"line":17,"column":3,"offset":880},"end":{"line":17,"column":84,"offset":961},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":880},"end":{"line":17,"column":84,"offset":961},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":878},"end":{"line":17,"column":84,"offset":961},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":777},"end":{"line":17,"column":84,"offset":961},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Locating config files","position":{"start":{"line":19,"column":5,"offset":967},"end":{"line":19,"column":26,"offset":988},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":963},"end":{"line":19,"column":26,"offset":988},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you used the ","position":{"start":{"line":21,"column":1,"offset":990},"end":{"line":21,"column":17,"offset":1006},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Scripts","position":{"start":{"line":21,"column":19,"offset":1008},"end":{"line":21,"column":26,"offset":1015},"indent":[]}}],"position":{"start":{"line":21,"column":17,"offset":1006},"end":{"line":21,"column":28,"offset":1017},"indent":[]}},{"type":"text","value":" method via Docker, the configuration folder is the path printed at the ","position":{"start":{"line":21,"column":28,"offset":1017},"end":{"line":21,"column":100,"offset":1089},"indent":[]}},{"type":"inlineCode","value":"=> config files:","position":{"start":{"line":21,"column":100,"offset":1089},"end":{"line":21,"column":118,"offset":1107},"indent":[]}},{"type":"text","value":" line, when you run ","position":{"start":{"line":21,"column":118,"offset":1107},"end":{"line":21,"column":138,"offset":1127},"indent":[]}},{"type":"inlineCode","value":"./create.sh","position":{"start":{"line":21,"column":138,"offset":1127},"end":{"line":21,"column":151,"offset":1140},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":21,"column":151,"offset":1140},"end":{"line":21,"column":152,"offset":1141},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":990},"end":{"line":21,"column":152,"offset":1141},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you used the ","position":{"start":{"line":23,"column":1,"offset":1143},"end":{"line":23,"column":17,"offset":1159},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Manual","position":{"start":{"line":23,"column":19,"offset":1161},"end":{"line":23,"column":25,"offset":1167},"indent":[]}}],"position":{"start":{"line":23,"column":17,"offset":1159},"end":{"line":23,"column":27,"offset":1169},"indent":[]}},{"type":"text","value":" method, the configuration folder is ","position":{"start":{"line":23,"column":27,"offset":1169},"end":{"line":23,"column":64,"offset":1206},"indent":[]}},{"type":"inlineCode","value":"$(pwd)/hummingbot_files/hummingbot_conf","position":{"start":{"line":23,"column":64,"offset":1206},"end":{"line":23,"column":105,"offset":1247},"indent":[]}},{"type":"text","value":" at the time when you run ","position":{"start":{"line":23,"column":105,"offset":1247},"end":{"line":23,"column":131,"offset":1273},"indent":[]}},{"type":"inlineCode","value":"docker run","position":{"start":{"line":23,"column":131,"offset":1273},"end":{"line":23,"column":143,"offset":1285},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":23,"column":143,"offset":1285},"end":{"line":23,"column":144,"offset":1286},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1143},"end":{"line":23,"column":144,"offset":1286},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If your Hummingbot docker instance is already running, you can inspect the volume mount paths of your Hummingbot container with the following command:","position":{"start":{"line":25,"column":1,"offset":1288},"end":{"line":25,"column":151,"offset":1438},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1288},"end":{"line":25,"column":151,"offset":1438},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker inspect ${HUMMINGBOT_CONTAINER_NAME} --format='{{.Mounts}}'","position":{"start":{"line":27,"column":1,"offset":1440},"end":{"line":29,"column":4,"offset":1514},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The configuration folder is the mount path that corresponds to ","position":{"start":{"line":31,"column":1,"offset":1516},"end":{"line":31,"column":64,"offset":1579},"indent":[]}},{"type":"inlineCode","value":"/conf","position":{"start":{"line":31,"column":64,"offset":1579},"end":{"line":31,"column":71,"offset":1586},"indent":[]}},{"type":"text","value":" in the volume mounts listing.","position":{"start":{"line":31,"column":71,"offset":1586},"end":{"line":31,"column":101,"offset":1616},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1516},"end":{"line":31,"column":101,"offset":1616},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"How to autostart","position":{"start":{"line":33,"column":5,"offset":1622},"end":{"line":33,"column":21,"offset":1638},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1618},"end":{"line":33,"column":21,"offset":1638},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An unattended Hummingbot installation is very similar to the Docker manual installation steps. The only differences are:","position":{"start":{"line":35,"column":1,"offset":1640},"end":{"line":35,"column":121,"offset":1760},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1640},"end":{"line":35,"column":121,"offset":1760},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You will copy the pre-existing configuration files to the ","position":{"start":{"line":37,"column":5,"offset":1766},"end":{"line":37,"column":63,"offset":1824},"indent":[]}},{"type":"inlineCode","value":"hummingbot_conf","position":{"start":{"line":37,"column":63,"offset":1824},"end":{"line":37,"column":80,"offset":1841},"indent":[]}},{"type":"text","value":" directory.","position":{"start":{"line":37,"column":80,"offset":1841},"end":{"line":37,"column":91,"offset":1852},"indent":[]}}],"position":{"start":{"line":37,"column":5,"offset":1766},"end":{"line":37,"column":91,"offset":1852},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1762},"end":{"line":37,"column":91,"offset":1852},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You will set some environment variables telling Hummingbot which strategy configuration to use and the password to decrypt your API keys and wallets.","position":{"start":{"line":38,"column":5,"offset":1857},"end":{"line":38,"column":154,"offset":2006},"indent":[]}}],"position":{"start":{"line":38,"column":5,"offset":1857},"end":{"line":38,"column":154,"offset":2006},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1853},"end":{"line":38,"column":154,"offset":2006},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1762},"end":{"line":38,"column":154,"offset":2006},"indent":[1]}},{"type":"code","lang":"bash","meta":null,"value":"# 1) Create folder for your new instance\nmkdir hummingbot_files\n\n# 2) Create folders for logs, config files and database file\nmkdir hummingbot_files/hummingbot_conf\nmkdir hummingbot_files/hummingbot_logs\nmkdir hummingbot_files/hummingbot_data\nmkdir hummingbot_files/hummingbot_scripts\nmkdir hummingbot_files/hummingbot_certs\n\n# 3) Copy config files from pre-existing config folder\ncp -a <existing config path>/*.yml <existing config path>/*.json hummingbot_files/hummingbot_conf/\n\n# 4) Set environment variables specifying the strategy config file to use, and the decryption password\nexport STRATEGY=<strategy name>\nexport CONFIG_FILE_NAME=<strategy config file name>\nexport CONFIG_PASSWORD=<config password>\n\n# 5) Launch unattended instance of Hummingbot\ndocker run -d \\\n  --name hummingbot-instance \\\n  --network host \\\n  --mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\" \\\n  --mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\" \\\n  --mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\" \\\n  --mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\" \\\n  --mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_certs,destination=/certs/\" \\\n  -e STRATEGY -e CONFIG_FILE_NAME -e CONFIG_PASSWORD \\\n  coinalpha/hummingbot:latest\n\n# 6) Clean up\nunset STRATEGY CONFIG_FILE_NAME CONFIG_PASSWORD","position":{"start":{"line":40,"column":1,"offset":2008},"end":{"line":73,"column":4,"offset":3447},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The Hummingbot instance will be running in the background. You can bring it to foreground via","position":{"start":{"line":75,"column":1,"offset":3449},"end":{"line":75,"column":94,"offset":3542},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3449},"end":{"line":75,"column":94,"offset":3542},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker attach hummingbot-instance","position":{"start":{"line":77,"column":1,"offset":3544},"end":{"line":79,"column":4,"offset":3585},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can then detach from the container and put it back to the background by pressing ","position":{"start":{"line":81,"column":1,"offset":3587},"end":{"line":81,"column":86,"offset":3672},"indent":[]}},{"type":"inlineCode","value":"CTRL-p","position":{"start":{"line":81,"column":86,"offset":3672},"end":{"line":81,"column":94,"offset":3680},"indent":[]}},{"type":"text","value":" and then ","position":{"start":{"line":81,"column":94,"offset":3680},"end":{"line":81,"column":104,"offset":3690},"indent":[]}},{"type":"inlineCode","value":"CTRL-q","position":{"start":{"line":81,"column":104,"offset":3690},"end":{"line":81,"column":112,"offset":3698},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":81,"column":112,"offset":3698},"end":{"line":81,"column":113,"offset":3699},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":3587},"end":{"line":81,"column":113,"offset":3699},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Optional commands","position":{"start":{"line":83,"column":5,"offset":3705},"end":{"line":83,"column":22,"offset":3722},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":3701},"end":{"line":83,"column":22,"offset":3722},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use Docker's restart policy to ","position":{"start":{"line":85,"column":1,"offset":3724},"end":{"line":85,"column":32,"offset":3755},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"always","position":{"start":{"line":85,"column":34,"offset":3757},"end":{"line":85,"column":40,"offset":3763},"indent":[]}}],"position":{"start":{"line":85,"column":32,"offset":3755},"end":{"line":85,"column":42,"offset":3765},"indent":[]}},{"type":"text","value":" restart the container if it exits.","position":{"start":{"line":85,"column":42,"offset":3765},"end":{"line":85,"column":77,"offset":3800},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":3724},"end":{"line":85,"column":77,"offset":3800},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker run -it --restart=always \\ ...","position":{"start":{"line":87,"column":1,"offset":3802},"end":{"line":89,"column":4,"offset":3847},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Adding the option ","position":{"start":{"line":91,"column":1,"offset":3849},"end":{"line":91,"column":19,"offset":3867},"indent":[]}},{"type":"inlineCode","value":"-d","position":{"start":{"line":91,"column":19,"offset":3867},"end":{"line":91,"column":23,"offset":3871},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":91,"column":23,"offset":3871},"end":{"line":91,"column":27,"offset":3875},"indent":[]}},{"type":"inlineCode","value":"--detach","position":{"start":{"line":91,"column":27,"offset":3875},"end":{"line":91,"column":37,"offset":3885},"indent":[]}},{"type":"text","value":" will start the container without attaching.","position":{"start":{"line":91,"column":37,"offset":3885},"end":{"line":91,"column":81,"offset":3929},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3849},"end":{"line":91,"column":81,"offset":3929},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"docker run -itd \\ ...","position":{"start":{"line":93,"column":1,"offset":3931},"end":{"line":95,"column":4,"offset":3960},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"More information can be found in ","position":{"start":{"line":97,"column":1,"offset":3962},"end":{"line":97,"column":34,"offset":3995},"indent":[]}},{"type":"link","title":null,"url":"https://docs.docker.com/engine/reference/commandline/run/","children":[{"type":"text","value":"Docker documentation","position":{"start":{"line":97,"column":35,"offset":3996},"end":{"line":97,"column":55,"offset":4016},"indent":[]}}],"position":{"start":{"line":97,"column":34,"offset":3995},"end":{"line":97,"column":115,"offset":4076},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":97,"column":115,"offset":4076},"end":{"line":97,"column":116,"offset":4077},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3962},"end":{"line":97,"column":116,"offset":4077},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Source Autostart","position":{"start":{"line":99,"column":4,"offset":4082},"end":{"line":99,"column":20,"offset":4098},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":4079},"end":{"line":99,"column":20,"offset":4098},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":101,"column":5,"offset":4104},"end":{"line":101,"column":18,"offset":4117},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":4100},"end":{"line":101,"column":18,"offset":4117},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You have Hummingbot installed via Source.","position":{"start":{"line":103,"column":3,"offset":4121},"end":{"line":103,"column":44,"offset":4162},"indent":[]}}],"position":{"start":{"line":103,"column":3,"offset":4121},"end":{"line":103,"column":44,"offset":4162},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":4119},"end":{"line":103,"column":44,"offset":4162},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You have already connected exchanges by adding API keys","position":{"start":{"line":104,"column":3,"offset":4165},"end":{"line":104,"column":58,"offset":4220},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":4165},"end":{"line":104,"column":58,"offset":4220},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":4163},"end":{"line":104,"column":58,"offset":4220},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You have at least one strategy configuration file that has been set up previously","position":{"start":{"line":105,"column":3,"offset":4223},"end":{"line":105,"column":84,"offset":4304},"indent":[]}}],"position":{"start":{"line":105,"column":3,"offset":4223},"end":{"line":105,"column":84,"offset":4304},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":4221},"end":{"line":105,"column":84,"offset":4304},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":4119},"end":{"line":105,"column":84,"offset":4304},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Locating config files","position":{"start":{"line":107,"column":5,"offset":4310},"end":{"line":107,"column":26,"offset":4331},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4306},"end":{"line":107,"column":26,"offset":4331},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whichever you used was it the ","position":{"start":{"line":109,"column":1,"offset":4333},"end":{"line":109,"column":31,"offset":4363},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Scripts","position":{"start":{"line":109,"column":33,"offset":4365},"end":{"line":109,"column":40,"offset":4372},"indent":[]}}],"position":{"start":{"line":109,"column":31,"offset":4363},"end":{"line":109,"column":42,"offset":4374},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":109,"column":42,"offset":4374},"end":{"line":109,"column":46,"offset":4378},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Manual","position":{"start":{"line":109,"column":48,"offset":4380},"end":{"line":109,"column":54,"offset":4386},"indent":[]}}],"position":{"start":{"line":109,"column":46,"offset":4378},"end":{"line":109,"column":56,"offset":4388},"indent":[]}},{"type":"text","value":" method from Source, the configuration folder is located inside the ","position":{"start":{"line":109,"column":56,"offset":4388},"end":{"line":109,"column":124,"offset":4456},"indent":[]}},{"type":"inlineCode","value":"hummingbot","position":{"start":{"line":109,"column":124,"offset":4456},"end":{"line":109,"column":136,"offset":4468},"indent":[]}},{"type":"text","value":" folder, the path is where you installed your Hummingbot.","position":{"start":{"line":109,"column":136,"offset":4468},"end":{"line":109,"column":193,"offset":4525},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4333},"end":{"line":109,"column":193,"offset":4525},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"How to autostart","position":{"start":{"line":111,"column":5,"offset":4531},"end":{"line":111,"column":21,"offset":4547},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4527},"end":{"line":111,"column":21,"offset":4547},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Running unattended Hummingbot is very similar to running hummingbot manually. The only differences are:","position":{"start":{"line":113,"column":1,"offset":4549},"end":{"line":113,"column":104,"offset":4652},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4549},"end":{"line":113,"column":104,"offset":4652},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You will read the pre-existing configuration files to the ","position":{"start":{"line":115,"column":3,"offset":4656},"end":{"line":115,"column":61,"offset":4714},"indent":[]}},{"type":"inlineCode","value":"conf","position":{"start":{"line":115,"column":61,"offset":4714},"end":{"line":115,"column":67,"offset":4720},"indent":[]}},{"type":"text","value":" directory.","position":{"start":{"line":115,"column":67,"offset":4720},"end":{"line":115,"column":78,"offset":4731},"indent":[]}}],"position":{"start":{"line":115,"column":3,"offset":4656},"end":{"line":115,"column":78,"offset":4731},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4654},"end":{"line":115,"column":78,"offset":4731},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You will pass some parameters telling Hummingbot which strategy configuration to use and the password to decrypt your API keys and wallets.","position":{"start":{"line":116,"column":3,"offset":4734},"end":{"line":116,"column":142,"offset":4873},"indent":[]}}],"position":{"start":{"line":116,"column":3,"offset":4734},"end":{"line":116,"column":142,"offset":4873},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":4732},"end":{"line":116,"column":142,"offset":4873},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4654},"end":{"line":116,"column":142,"offset":4873},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"bin/hummingbot_quickstart.py -f CONFIG_FILE_NAME -p CONFIG_PASSWORD","position":{"start":{"line":118,"column":1,"offset":4875},"end":{"line":120,"column":4,"offset":4950},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Where","position":{"start":{"line":122,"column":1,"offset":4952},"end":{"line":122,"column":6,"offset":4957},"indent":[]}},{"type":"break","position":{"start":{"line":122,"column":6,"offset":4957},"end":{"line":123,"column":1,"offset":4960},"indent":[1]}},{"type":"inlineCode","value":"STRATEGY","position":{"start":{"line":123,"column":1,"offset":4960},"end":{"line":123,"column":11,"offset":4970},"indent":[]}},{"type":"text","value":" is the strategy name","position":{"start":{"line":123,"column":11,"offset":4970},"end":{"line":123,"column":32,"offset":4991},"indent":[]}},{"type":"break","position":{"start":{"line":123,"column":32,"offset":4991},"end":{"line":124,"column":1,"offset":4994},"indent":[1]}},{"type":"inlineCode","value":"CONFIG_FILE_NAME","position":{"start":{"line":124,"column":1,"offset":4994},"end":{"line":124,"column":19,"offset":5012},"indent":[]}},{"type":"text","value":" is the strategy config file name","position":{"start":{"line":124,"column":19,"offset":5012},"end":{"line":124,"column":52,"offset":5045},"indent":[]}},{"type":"break","position":{"start":{"line":124,"column":52,"offset":5045},"end":{"line":125,"column":1,"offset":5048},"indent":[1]}},{"type":"inlineCode","value":"CONFIG_PASSWORD","position":{"start":{"line":125,"column":1,"offset":5048},"end":{"line":125,"column":18,"offset":5065},"indent":[]}},{"type":"text","value":" is the config password","position":{"start":{"line":125,"column":18,"offset":5065},"end":{"line":125,"column":41,"offset":5088},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4952},"end":{"line":125,"column":41,"offset":5088},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"More information on strategy can be found in ","position":{"start":{"line":127,"column":3,"offset":5092},"end":{"line":127,"column":48,"offset":5137},"indent":[]}},{"type":"link","title":null,"url":"/strategies/overview","children":[{"type":"text","value":"Strategy","position":{"start":{"line":127,"column":49,"offset":5138},"end":{"line":127,"column":57,"offset":5146},"indent":[]}}],"position":{"start":{"line":127,"column":48,"offset":5137},"end":{"line":127,"column":80,"offset":5169},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":127,"column":80,"offset":5169},"end":{"line":127,"column":81,"offset":5170},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":5092},"end":{"line":127,"column":81,"offset":5170},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":5090},"end":{"line":127,"column":81,"offset":5170},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"More information on configuration file name can be found in ","position":{"start":{"line":128,"column":3,"offset":5173},"end":{"line":128,"column":63,"offset":5233},"indent":[]}},{"type":"link","title":null,"url":"/operation/client","children":[{"type":"text","value":"Configuring Hummingbot","position":{"start":{"line":128,"column":64,"offset":5234},"end":{"line":128,"column":86,"offset":5256},"indent":[]}}],"position":{"start":{"line":128,"column":63,"offset":5233},"end":{"line":128,"column":106,"offset":5276},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":128,"column":106,"offset":5276},"end":{"line":128,"column":107,"offset":5277},"indent":[]}}],"position":{"start":{"line":128,"column":3,"offset":5173},"end":{"line":128,"column":107,"offset":5277},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":5171},"end":{"line":128,"column":107,"offset":5277},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"More information on password can be found in ","position":{"start":{"line":129,"column":3,"offset":5280},"end":{"line":129,"column":48,"offset":5325},"indent":[]}},{"type":"link","title":null,"url":"/operation/client/#create-a-secure-password","children":[{"type":"text","value":"Create a secure password","position":{"start":{"line":129,"column":49,"offset":5326},"end":{"line":129,"column":73,"offset":5350},"indent":[]}}],"position":{"start":{"line":129,"column":48,"offset":5325},"end":{"line":129,"column":119,"offset":5396},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":129,"column":119,"offset":5396},"end":{"line":129,"column":120,"offset":5397},"indent":[]}}],"position":{"start":{"line":129,"column":3,"offset":5280},"end":{"line":129,"column":120,"offset":5397},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":5278},"end":{"line":129,"column":120,"offset":5397},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":5090},"end":{"line":129,"column":120,"offset":5397},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Strategy Autostart\",\"description\":\"See here how to autostart Hummingbot on docker and source\"}","position":{"start":{"line":132,"column":1,"offset":5400},"end":{"line":132,"column":133,"offset":5532},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":132,"column":133,"offset":5532}}},"scopeImports":["import Callout from \"../../src/components/Callout\";","import * as React from 'react'"],"scopeIdentifiers":["Callout","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Strategy Autostart\",\n  \"description\": \"See here how to autostart Hummingbot on docker and source\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"docker-autostart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#docker-autostart\",\n    \"aria-label\": \"docker autostart permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Docker Autostart\"), mdx(Callout, {\n    type: \"warning\",\n    body: \"This is a recently released experimental feature. Running any trading bots without manual supervision may incur additional risks. It is imperative that you thoroughly understand and test the strategy and parameters before deploying bots that can trade in an unattended manner.\",\n    mdxType: \"Callout\"\n  }), mdx(\"p\", null, \"Hummingbot can automatically start the execution of a previously configured trading strategy upon launch without needing user interaction when provided with pre-existing configuration files. This can be very useful if you wish to deploy already well-tested strategies and configurations to cloud services and have Hummingbot running automatically in the background.\"), mdx(\"h3\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Prerequisites\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have Hummingbot installed via Docker\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have already connected exchanges by adding API keys\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have at least one strategy configuration file that has been set up previously\")), mdx(\"h3\", {\n    \"id\": \"locating-config-files\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#locating-config-files\",\n    \"aria-label\": \"locating config files permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Locating config files\"), mdx(\"p\", null, \"If you used the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Scripts\"), \" method via Docker, the configuration folder is the path printed at the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"=> config files:\"), \" line, when you run \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"./create.sh\"), \".\"), mdx(\"p\", null, \"If you used the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Manual\"), \" method, the configuration folder is \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"$(pwd)/hummingbot_files/hummingbot_conf\"), \" at the time when you run \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"docker run\"), \".\"), mdx(\"p\", null, \"If your Hummingbot docker instance is already running, you can inspect the volume mount paths of your Hummingbot container with the following command:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"docker inspect ${HUMMINGBOT_CONTAINER_NAME} --format='{{.Mounts}}'\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The configuration folder is the mount path that corresponds to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/conf\"), \" in the volume mounts listing.\"), mdx(\"h3\", {\n    \"id\": \"how-to-autostart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#how-to-autostart\",\n    \"aria-label\": \"how to autostart permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How to autostart\"), mdx(\"p\", null, \"An unattended Hummingbot installation is very similar to the Docker manual installation steps. The only differences are:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You will copy the pre-existing configuration files to the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"hummingbot_conf\"), \" directory.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You will set some environment variables telling Hummingbot which strategy configuration to use and the password to decrypt your API keys and wallets.\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-bash line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# 1) Create folder for your new instance\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"mkdir\"), \" hummingbot_files\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# 2) Create folders for logs, config files and database file\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"mkdir\"), \" hummingbot_files/hummingbot_conf\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"mkdir\"), \" hummingbot_files/hummingbot_logs\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"mkdir\"), \" hummingbot_files/hummingbot_data\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"mkdir\"), \" hummingbot_files/hummingbot_scripts\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"mkdir\"), \" hummingbot_files/hummingbot_certs\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# 3) Copy config files from pre-existing config folder\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"cp\"), \" -a \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"existing config path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"/*.yml \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"existing config path\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"/*.json hummingbot_files/hummingbot_conf/\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# 4) Set environment variables specifying the strategy config file to use, and the decryption password\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token assign-left variable\"\n  }), \"STRATEGY\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"strategy name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token assign-left variable\"\n  }), \"CONFIG_FILE_NAME\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"strategy config \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"file\"), \" name\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"export\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token assign-left variable\"\n  }), \"CONFIG_PASSWORD\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"config password\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# 5) Launch unattended instance of Hummingbot\"), \"\\ndocker run -d \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\\\"), \"\\n  --name hummingbot-instance \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\\\"), \"\\n  --network \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"host\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\\\"), \"\\n  --mount \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"type=bind,source=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \"$(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"pwd\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \")\")), \"/hummingbot_files/hummingbot_conf,destination=/conf/\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\\\"), \"\\n  --mount \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"type=bind,source=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \"$(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"pwd\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \")\")), \"/hummingbot_files/hummingbot_logs,destination=/logs/\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\\\"), \"\\n  --mount \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"type=bind,source=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \"$(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"pwd\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \")\")), \"/hummingbot_files/hummingbot_data,destination=/data/\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\\\"), \"\\n  --mount \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"type=bind,source=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \"$(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"pwd\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \")\")), \"/hummingbot_files/hummingbot_scripts,destination=/scripts/\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\\\"), \"\\n  --mount \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"\\\"type=bind,source=\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \"$(\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"pwd\"), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"token variable\"\n  }), \")\")), \"/hummingbot_files/hummingbot_certs,destination=/certs/\\\"\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\\\"), \"\\n  -e STRATEGY -e CONFIG_FILE_NAME -e CONFIG_PASSWORD \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"\\\\\"), \"\\n  coinalpha/hummingbot:latest\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# 6) Clean up\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token builtin class-name\"\n  }), \"unset\"), \" STRATEGY CONFIG_FILE_NAME CONFIG_PASSWORD\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"The Hummingbot instance will be running in the background. You can bring it to foreground via\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"docker attach hummingbot-instance\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"You can then detach from the container and put it back to the background by pressing \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"CTRL-p\"), \" and then \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"CTRL-q\"), \".\"), mdx(\"h3\", {\n    \"id\": \"optional-commands\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#optional-commands\",\n    \"aria-label\": \"optional commands permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Optional commands\"), mdx(\"p\", null, \"Use Docker's restart policy to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"always\"), \" restart the container if it exits.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"docker run -it --restart=always \\\\ ...\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Adding the option \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"-d\"), \" or \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"--detach\"), \" will start the container without attaching.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"docker run -itd \\\\ ...\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"More information can be found in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.docker.com/engine/reference/commandline/run/\"\n  }), \"Docker documentation\"), \".\"), mdx(\"h2\", {\n    \"id\": \"source-autostart\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#source-autostart\",\n    \"aria-label\": \"source autostart permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Source Autostart\"), mdx(\"h3\", {\n    \"id\": \"prerequisites-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#prerequisites-1\",\n    \"aria-label\": \"prerequisites 1 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Prerequisites\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have Hummingbot installed via Source.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have already connected exchanges by adding API keys\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have at least one strategy configuration file that has been set up previously\")), mdx(\"h3\", {\n    \"id\": \"locating-config-files-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#locating-config-files-1\",\n    \"aria-label\": \"locating config files 1 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Locating config files\"), mdx(\"p\", null, \"Whichever you used was it the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Scripts\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Manual\"), \" method from Source, the configuration folder is located inside the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"hummingbot\"), \" folder, the path is where you installed your Hummingbot.\"), mdx(\"h3\", {\n    \"id\": \"how-to-autostart-1\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#how-to-autostart-1\",\n    \"aria-label\": \"how to autostart 1 permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How to autostart\"), mdx(\"p\", null, \"Running unattended Hummingbot is very similar to running hummingbot manually. The only differences are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You will read the pre-existing configuration files to the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"conf\"), \" directory.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You will pass some parameters telling Hummingbot which strategy configuration to use and the password to decrypt your API keys and wallets.\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"bin/hummingbot_quickstart.py -f CONFIG_FILE_NAME -p CONFIG_PASSWORD\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Where\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"STRATEGY\"), \" is the strategy name\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"CONFIG_FILE_NAME\"), \" is the strategy config file name\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"CONFIG_PASSWORD\"), \" is the config password\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More information on strategy can be found in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/strategies/overview\"\n  }), \"Strategy\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More information on configuration file name can be found in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/operation/client\"\n  }), \"Configuring Hummingbot\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More information on password can be found in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/operation/client/#create-a-secure-password\"\n  }), \"Create a secure password\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Callout from \"../../src/components/Callout\";\nexport const _frontmatter = {\n  \"title\": \"Strategy Autostart\",\n  \"description\": \"See here how to autostart Hummingbot on docker and source\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"docker-autostart\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#docker-autostart\",\n        \"aria-label\": \"docker autostart permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Docker Autostart`}</h2>\n    <Callout type=\"warning\" body=\"This is a recently released experimental feature. Running any trading bots without manual supervision may incur additional risks. It is imperative that you thoroughly understand and test the strategy and parameters before deploying bots that can trade in an unattended manner.\" mdxType=\"Callout\" />\n    <p>{`Hummingbot can automatically start the execution of a previously configured trading strategy upon launch without needing user interaction when provided with pre-existing configuration files. This can be very useful if you wish to deploy already well-tested strategies and configurations to cloud services and have Hummingbot running automatically in the background.`}</p>\n    <h3 {...{\n      \"id\": \"prerequisites\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#prerequisites\",\n        \"aria-label\": \"prerequisites permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Prerequisites`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`You have Hummingbot installed via Docker`}</li>\n      <li parentName=\"ul\">{`You have already connected exchanges by adding API keys`}</li>\n      <li parentName=\"ul\">{`You have at least one strategy configuration file that has been set up previously`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"locating-config-files\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#locating-config-files\",\n        \"aria-label\": \"locating config files permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Locating config files`}</h3>\n    <p>{`If you used the `}<strong parentName=\"p\">{`Scripts`}</strong>{` method via Docker, the configuration folder is the path printed at the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`=> config files:`}</code>{` line, when you run `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`./create.sh`}</code>{`.`}</p>\n    <p>{`If you used the `}<strong parentName=\"p\">{`Manual`}</strong>{` method, the configuration folder is `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`$(pwd)/hummingbot_files/hummingbot_conf`}</code>{` at the time when you run `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`docker run`}</code>{`.`}</p>\n    <p>{`If your Hummingbot docker instance is already running, you can inspect the volume mount paths of your Hummingbot container with the following command:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`docker inspect \\${HUMMINGBOT_CONTAINER_NAME} --format='{{.Mounts}}'`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{`The configuration folder is the mount path that corresponds to `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`/conf`}</code>{` in the volume mounts listing.`}</p>\n    <h3 {...{\n      \"id\": \"how-to-autostart\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#how-to-autostart\",\n        \"aria-label\": \"how to autostart permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`How to autostart`}</h3>\n    <p>{`An unattended Hummingbot installation is very similar to the Docker manual installation steps. The only differences are:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`You will copy the pre-existing configuration files to the `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`hummingbot_conf`}</code>{` directory.`}</li>\n      <li parentName=\"ol\">{`You will set some environment variables telling Hummingbot which strategy configuration to use and the password to decrypt your API keys and wallets.`}</li>\n    </ol>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-bash line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# 1) Create folder for your new instance`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`mkdir`}</span>{` hummingbot_files\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# 2) Create folders for logs, config files and database file`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`mkdir`}</span>{` hummingbot_files/hummingbot_conf\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`mkdir`}</span>{` hummingbot_files/hummingbot_logs\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`mkdir`}</span>{` hummingbot_files/hummingbot_data\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`mkdir`}</span>{` hummingbot_files/hummingbot_scripts\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`mkdir`}</span>{` hummingbot_files/hummingbot_certs\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# 3) Copy config files from pre-existing config folder`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`cp`}</span>{` -a `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{`existing config path`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{`/*.yml `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{`existing config path`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{`/*.json hummingbot_files/hummingbot_conf/\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# 4) Set environment variables specifying the strategy config file to use, and the decryption password`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`export`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token assign-left variable\"\n          }}>{`STRATEGY`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{`strategy name`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`export`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token assign-left variable\"\n          }}>{`CONFIG_FILE_NAME`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{`strategy config `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`file`}</span>{` name`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`export`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token assign-left variable\"\n          }}>{`CONFIG_PASSWORD`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{`config password`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# 5) Launch unattended instance of Hummingbot`}</span>{`\ndocker run -d `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`\\\\`}</span>{`\n  --name hummingbot-instance `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`\\\\`}</span>{`\n  --network `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`host`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`\\\\`}</span>{`\n  --mount `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"type=bind,source=`}<span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`$(`}</span><span parentName=\"span\" {...{\n                \"className\": \"token builtin class-name\"\n              }}>{`pwd`}</span><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`)`}</span></span>{`/hummingbot_files/hummingbot_conf,destination=/conf/\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`\\\\`}</span>{`\n  --mount `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"type=bind,source=`}<span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`$(`}</span><span parentName=\"span\" {...{\n                \"className\": \"token builtin class-name\"\n              }}>{`pwd`}</span><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`)`}</span></span>{`/hummingbot_files/hummingbot_logs,destination=/logs/\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`\\\\`}</span>{`\n  --mount `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"type=bind,source=`}<span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`$(`}</span><span parentName=\"span\" {...{\n                \"className\": \"token builtin class-name\"\n              }}>{`pwd`}</span><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`)`}</span></span>{`/hummingbot_files/hummingbot_data,destination=/data/\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`\\\\`}</span>{`\n  --mount `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"type=bind,source=`}<span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`$(`}</span><span parentName=\"span\" {...{\n                \"className\": \"token builtin class-name\"\n              }}>{`pwd`}</span><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`)`}</span></span>{`/hummingbot_files/hummingbot_scripts,destination=/scripts/\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`\\\\`}</span>{`\n  --mount `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"type=bind,source=`}<span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`$(`}</span><span parentName=\"span\" {...{\n                \"className\": \"token builtin class-name\"\n              }}>{`pwd`}</span><span parentName=\"span\" {...{\n                \"className\": \"token variable\"\n              }}>{`)`}</span></span>{`/hummingbot_files/hummingbot_certs,destination=/certs/\"`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`\\\\`}</span>{`\n  -e STRATEGY -e CONFIG_FILE_NAME -e CONFIG_PASSWORD `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`\\\\`}</span>{`\n  coinalpha/hummingbot:latest\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# 6) Clean up`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`unset`}</span>{` STRATEGY CONFIG_FILE_NAME CONFIG_PASSWORD`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`The Hummingbot instance will be running in the background. You can bring it to foreground via`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`docker attach hummingbot-instance`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{`You can then detach from the container and put it back to the background by pressing `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`CTRL-p`}</code>{` and then `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`CTRL-q`}</code>{`.`}</p>\n    <h3 {...{\n      \"id\": \"optional-commands\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#optional-commands\",\n        \"aria-label\": \"optional commands permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Optional commands`}</h3>\n    <p>{`Use Docker's restart policy to `}<strong parentName=\"p\">{`always`}</strong>{` restart the container if it exits.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`docker run -it --restart=always \\\\ ...`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Adding the option `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`-d`}</code>{` or `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`--detach`}</code>{` will start the container without attaching.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`docker run -itd \\\\ ...`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{`More information can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.docker.com/engine/reference/commandline/run/\"\n      }}>{`Docker documentation`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"source-autostart\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#source-autostart\",\n        \"aria-label\": \"source autostart permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Source Autostart`}</h2>\n    <h3 {...{\n      \"id\": \"prerequisites-1\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#prerequisites-1\",\n        \"aria-label\": \"prerequisites 1 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Prerequisites`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`You have Hummingbot installed via Source.`}</li>\n      <li parentName=\"ul\">{`You have already connected exchanges by adding API keys`}</li>\n      <li parentName=\"ul\">{`You have at least one strategy configuration file that has been set up previously`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"locating-config-files-1\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#locating-config-files-1\",\n        \"aria-label\": \"locating config files 1 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Locating config files`}</h3>\n    <p>{`Whichever you used was it the `}<strong parentName=\"p\">{`Scripts`}</strong>{` or `}<strong parentName=\"p\">{`Manual`}</strong>{` method from Source, the configuration folder is located inside the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`hummingbot`}</code>{` folder, the path is where you installed your Hummingbot.`}</p>\n    <h3 {...{\n      \"id\": \"how-to-autostart-1\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#how-to-autostart-1\",\n        \"aria-label\": \"how to autostart 1 permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`How to autostart`}</h3>\n    <p>{`Running unattended Hummingbot is very similar to running hummingbot manually. The only differences are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You will read the pre-existing configuration files to the `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`conf`}</code>{` directory.`}</li>\n      <li parentName=\"ul\">{`You will pass some parameters telling Hummingbot which strategy configuration to use and the password to decrypt your API keys and wallets.`}</li>\n    </ul>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`bin/hummingbot_quickstart.py -f CONFIG_FILE_NAME -p CONFIG_PASSWORD`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Where`}<br parentName=\"p\"></br>{`\n`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`STRATEGY`}</code>{` is the strategy name`}<br parentName=\"p\"></br>{`\n`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`CONFIG_FILE_NAME`}</code>{` is the strategy config file name`}<br parentName=\"p\"></br>{`\n`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`CONFIG_PASSWORD`}</code>{` is the config password`}</p>\n    <ul>\n      <li parentName=\"ul\">{`More information on strategy can be found in `}<a parentName=\"li\" {...{\n          \"href\": \"/strategies/overview\"\n        }}>{`Strategy`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`More information on configuration file name can be found in `}<a parentName=\"li\" {...{\n          \"href\": \"/operation/client\"\n        }}>{`Configuring Hummingbot`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`More information on password can be found in `}<a parentName=\"li\" {...{\n          \"href\": \"/operation/client/#create-a-secure-password\"\n        }}>{`Create a secure password`}</a>{`.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}