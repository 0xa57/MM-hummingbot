{"expireTime":9007200881073034000,"key":"gatsby-plugin-mdx-entire-payload-6c601d8e476d117d1f602fb9273d5109-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import Prompt from \"../../src/components/Prompt\";","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":50,"offset":50},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Updated as of ","position":{"start":{"line":4,"column":3,"offset":54},"end":{"line":4,"column":17,"offset":68},"indent":[]}},{"type":"inlineCode","value":"v0.28.0","position":{"start":{"line":4,"column":17,"offset":68},"end":{"line":4,"column":26,"offset":77},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":52},"end":{"line":4,"column":28,"offset":79},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":52},"end":{"line":4,"column":28,"offset":79},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This feature enables the ping pong strategy, in which Hummingbot alternates buy and sell orders.","position":{"start":{"line":6,"column":1,"offset":81},"end":{"line":6,"column":97,"offset":177},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":81},"end":{"line":6,"column":97,"offset":177},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"ping_pong_enabled","position":{"start":{"line":8,"column":4,"offset":182},"end":{"line":8,"column":23,"offset":201},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":179},"end":{"line":8,"column":23,"offset":201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whether to alternate between buys and sells.","position":{"start":{"line":10,"column":1,"offset":203},"end":{"line":10,"column":45,"offset":247},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":203},"end":{"line":10,"column":45,"offset":247},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" Prompt: ","position":{"start":{"line":12,"column":3,"offset":251},"end":{"line":12,"column":12,"offset":260},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":249},"end":{"line":12,"column":14,"offset":262},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":249},"end":{"line":12,"column":14,"offset":262},"indent":[]}},{"type":"jsx","value":"<Prompt\n  prompt=\"Would you like to use the ping pong feature and alternate between buy and sell orders after fills?\"\n  response=\">>> \"\n/>","position":{"start":{"line":14,"column":1,"offset":264},"end":{"line":17,"column":3,"offset":402},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How It Works","position":{"start":{"line":19,"column":4,"offset":407},"end":{"line":19,"column":16,"offset":419},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":404},"end":{"line":19,"column":16,"offset":419},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ping pong strategy tries to keep buys and sells balanced by only creating orders on the opposite side of an order that is filled. It will keep on creating orders on the opposite side of the filled order as long as ","position":{"start":{"line":21,"column":1,"offset":421},"end":{"line":21,"column":219,"offset":639},"indent":[]}},{"type":"inlineCode","value":"ping_pong","position":{"start":{"line":21,"column":219,"offset":639},"end":{"line":21,"column":230,"offset":650},"indent":[]}},{"type":"text","value":" is set to enabled. For example:","position":{"start":{"line":21,"column":230,"offset":650},"end":{"line":21,"column":262,"offset":682},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":421},"end":{"line":21,"column":262,"offset":682},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"img/ping-pong-mode.png","alt":null,"position":{"start":{"line":23,"column":1,"offset":684},"end":{"line":23,"column":28,"offset":711},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":684},"end":{"line":23,"column":28,"offset":711},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because the buy order from period 1 was filled, the bot stops placing buy orders, and only places sell orders (periods 2-4). Only when a sell order is eventually filled (period 4) that's the time that it will resume creating both buy and sell orders (period 5).","position":{"start":{"line":25,"column":1,"offset":713},"end":{"line":25,"column":262,"offset":974},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":713},"end":{"line":25,"column":262,"offset":974},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"By default, this parameter is set to ","position":{"start":{"line":27,"column":1,"offset":976},"end":{"line":27,"column":38,"offset":1013},"indent":[]}},{"type":"inlineCode","value":"False","position":{"start":{"line":27,"column":38,"offset":1013},"end":{"line":27,"column":45,"offset":1020},"indent":[]}},{"type":"text","value":". When enabled, after a filled order event on either side (buy/sell) it will only create orders on the opposite side on the next refresh.","position":{"start":{"line":27,"column":45,"offset":1020},"end":{"line":27,"column":182,"offset":1157},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":976},"end":{"line":27,"column":182,"offset":1157},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, if your buy order is filled and the sell order was canceled the bot will keep creating sell orders only until it gets filled.","position":{"start":{"line":29,"column":1,"offset":1159},"end":{"line":29,"column":139,"offset":1297},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1159},"end":{"line":29,"column":139,"offset":1297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Stopping the strategy using the ","position":{"start":{"line":31,"column":1,"offset":1299},"end":{"line":31,"column":33,"offset":1331},"indent":[]}},{"type":"inlineCode","value":"stop","position":{"start":{"line":31,"column":33,"offset":1331},"end":{"line":31,"column":39,"offset":1337},"indent":[]}},{"type":"text","value":" command breaks the current ping pong logic. Upon restarting, the bot will initially create both buy and sell orders, assuming you have enough balance to place orders on each side.","position":{"start":{"line":31,"column":39,"offset":1337},"end":{"line":31,"column":219,"offset":1517},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1299},"end":{"line":31,"column":219,"offset":1517},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Ping pong with single order level","position":{"start":{"line":33,"column":4,"offset":1522},"end":{"line":33,"column":37,"offset":1555},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1519},"end":{"line":33,"column":37,"offset":1555},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The scenario below shows how ping pong balances trades when one side is filled.","position":{"start":{"line":35,"column":1,"offset":1557},"end":{"line":35,"column":80,"offset":1636},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1557},"end":{"line":35,"column":80,"offset":1636},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Buy order b1 and sell order s1 are created","position":{"start":{"line":37,"column":4,"offset":1641},"end":{"line":37,"column":46,"offset":1683},"indent":[]}}],"position":{"start":{"line":37,"column":4,"offset":1641},"end":{"line":37,"column":46,"offset":1683},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1638},"end":{"line":37,"column":46,"offset":1683},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"b1 gets filled, and s1 is canceled when not filled","position":{"start":{"line":38,"column":4,"offset":1687},"end":{"line":38,"column":54,"offset":1737},"indent":[]}}],"position":{"start":{"line":38,"column":4,"offset":1687},"end":{"line":38,"column":54,"offset":1737},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1684},"end":{"line":38,"column":54,"offset":1737},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Sell order s2 is created","position":{"start":{"line":39,"column":4,"offset":1741},"end":{"line":39,"column":28,"offset":1765},"indent":[]}}],"position":{"start":{"line":39,"column":4,"offset":1741},"end":{"line":39,"column":28,"offset":1765},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1738},"end":{"line":39,"column":28,"offset":1765},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"s2 gets filled","position":{"start":{"line":40,"column":4,"offset":1769},"end":{"line":40,"column":18,"offset":1783},"indent":[]}}],"position":{"start":{"line":40,"column":4,"offset":1769},"end":{"line":40,"column":18,"offset":1783},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1766},"end":{"line":40,"column":18,"offset":1783},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Buy order b3 and sell order s3 are created","position":{"start":{"line":41,"column":4,"offset":1787},"end":{"line":41,"column":46,"offset":1829},"indent":[]}}],"position":{"start":{"line":41,"column":4,"offset":1787},"end":{"line":41,"column":46,"offset":1829},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1784},"end":{"line":41,"column":46,"offset":1829},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1638},"end":{"line":41,"column":46,"offset":1829},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice that the buy order b2 was not created in an attempt to offset the previous trade.","position":{"start":{"line":43,"column":1,"offset":1831},"end":{"line":43,"column":89,"offset":1919},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1831},"end":{"line":43,"column":89,"offset":1919},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Ping pong with multiple order levels","position":{"start":{"line":45,"column":4,"offset":1924},"end":{"line":45,"column":40,"offset":1960},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1921},"end":{"line":45,"column":40,"offset":1960},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's say initially we have 2 orders on each side, buy orders b1, b2, and sell orders s1, s2.","position":{"start":{"line":47,"column":1,"offset":1962},"end":{"line":47,"column":94,"offset":2055},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1962},"end":{"line":47,"column":94,"offset":2055},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"b1 gets filled, and b2, s1, s2 are canceled when not filled","position":{"start":{"line":49,"column":4,"offset":2060},"end":{"line":49,"column":63,"offset":2119},"indent":[]}}],"position":{"start":{"line":49,"column":4,"offset":2060},"end":{"line":49,"column":63,"offset":2119},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2057},"end":{"line":49,"column":63,"offset":2119},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Buy order b3 and sell orders s3, s4 are created","position":{"start":{"line":50,"column":4,"offset":2123},"end":{"line":50,"column":51,"offset":2170},"indent":[]}}],"position":{"start":{"line":50,"column":4,"offset":2123},"end":{"line":50,"column":51,"offset":2170},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":2120},"end":{"line":50,"column":51,"offset":2170},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"s3 gets filled, and b3, s4 are canceled when not filled","position":{"start":{"line":51,"column":4,"offset":2174},"end":{"line":51,"column":59,"offset":2229},"indent":[]}}],"position":{"start":{"line":51,"column":4,"offset":2174},"end":{"line":51,"column":59,"offset":2229},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":2171},"end":{"line":51,"column":59,"offset":2229},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Buy order b4 and sell order s5 are created","position":{"start":{"line":52,"column":4,"offset":2233},"end":{"line":52,"column":46,"offset":2275},"indent":[]}}],"position":{"start":{"line":52,"column":4,"offset":2233},"end":{"line":52,"column":46,"offset":2275},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":2230},"end":{"line":52,"column":46,"offset":2275},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"s5 gets filled, and b4 is canceled when not filled","position":{"start":{"line":53,"column":4,"offset":2279},"end":{"line":53,"column":54,"offset":2329},"indent":[]}}],"position":{"start":{"line":53,"column":4,"offset":2279},"end":{"line":53,"column":54,"offset":2329},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2276},"end":{"line":53,"column":54,"offset":2329},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Buy order b5 is created","position":{"start":{"line":54,"column":4,"offset":2333},"end":{"line":54,"column":27,"offset":2356},"indent":[]}}],"position":{"start":{"line":54,"column":4,"offset":2333},"end":{"line":54,"column":27,"offset":2356},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2330},"end":{"line":54,"column":27,"offset":2356},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"b5 gets filled","position":{"start":{"line":55,"column":4,"offset":2360},"end":{"line":55,"column":18,"offset":2374},"indent":[]}}],"position":{"start":{"line":55,"column":4,"offset":2360},"end":{"line":55,"column":18,"offset":2374},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2357},"end":{"line":55,"column":18,"offset":2374},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Buy orders b6, b7, and sell orders s6, s7 are created","position":{"start":{"line":56,"column":4,"offset":2378},"end":{"line":56,"column":57,"offset":2431},"indent":[]}}],"position":{"start":{"line":56,"column":4,"offset":2378},"end":{"line":56,"column":57,"offset":2431},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2375},"end":{"line":56,"column":57,"offset":2431},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2057},"end":{"line":56,"column":57,"offset":2431},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Ping Pong\",\"description\":\"Info on ping pong\"}","position":{"start":{"line":59,"column":1,"offset":2434},"end":{"line":59,"column":84,"offset":2517},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":59,"column":84,"offset":2517}}},"scopeImports":["import Prompt from \"../../src/components/Prompt\";","import * as React from 'react'"],"scopeIdentifiers":["Prompt","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Ping Pong\",\n  \"description\": \"Info on ping pong\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Updated as of \", mdx(\"code\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"v0.28.0\"))), mdx(\"p\", null, \"This feature enables the ping pong strategy, in which Hummingbot alternates buy and sell orders.\"), mdx(\"h2\", {\n    \"id\": \"ping_pong_enabled\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#ping_pong_enabled\",\n    \"aria-label\": \"ping_pong_enabled permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"code\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ping_pong_enabled\")), mdx(\"p\", null, \"Whether to alternate between buys and sells.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" Prompt: \")), mdx(Prompt, {\n    prompt: \"Would you like to use the ping pong feature and alternate between buy and sell orders after fills?\",\n    response: \">>> \",\n    mdxType: \"Prompt\"\n  }), mdx(\"h2\", {\n    \"id\": \"how-it-works\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#how-it-works\",\n    \"aria-label\": \"how it works permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"How It Works\"), mdx(\"p\", null, \"The ping pong strategy tries to keep buys and sells balanced by only creating orders on the opposite side of an order that is filled. It will keep on creating orders on the opposite side of the filled order as long as \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ping_pong\"), \" is set to enabled. For example:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/7149dc474f8ef6d65a987cdf48728747/ping-pong-mode.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Because the buy order from period 1 was filled, the bot stops placing buy orders, and only places sell orders (periods 2-4). Only when a sell order is eventually filled (period 4) that's the time that it will resume creating both buy and sell orders (period 5).\"), mdx(\"p\", null, \"By default, this parameter is set to \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"False\"), \". When enabled, after a filled order event on either side (buy/sell) it will only create orders on the opposite side on the next refresh.\"), mdx(\"p\", null, \"For example, if your buy order is filled and the sell order was canceled the bot will keep creating sell orders only until it gets filled.\"), mdx(\"p\", null, \"Stopping the strategy using the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"stop\"), \" command breaks the current ping pong logic. Upon restarting, the bot will initially create both buy and sell orders, assuming you have enough balance to place orders on each side.\"), mdx(\"h2\", {\n    \"id\": \"ping-pong-with-single-order-level\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#ping-pong-with-single-order-level\",\n    \"aria-label\": \"ping pong with single order level permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Ping pong with single order level\"), mdx(\"p\", null, \"The scenario below shows how ping pong balances trades when one side is filled.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Buy order b1 and sell order s1 are created\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"b1 gets filled, and s1 is canceled when not filled\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Sell order s2 is created\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"s2 gets filled\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Buy order b3 and sell order s3 are created\")), mdx(\"p\", null, \"Notice that the buy order b2 was not created in an attempt to offset the previous trade.\"), mdx(\"h2\", {\n    \"id\": \"ping-pong-with-multiple-order-levels\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#ping-pong-with-multiple-order-levels\",\n    \"aria-label\": \"ping pong with multiple order levels permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Ping pong with multiple order levels\"), mdx(\"p\", null, \"Let's say initially we have 2 orders on each side, buy orders b1, b2, and sell orders s1, s2.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"b1 gets filled, and b2, s1, s2 are canceled when not filled\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Buy order b3 and sell orders s3, s4 are created\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"s3 gets filled, and b3, s4 are canceled when not filled\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Buy order b4 and sell order s5 are created\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"s5 gets filled, and b4 is canceled when not filled\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Buy order b5 is created\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"b5 gets filled\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Buy orders b6, b7, and sell orders s6, s7 are created\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Prompt from \"../../src/components/Prompt\";\nexport const _frontmatter = {\n  \"title\": \"Ping Pong\",\n  \"description\": \"Info on ping pong\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p><strong parentName=\"p\">{`Updated as of `}<code parentName=\"strong\" {...{\n          \"className\": \"language-text\"\n        }}>{`v0.28.0`}</code></strong></p>\n    <p>{`This feature enables the ping pong strategy, in which Hummingbot alternates buy and sell orders.`}</p>\n    <h2 {...{\n      \"id\": \"ping_pong_enabled\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#ping_pong_enabled\",\n        \"aria-label\": \"ping_pong_enabled permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a><code parentName=\"h2\" {...{\n        \"className\": \"language-text\"\n      }}>{`ping_pong_enabled`}</code></h2>\n    <p>{`Whether to alternate between buys and sells.`}</p>\n    <p><strong parentName=\"p\">{` Prompt: `}</strong></p>\n    <Prompt prompt=\"Would you like to use the ping pong feature and alternate between buy and sell orders after fills?\" response=\">>> \" mdxType=\"Prompt\" />\n    <h2 {...{\n      \"id\": \"how-it-works\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#how-it-works\",\n        \"aria-label\": \"how it works permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`How It Works`}</h2>\n    <p>{`The ping pong strategy tries to keep buys and sells balanced by only creating orders on the opposite side of an order that is filled. It will keep on creating orders on the opposite side of the filled order as long as `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ping_pong`}</code>{` is set to enabled. For example:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/7149dc474f8ef6d65a987cdf48728747/ping-pong-mode.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Because the buy order from period 1 was filled, the bot stops placing buy orders, and only places sell orders (periods 2-4). Only when a sell order is eventually filled (period 4) that's the time that it will resume creating both buy and sell orders (period 5).`}</p>\n    <p>{`By default, this parameter is set to `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`False`}</code>{`. When enabled, after a filled order event on either side (buy/sell) it will only create orders on the opposite side on the next refresh.`}</p>\n    <p>{`For example, if your buy order is filled and the sell order was canceled the bot will keep creating sell orders only until it gets filled.`}</p>\n    <p>{`Stopping the strategy using the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`stop`}</code>{` command breaks the current ping pong logic. Upon restarting, the bot will initially create both buy and sell orders, assuming you have enough balance to place orders on each side.`}</p>\n    <h2 {...{\n      \"id\": \"ping-pong-with-single-order-level\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#ping-pong-with-single-order-level\",\n        \"aria-label\": \"ping pong with single order level permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Ping pong with single order level`}</h2>\n    <p>{`The scenario below shows how ping pong balances trades when one side is filled.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Buy order b1 and sell order s1 are created`}</li>\n      <li parentName=\"ol\">{`b1 gets filled, and s1 is canceled when not filled`}</li>\n      <li parentName=\"ol\">{`Sell order s2 is created`}</li>\n      <li parentName=\"ol\">{`s2 gets filled`}</li>\n      <li parentName=\"ol\">{`Buy order b3 and sell order s3 are created`}</li>\n    </ol>\n    <p>{`Notice that the buy order b2 was not created in an attempt to offset the previous trade.`}</p>\n    <h2 {...{\n      \"id\": \"ping-pong-with-multiple-order-levels\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#ping-pong-with-multiple-order-levels\",\n        \"aria-label\": \"ping pong with multiple order levels permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Ping pong with multiple order levels`}</h2>\n    <p>{`Let's say initially we have 2 orders on each side, buy orders b1, b2, and sell orders s1, s2.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`b1 gets filled, and b2, s1, s2 are canceled when not filled`}</li>\n      <li parentName=\"ol\">{`Buy order b3 and sell orders s3, s4 are created`}</li>\n      <li parentName=\"ol\">{`s3 gets filled, and b3, s4 are canceled when not filled`}</li>\n      <li parentName=\"ol\">{`Buy order b4 and sell order s5 are created`}</li>\n      <li parentName=\"ol\">{`s5 gets filled, and b4 is canceled when not filled`}</li>\n      <li parentName=\"ol\">{`Buy order b5 is created`}</li>\n      <li parentName=\"ol\">{`b5 gets filled`}</li>\n      <li parentName=\"ol\">{`Buy orders b6, b7, and sell orders s6, s7 are created`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}