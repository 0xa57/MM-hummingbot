{"expireTime":9007200881073057000,"key":"gatsby-plugin-mdx-entire-payload-5a16a20dd1e7a37c6da14fa86e7b10a2-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import Callout from \"../../src/components/Callout\";\nimport Prompt from \"../../src/components/Prompt\";","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":50,"offset":102},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Install via Docker (BETA)","position":{"start":{"line":5,"column":4,"offset":107},"end":{"line":5,"column":29,"offset":132},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":104},"end":{"line":5,"column":29,"offset":132},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Prerequisite","position":{"start":{"line":7,"column":5,"offset":138},"end":{"line":7,"column":17,"offset":150},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":134},"end":{"line":7,"column":17,"offset":150},"indent":[]}},{"type":"jsx","value":"<Callout\n  type=\"note\"\n  body=\"This installation method is currently under testing and awaiting feedback from users. Should you run into problems or have found a fix to solve errors along the way, feel free to reach out through our[Discord] support channel.\"\n  link={[\"https://discord.com/invite/2MN3UWg\"]}\n/>","position":{"start":{"line":9,"column":1,"offset":152},"end":{"line":13,"column":3,"offset":461},"indent":[1,1,1,1]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Docker and change permissions.","position":{"start":{"line":15,"column":4,"offset":466},"end":{"line":15,"column":42,"offset":504},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":466},"end":{"line":15,"column":42,"offset":504},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":463},"end":{"line":15,"column":42,"offset":504},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":463},"end":{"line":15,"column":42,"offset":504},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"curl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\nsudo usermod -a -G docker $USER","position":{"start":{"line":17,"column":1,"offset":506},"end":{"line":21,"column":4,"offset":618},"indent":[1,1,1,1]}},{"type":"list","ordered":true,"start":2,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Start and automate docker.","position":{"start":{"line":23,"column":4,"offset":623},"end":{"line":23,"column":30,"offset":649},"indent":[]}}],"position":{"start":{"line":23,"column":4,"offset":623},"end":{"line":23,"column":30,"offset":649},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":620},"end":{"line":23,"column":30,"offset":649},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":620},"end":{"line":23,"column":30,"offset":649},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"sudo systemctl start docker && sudo systemctl enable docker","position":{"start":{"line":25,"column":1,"offset":651},"end":{"line":27,"column":4,"offset":718},"indent":[1,1]}},{"type":"list","ordered":true,"start":3,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Exit terminal/shell to refresh shell.","position":{"start":{"line":29,"column":4,"offset":723},"end":{"line":29,"column":41,"offset":760},"indent":[]}}],"position":{"start":{"line":29,"column":4,"offset":723},"end":{"line":29,"column":41,"offset":760},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":720},"end":{"line":29,"column":41,"offset":760},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":720},"end":{"line":29,"column":41,"offset":760},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Exit","position":{"start":{"line":31,"column":1,"offset":762},"end":{"line":33,"column":4,"offset":774},"indent":[1,1]}},{"type":"jsx","value":"<Callout\n  type=\"warning\"\n  body=\"Restart terminal â€” Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding.\"\n/>","position":{"start":{"line":35,"column":1,"offset":776},"end":{"line":38,"column":3,"offset":945},"indent":[1,1,1]}},{"type":"list","ordered":true,"start":4,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Install Hummingbot:","position":{"start":{"line":40,"column":4,"offset":950},"end":{"line":40,"column":23,"offset":969},"indent":[]}}],"position":{"start":{"line":40,"column":4,"offset":950},"end":{"line":40,"column":23,"offset":969},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":947},"end":{"line":40,"column":23,"offset":969},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":947},"end":{"line":40,"column":23,"offset":969},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can install Hummingbot with ","position":{"start":{"line":42,"column":1,"offset":971},"end":{"line":42,"column":33,"offset":1003},"indent":[]}},{"type":"strong","children":[{"type":"emphasis","children":[{"type":"text","value":"either","position":{"start":{"line":42,"column":36,"offset":1006},"end":{"line":42,"column":42,"offset":1012},"indent":[]}}],"position":{"start":{"line":42,"column":35,"offset":1005},"end":{"line":42,"column":43,"offset":1013},"indent":[]}}],"position":{"start":{"line":42,"column":33,"offset":1003},"end":{"line":42,"column":45,"offset":1015},"indent":[]}},{"type":"text","value":" of the following options:","position":{"start":{"line":42,"column":45,"offset":1015},"end":{"line":42,"column":71,"offset":1041},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":971},"end":{"line":42,"column":71,"offset":1041},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Scripts","position":{"start":{"line":44,"column":5,"offset":1047},"end":{"line":44,"column":12,"offset":1054},"indent":[]}}],"position":{"start":{"line":44,"column":3,"offset":1045},"end":{"line":44,"column":14,"offset":1056},"indent":[]}},{"type":"text","value":": download and use automated install scripts.","position":{"start":{"line":44,"column":14,"offset":1056},"end":{"line":44,"column":59,"offset":1101},"indent":[]}}],"position":{"start":{"line":44,"column":3,"offset":1045},"end":{"line":44,"column":59,"offset":1101},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1043},"end":{"line":44,"column":59,"offset":1101},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Manual","position":{"start":{"line":45,"column":5,"offset":1106},"end":{"line":45,"column":11,"offset":1112},"indent":[]}}],"position":{"start":{"line":45,"column":3,"offset":1104},"end":{"line":45,"column":13,"offset":1114},"indent":[]}},{"type":"text","value":": run install commands manually.","position":{"start":{"line":45,"column":13,"offset":1114},"end":{"line":45,"column":45,"offset":1146},"indent":[]}}],"position":{"start":{"line":45,"column":3,"offset":1104},"end":{"line":45,"column":45,"offset":1146},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1102},"end":{"line":45,"column":45,"offset":1146},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1043},"end":{"line":45,"column":45,"offset":1146},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Scripts","position":{"start":{"line":47,"column":1,"offset":1148},"end":{"line":47,"column":8,"offset":1155},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1148},"end":{"line":47,"column":8,"offset":1155},"indent":[]}},{"type":"code","lang":"Scripts","meta":null,"value":"# 1) Download Hummingbot install, start, and update script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\n\n# 2) Enable script permissions\nchmod a+x *.sh\n\n# 3) Create a hummingbot instance\n./create.sh\n\n# 4) Pull Hummingbot ARM image when asked what version to use\nEnter Hummingbot version: [ latest/development ] ( default = 'latest' )\n>> version-0.38.1-arm_beta\n","position":{"start":{"line":49,"column":1,"offset":1157},"end":{"line":65,"column":4,"offset":1819},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Manual","position":{"start":{"line":67,"column":1,"offset":1821},"end":{"line":67,"column":7,"offset":1827},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1821},"end":{"line":67,"column":7,"offset":1827},"indent":[]}},{"type":"code","lang":"Manual","meta":null,"value":"# 1) Create folder for your new instance\nmkdir hummingbot_files\n\n# 2) Create folders for logs, config files and database file\nmkdir hummingbot_files/hummingbot_conf\nmkdir hummingbot_files/hummingbot_logs\nmkdir hummingbot_files/hummingbot_data\nmkdir hummingbot_files/hummingbot_scripts\n\n# 3) Launch a new instance of hummingbot\ndocker run -it \\\n--network host \\\n--name hummingbot-instance \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\" \\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\" \\\ncoinalpha/hummingbot:version-0.38.1-arm_beta","position":{"start":{"line":69,"column":1,"offset":1829},"end":{"line":88,"column":4,"offset":2635},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Install from Source","position":{"start":{"line":90,"column":4,"offset":2640},"end":{"line":90,"column":23,"offset":2659},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2637},"end":{"line":90,"column":23,"offset":2659},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This guide walks you through how to prepare your development environment and get started developing for Hummingbot.","position":{"start":{"line":92,"column":1,"offset":2661},"end":{"line":92,"column":116,"offset":2776},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2661},"end":{"line":92,"column":116,"offset":2776},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Running Hummingbot on a Raspberry Pi has the same main benefit of running it on a cloud server: having a dedicated machine for Hummingbot. Raspberry Piâ€™s are relatively low cost, easy to set up, and, of course, donâ€™t have the monthly charges associated with a cloud provider.","position":{"start":{"line":94,"column":1,"offset":2778},"end":{"line":94,"column":276,"offset":3053},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2778},"end":{"line":94,"column":276,"offset":3053},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"/img/rpi-hummingbot.jpg","alt":"rpi","position":{"start":{"line":96,"column":1,"offset":3055},"end":{"line":96,"column":32,"offset":3086},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3055},"end":{"line":96,"column":32,"offset":3086},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Read through our full blog post about ","position":{"start":{"line":98,"column":1,"offset":3088},"end":{"line":98,"column":39,"offset":3126},"indent":[]}},{"type":"link","title":null,"url":"https://hummingbot.io/blog/2020-07-deploying-hummingbot-on-a-raspberry-pi/","children":[{"type":"text","value":"Deploying Hummingbot on a Raspberry Pi","position":{"start":{"line":98,"column":40,"offset":3127},"end":{"line":98,"column":78,"offset":3165},"indent":[]}}],"position":{"start":{"line":98,"column":39,"offset":3126},"end":{"line":98,"column":155,"offset":3242},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":98,"column":155,"offset":3242},"end":{"line":98,"column":156,"offset":3243},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3088},"end":{"line":98,"column":156,"offset":3243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The only way to currently install Hummingbot on a Raspberry Pi is by downloading the source files from GitHub and compiling and running from source. This adds a few more steps than downloading binaries or running from Docker, but below we have provided a step-by-step guide to walk you through the process.","position":{"start":{"line":100,"column":1,"offset":3245},"end":{"line":100,"column":307,"offset":3551},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3245},"end":{"line":100,"column":307,"offset":3551},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":102,"column":5,"offset":3557},"end":{"line":102,"column":18,"offset":3570},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3553},"end":{"line":102,"column":18,"offset":3570},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Install 64-bit Raspberry Pi OS","position":{"start":{"line":104,"column":3,"offset":3574},"end":{"line":104,"column":33,"offset":3604},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3572},"end":{"line":104,"column":35,"offset":3606},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3572},"end":{"line":104,"column":35,"offset":3606},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To run Hummingbot on a Raspberry Pi, a 64-bit OS is required. Raspberry Pi has a beta 64-bit version of the Raspberry Pi OS. You can download the OS from the ","position":{"start":{"line":106,"column":1,"offset":3608},"end":{"line":106,"column":159,"offset":3766},"indent":[]}},{"type":"link","title":null,"url":"https://www.raspberrypi.org/forums/viewtopic.php?f=117&t=275370","children":[{"type":"text","value":"Raspberry Pi website","position":{"start":{"line":106,"column":160,"offset":3767},"end":{"line":106,"column":180,"offset":3787},"indent":[]}}],"position":{"start":{"line":106,"column":159,"offset":3766},"end":{"line":106,"column":246,"offset":3853},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":106,"column":246,"offset":3853},"end":{"line":106,"column":247,"offset":3854},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3608},"end":{"line":106,"column":247,"offset":3854},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Load the image file to your Raspberry Piâ€™s SD card","position":{"start":{"line":108,"column":3,"offset":3858},"end":{"line":108,"column":53,"offset":3908},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3856},"end":{"line":108,"column":55,"offset":3910},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3856},"end":{"line":108,"column":55,"offset":3910},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Raspberry Pi has an easy to follow ","position":{"start":{"line":110,"column":1,"offset":3912},"end":{"line":110,"column":36,"offset":3947},"indent":[]}},{"type":"link","title":null,"url":"https://www.raspberrypi.org/documentation/installation/installing-images/","children":[{"type":"text","value":"guide","position":{"start":{"line":110,"column":37,"offset":3948},"end":{"line":110,"column":42,"offset":3953},"indent":[]}}],"position":{"start":{"line":110,"column":36,"offset":3947},"end":{"line":110,"column":118,"offset":4029},"indent":[]}},{"type":"text","value":" with alternatives on how to load the SD card with a Raspberry Pi OS from different operating systems.","position":{"start":{"line":110,"column":118,"offset":4029},"end":{"line":110,"column":220,"offset":4131},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":3912},"end":{"line":110,"column":220,"offset":4131},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Boot your Raspberry Pi","position":{"start":{"line":112,"column":3,"offset":4135},"end":{"line":112,"column":25,"offset":4157},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4133},"end":{"line":112,"column":27,"offset":4159},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4133},"end":{"line":112,"column":27,"offset":4159},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Insert your SD card into the Raspberry Pi and plug in the power source.\nFrom there, the first launch options will be prompted.","position":{"start":{"line":114,"column":1,"offset":4161},"end":{"line":115,"column":55,"offset":4287},"indent":[1]}}],"position":{"start":{"line":114,"column":1,"offset":4161},"end":{"line":115,"column":55,"offset":4287},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" Install Hummingbot dependencies ","position":{"start":{"line":117,"column":3,"offset":4291},"end":{"line":117,"column":36,"offset":4324},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":4289},"end":{"line":117,"column":38,"offset":4326},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":4289},"end":{"line":117,"column":38,"offset":4326},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Open the Raspberry Pi terminal. In the top left corner of the desktop, there is a shortcut that opens the terminal.","position":{"start":{"line":119,"column":1,"offset":4328},"end":{"line":119,"column":116,"offset":4443},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":4328},"end":{"line":119,"column":116,"offset":4443},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# Install Miniforge, Python and update alternatives\nwget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh\nsh Miniforge3-Linux-aarch64.sh\nsudo apt-get install python3.7\nsudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n","position":{"start":{"line":121,"column":1,"offset":4445},"end":{"line":128,"column":4,"offset":4743},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Logout and login again to enable ","position":{"start":{"line":130,"column":1,"offset":4745},"end":{"line":130,"column":34,"offset":4778},"indent":[]}},{"type":"inlineCode","value":"conda","position":{"start":{"line":130,"column":34,"offset":4778},"end":{"line":130,"column":41,"offset":4785},"indent":[]}},{"type":"text","value":", this will make the ","position":{"start":{"line":130,"column":41,"offset":4785},"end":{"line":130,"column":62,"offset":4806},"indent":[]}},{"type":"inlineCode","value":"conda","position":{"start":{"line":130,"column":62,"offset":4806},"end":{"line":130,"column":69,"offset":4813},"indent":[]}},{"type":"text","value":" command available in shell / terminal.","position":{"start":{"line":130,"column":69,"offset":4813},"end":{"line":130,"column":108,"offset":4852},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":4745},"end":{"line":130,"column":108,"offset":4852},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Install pip dependencies","position":{"start":{"line":132,"column":3,"offset":4856},"end":{"line":132,"column":27,"offset":4880},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4854},"end":{"line":132,"column":29,"offset":4882},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4854},"end":{"line":132,"column":29,"offset":4882},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# Create a conda environment for Hummingbot\nconda create --name hummingbot\n\n# Activate your conda environment\nconda activate hummingbot\n\n# Clone the Hummingbot repo from Github\ngit clone https://github.com/CoinAlpha/hummingbot.git\n\n# Install the pip dependencies\ncd hummingbot\npip install -r setup/requirements-arm.txt","position":{"start":{"line":134,"column":1,"offset":4884},"end":{"line":147,"column":4,"offset":5210},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Compile and run Hummingbot","position":{"start":{"line":149,"column":3,"offset":5214},"end":{"line":149,"column":29,"offset":5240},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":5212},"end":{"line":149,"column":31,"offset":5242},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":5212},"end":{"line":149,"column":31,"offset":5242},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# Clean your Hummingbot directory and compile\n./clean && ./compile\n\n# Run Hummingbot\nbin/hummingbot.py","position":{"start":{"line":151,"column":1,"offset":5244},"end":{"line":157,"column":4,"offset":5354},"indent":[1,1,1,1,1,1]}},{"type":"jsx","value":"<Callout\n  type=\"warning\"\n  body=\"#Compiling the bot from source would normally take 45 minutes or more#\"\n/>","position":{"start":{"line":159,"column":1,"offset":5356},"end":{"line":162,"column":3,"offset":5464},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Create Hummingbot ARM image for Docker","position":{"start":{"line":164,"column":4,"offset":5469},"end":{"line":164,"column":42,"offset":5507},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5466},"end":{"line":164,"column":42,"offset":5507},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This guide would help you build your own Hummingbot ARM image when there is a new release. Please be advised that for every new release, you would need to ","position":{"start":{"line":166,"column":1,"offset":5509},"end":{"line":166,"column":156,"offset":5664},"indent":[]}},{"type":"link","title":null,"url":"#install-from-source","children":[{"type":"text","value":"install from source","position":{"start":{"line":166,"column":157,"offset":5665},"end":{"line":166,"column":176,"offset":5684},"indent":[]}}],"position":{"start":{"line":166,"column":156,"offset":5664},"end":{"line":166,"column":199,"offset":5707},"indent":[]}},{"type":"text","value":" first and follow the steps provided in order to create an image that you can use for your RaspberryPi docker.","position":{"start":{"line":166,"column":199,"offset":5707},"end":{"line":166,"column":309,"offset":5817},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5509},"end":{"line":166,"column":309,"offset":5817},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Go to your source directory and run the command below","position":{"start":{"line":168,"column":4,"offset":5822},"end":{"line":168,"column":57,"offset":5875},"indent":[]}}],"position":{"start":{"line":168,"column":4,"offset":5822},"end":{"line":168,"column":57,"offset":5875},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5819},"end":{"line":168,"column":57,"offset":5875},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5819},"end":{"line":168,"column":57,"offset":5875},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# Set a name of your image on insert_name\ndocker build -t coinalpha/hummingbot:insert_name -f Dockerfile.arm .","position":{"start":{"line":170,"column":1,"offset":5877},"end":{"line":173,"column":4,"offset":5995},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"On this sample, we set ","position":{"start":{"line":175,"column":1,"offset":5997},"end":{"line":175,"column":24,"offset":6020},"indent":[]}},{"type":"inlineCode","value":"v036","position":{"start":{"line":175,"column":24,"offset":6020},"end":{"line":175,"column":30,"offset":6026},"indent":[]}},{"type":"text","value":" for the name of the image. This is needed when you run ","position":{"start":{"line":175,"column":30,"offset":6026},"end":{"line":175,"column":86,"offset":6082},"indent":[]}},{"type":"inlineCode","value":"./create.sh","position":{"start":{"line":175,"column":86,"offset":6082},"end":{"line":175,"column":99,"offset":6095},"indent":[]}},{"type":"text","value":" command\n","position":{"start":{"line":175,"column":99,"offset":6095},"end":{"line":176,"column":1,"offset":6104},"indent":[1]}},{"type":"image","title":null,"url":"/img/rpi-docker-img.png","alt":null,"position":{"start":{"line":176,"column":1,"offset":6104},"end":{"line":176,"column":29,"offset":6132},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":5997},"end":{"line":176,"column":29,"offset":6132},"indent":[1]}},{"type":"jsx","value":"<Callout\n  type=\"warning\"\n  body=\"#Building the Hummingbot ARM image from source would normally take 45 minutes or more#\"\n/>","position":{"start":{"line":178,"column":1,"offset":6134},"end":{"line":181,"column":3,"offset":6258},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Controlling remotely using VNC Viewer","position":{"start":{"line":183,"column":4,"offset":6263},"end":{"line":183,"column":41,"offset":6300},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":6260},"end":{"line":183,"column":41,"offset":6300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"SSH and VNC features are natively built into the Raspberry Pi and can easily be turned on in the Raspberry Pi configurations settings. By turning these on, you can access the Raspberry Pi from another computer by:","position":{"start":{"line":185,"column":1,"offset":6302},"end":{"line":185,"column":214,"offset":6515},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":6302},"end":{"line":185,"column":214,"offset":6515},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using terminal to SSH, similar to how you would access a cloud server","position":{"start":{"line":187,"column":4,"offset":6520},"end":{"line":187,"column":73,"offset":6589},"indent":[]}}],"position":{"start":{"line":187,"column":4,"offset":6520},"end":{"line":187,"column":73,"offset":6589},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":6517},"end":{"line":187,"column":73,"offset":6589},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using VNC to enable remote desktop access to the Raspberry Pi GUI.","position":{"start":{"line":188,"column":4,"offset":6593},"end":{"line":188,"column":70,"offset":6659},"indent":[]}}],"position":{"start":{"line":188,"column":4,"offset":6593},"end":{"line":188,"column":70,"offset":6659},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":6590},"end":{"line":188,"column":70,"offset":6659},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":6517},"end":{"line":188,"column":70,"offset":6659},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"This is very convenient; after initial setup of the Raspberry Pi, you can simply unplug the monitor, keyboard and mouse, and just set the Raspberry Pi itself aside and just access it remotely going forward.","position":{"start":{"line":190,"column":1,"offset":6661},"end":{"line":190,"column":207,"offset":6867},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":6661},"end":{"line":190,"column":207,"offset":6867},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"/img/rpi-ssh.jpg","alt":"rpi","position":{"start":{"line":192,"column":1,"offset":6869},"end":{"line":192,"column":25,"offset":6893},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":6869},"end":{"line":192,"column":25,"offset":6893},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Step 1. Enable SSH and VNC on your Raspberry Pi","position":{"start":{"line":194,"column":3,"offset":6897},"end":{"line":194,"column":50,"offset":6944},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":6895},"end":{"line":194,"column":52,"offset":6946},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":6895},"end":{"line":194,"column":52,"offset":6946},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Option 1: Terminal using raspi-config","position":{"start":{"line":196,"column":3,"offset":6950},"end":{"line":196,"column":40,"offset":6987},"indent":[]}}],"position":{"start":{"line":196,"column":3,"offset":6950},"end":{"line":196,"column":40,"offset":6987},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":6948},"end":{"line":196,"column":40,"offset":6987},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":6948},"end":{"line":196,"column":40,"offset":6987},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"sudo raspi-config","position":{"start":{"line":198,"column":1,"offset":6989},"end":{"line":200,"column":4,"offset":7014},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Under Interfacing Options, enable SSH and VNC.","position":{"start":{"line":202,"column":1,"offset":7016},"end":{"line":202,"column":47,"offset":7062},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":7016},"end":{"line":202,"column":47,"offset":7062},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Option 2: Access in Raspberry Pi Configuration","position":{"start":{"line":204,"column":3,"offset":7066},"end":{"line":204,"column":49,"offset":7112},"indent":[]}}],"position":{"start":{"line":204,"column":3,"offset":7066},"end":{"line":204,"column":49,"offset":7112},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":7064},"end":{"line":204,"column":49,"offset":7112},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":7064},"end":{"line":204,"column":49,"offset":7112},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Select the menu in the top left corner of the screen then go to ","position":{"start":{"line":206,"column":1,"offset":7114},"end":{"line":206,"column":65,"offset":7178},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Preferences > Raspberry Pi configuration > Interfaces","position":{"start":{"line":206,"column":67,"offset":7180},"end":{"line":206,"column":120,"offset":7233},"indent":[]}}],"position":{"start":{"line":206,"column":65,"offset":7178},"end":{"line":206,"column":122,"offset":7235},"indent":[]}},{"type":"text","value":" from there you will see options to enable SSH and VNC.","position":{"start":{"line":206,"column":122,"offset":7235},"end":{"line":206,"column":177,"offset":7290},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":7114},"end":{"line":206,"column":177,"offset":7290},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"/img/rpi-config.jpg","alt":"rpi","position":{"start":{"line":208,"column":1,"offset":7292},"end":{"line":208,"column":28,"offset":7319},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":7292},"end":{"line":208,"column":28,"offset":7319},"indent":[]}},{"type":"jsx","value":"<Callout\n  type=\"tip\"\n  body=\"Set a default screen resolution in `raspi-config` select: `7 Advanced Options` > `A5 Resolution` to enable VNC access to the GUI whenever you boot the Raspberry Pi without a connected monitor. For troubleshooting please visit this [link].\"\n  link={[\"https://www.raspberrypi.org/forums/viewtopic.php?t=216737\"]}\n/>","position":{"start":{"line":210,"column":1,"offset":7321},"end":{"line":214,"column":3,"offset":7664},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Setting a default resolution will avoid the following error:","position":{"start":{"line":216,"column":1,"offset":7666},"end":{"line":216,"column":61,"offset":7726},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":7666},"end":{"line":216,"column":61,"offset":7726},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"/img/rasp-no-monitor.png","alt":"rasp","position":{"start":{"line":218,"column":1,"offset":7728},"end":{"line":218,"column":34,"offset":7761},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":7728},"end":{"line":218,"column":34,"offset":7761},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Step 2. Get your Raspberry Piâ€™s IP address","position":{"start":{"line":220,"column":3,"offset":7765},"end":{"line":220,"column":45,"offset":7807},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":7763},"end":{"line":220,"column":47,"offset":7809},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":7763},"end":{"line":220,"column":47,"offset":7809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Type ","position":{"start":{"line":222,"column":1,"offset":7811},"end":{"line":222,"column":6,"offset":7816},"indent":[]}},{"type":"inlineCode","value":"ifconfig","position":{"start":{"line":222,"column":6,"offset":7816},"end":{"line":222,"column":16,"offset":7826},"indent":[]}},{"type":"text","value":" to get the IP address of your Raspberry Pi to enter into your VNC Viewer. For SSH, you can run ","position":{"start":{"line":222,"column":16,"offset":7826},"end":{"line":222,"column":112,"offset":7922},"indent":[]}},{"type":"inlineCode","value":"ssh pi@[ipaddress]","position":{"start":{"line":222,"column":112,"offset":7922},"end":{"line":222,"column":132,"offset":7942},"indent":[]}},{"type":"text","value":". The IP address is the ","position":{"start":{"line":222,"column":132,"offset":7942},"end":{"line":222,"column":156,"offset":7966},"indent":[]}},{"type":"inlineCode","value":"inet","position":{"start":{"line":222,"column":156,"offset":7966},"end":{"line":222,"column":162,"offset":7972},"indent":[]}},{"type":"text","value":" address which is not the localhost IP address 127.0.0.1:","position":{"start":{"line":222,"column":162,"offset":7972},"end":{"line":222,"column":219,"offset":8029},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":7811},"end":{"line":222,"column":219,"offset":8029},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"/img/rpi-private-address.jpg","alt":"rpi","position":{"start":{"line":224,"column":1,"offset":8031},"end":{"line":224,"column":37,"offset":8067},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":8031},"end":{"line":224,"column":37,"offset":8067},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Raspberry Pi\",\"description\":\"Raspberry installation Guide\"}","position":{"start":{"line":227,"column":1,"offset":8070},"end":{"line":227,"column":98,"offset":8167},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":227,"column":98,"offset":8167}}},"scopeImports":["import Callout from \"../../src/components/Callout\";","import Prompt from \"../../src/components/Prompt\";","import * as React from 'react'"],"scopeIdentifiers":["Callout","Prompt","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Raspberry Pi\",\n  \"description\": \"Raspberry installation Guide\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"install-via-docker-beta\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#install-via-docker-beta\",\n    \"aria-label\": \"install via docker beta permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install via Docker (BETA)\"), mdx(\"h3\", {\n    \"id\": \"prerequisite\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#prerequisite\",\n    \"aria-label\": \"prerequisite permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Prerequisite\"), mdx(Callout, {\n    type: \"note\",\n    body: \"This installation method is currently under testing and awaiting feedback from users. Should you run into problems or have found a fix to solve errors along the way, feel free to reach out through our[Discord] support channel.\",\n    link: [\"https://discord.com/invite/2MN3UWg\"],\n    mdxType: \"Callout\"\n  }), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Docker and change permissions.\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"curl -fsSL https://get.docker.com -o get-docker.sh\\nsudo sh get-docker.sh\\nsudo usermod -a -G docker $USER\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Start and automate docker.\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"sudo systemctl start docker && sudo systemctl enable docker\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Exit terminal/shell to refresh shell.\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Exit\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(Callout, {\n    type: \"warning\",\n    body: \"Restart terminal \\u2014 Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding.\",\n    mdxType: \"Callout\"\n  }), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install Hummingbot:\")), mdx(\"p\", null, \"You can install Hummingbot with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"either\")), \" of the following options:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Scripts\"), \": download and use automated install scripts.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Manual\"), \": run install commands manually.\")), mdx(\"p\", null, \"Scripts\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"scripts\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-scripts line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scripts\"\n  }), \"# 1) Download Hummingbot install, start, and update script\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\\n\\n# 2) Enable script permissions\\nchmod a+x *.sh\\n\\n# 3) Create a hummingbot instance\\n./create.sh\\n\\n# 4) Pull Hummingbot ARM image when asked what version to use\\nEnter Hummingbot version: [ latest/development ] ( default = 'latest' )\\n>> version-0.38.1-arm_beta\\n\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Manual\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"manual\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-manual line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-manual\"\n  }), \"# 1) Create folder for your new instance\\nmkdir hummingbot_files\\n\\n# 2) Create folders for logs, config files and database file\\nmkdir hummingbot_files/hummingbot_conf\\nmkdir hummingbot_files/hummingbot_logs\\nmkdir hummingbot_files/hummingbot_data\\nmkdir hummingbot_files/hummingbot_scripts\\n\\n# 3) Launch a new instance of hummingbot\\ndocker run -it \\\\\\n--network host \\\\\\n--name hummingbot-instance \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\\\" \\\\\\n--mount \\\"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\\\" \\\\\\ncoinalpha/hummingbot:version-0.38.1-arm_beta\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"install-from-source\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#install-from-source\",\n    \"aria-label\": \"install from source permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Install from Source\"), mdx(\"p\", null, \"This guide walks you through how to prepare your development environment and get started developing for Hummingbot.\"), mdx(\"p\", null, \"Running Hummingbot on a Raspberry Pi has the same main benefit of running it on a cloud server: having a dedicated machine for Hummingbot. Raspberry Pi\\u2019s are relatively low cost, easy to set up, and, of course, don\\u2019t have the monthly charges associated with a cloud provider.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/5793664bbf338565952b74c07da0221b/rpi-hummingbot.jpg\",\n    \"alt\": \"rpi\"\n  }))), mdx(\"p\", null, \"Read through our full blog post about \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hummingbot.io/blog/2020-07-deploying-hummingbot-on-a-raspberry-pi/\"\n  }), \"Deploying Hummingbot on a Raspberry Pi\"), \".\"), mdx(\"p\", null, \"The only way to currently install Hummingbot on a Raspberry Pi is by downloading the source files from GitHub and compiling and running from source. This adds a few more steps than downloading binaries or running from Docker, but below we have provided a step-by-step guide to walk you through the process.\"), mdx(\"h3\", {\n    \"id\": \"prerequisites\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#prerequisites\",\n    \"aria-label\": \"prerequisites permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Prerequisites\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Install 64-bit Raspberry Pi OS\")), mdx(\"p\", null, \"To run Hummingbot on a Raspberry Pi, a 64-bit OS is required. Raspberry Pi has a beta 64-bit version of the Raspberry Pi OS. You can download the OS from the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.raspberrypi.org/forums/viewtopic.php?f=117&t=275370\"\n  }), \"Raspberry Pi website\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Load the image file to your Raspberry Pi\\u2019s SD card\")), mdx(\"p\", null, \"Raspberry Pi has an easy to follow \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.raspberrypi.org/documentation/installation/installing-images/\"\n  }), \"guide\"), \" with alternatives on how to load the SD card with a Raspberry Pi OS from different operating systems.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Boot your Raspberry Pi\")), mdx(\"p\", null, \"Insert your SD card into the Raspberry Pi and plug in the power source.\\nFrom there, the first launch options will be prompted.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" Install Hummingbot dependencies \")), mdx(\"p\", null, \"Open the Raspberry Pi terminal. In the top left corner of the desktop, there is a shortcut that opens the terminal.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"# Install Miniforge, Python and update alternatives\\nwget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh\\nsh Miniforge3-Linux-aarch64.sh\\nsudo apt-get install python3.7\\nsudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1\\n\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Logout and login again to enable \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"conda\"), \", this will make the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"conda\"), \" command available in shell / terminal.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Install pip dependencies\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"# Create a conda environment for Hummingbot\\nconda create --name hummingbot\\n\\n# Activate your conda environment\\nconda activate hummingbot\\n\\n# Clone the Hummingbot repo from Github\\ngit clone https://github.com/CoinAlpha/hummingbot.git\\n\\n# Install the pip dependencies\\ncd hummingbot\\npip install -r setup/requirements-arm.txt\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Compile and run Hummingbot\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"# Clean your Hummingbot directory and compile\\n./clean && ./compile\\n\\n# Run Hummingbot\\nbin/hummingbot.py\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(Callout, {\n    type: \"warning\",\n    body: \"#Compiling the bot from source would normally take 45 minutes or more#\",\n    mdxType: \"Callout\"\n  }), mdx(\"h2\", {\n    \"id\": \"create-hummingbot-arm-image-for-docker\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#create-hummingbot-arm-image-for-docker\",\n    \"aria-label\": \"create hummingbot arm image for docker permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Create Hummingbot ARM image for Docker\"), mdx(\"p\", null, \"This guide would help you build your own Hummingbot ARM image when there is a new release. Please be advised that for every new release, you would need to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#install-from-source\"\n  }), \"install from source\"), \" first and follow the steps provided in order to create an image that you can use for your RaspberryPi docker.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Go to your source directory and run the command below\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"# Set a name of your image on insert_name\\ndocker build -t coinalpha/hummingbot:insert_name -f Dockerfile.arm .\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"On this sample, we set \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"v036\"), \" for the name of the image. This is needed when you run \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"./create.sh\"), \" command\\n\", mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/f1ab4e5cfb30679a1a35c0ab2f936539/rpi-docker-img.png\",\n    \"alt\": null\n  }))), mdx(Callout, {\n    type: \"warning\",\n    body: \"#Building the Hummingbot ARM image from source would normally take 45 minutes or more#\",\n    mdxType: \"Callout\"\n  }), mdx(\"h2\", {\n    \"id\": \"controlling-remotely-using-vnc-viewer\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#controlling-remotely-using-vnc-viewer\",\n    \"aria-label\": \"controlling remotely using vnc viewer permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Controlling remotely using VNC Viewer\"), mdx(\"p\", null, \"SSH and VNC features are natively built into the Raspberry Pi and can easily be turned on in the Raspberry Pi configurations settings. By turning these on, you can access the Raspberry Pi from another computer by:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using terminal to SSH, similar to how you would access a cloud server\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Using VNC to enable remote desktop access to the Raspberry Pi GUI.\")), mdx(\"p\", null, \"This is very convenient; after initial setup of the Raspberry Pi, you can simply unplug the monitor, keyboard and mouse, and just set the Raspberry Pi itself aside and just access it remotely going forward.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/9f69461a21c16087cafe029d99d1aaa6/rpi-ssh.jpg\",\n    \"alt\": \"rpi\"\n  }))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1. Enable SSH and VNC on your Raspberry Pi\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Option 1: Terminal using raspi-config\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-text line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"sudo raspi-config\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"Under Interfacing Options, enable SSH and VNC.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Option 2: Access in Raspberry Pi Configuration\")), mdx(\"p\", null, \"Select the menu in the top left corner of the screen then go to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Preferences > Raspberry Pi configuration > Interfaces\"), \" from there you will see options to enable SSH and VNC.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/d6b4ebad8d5ddbf3f0728e1d07d1b7ae/rpi-config.jpg\",\n    \"alt\": \"rpi\"\n  }))), mdx(Callout, {\n    type: \"tip\",\n    body: \"Set a default screen resolution in `raspi-config` select: `7 Advanced Options` > `A5 Resolution` to enable VNC access to the GUI whenever you boot the Raspberry Pi without a connected monitor. For troubleshooting please visit this [link].\",\n    link: [\"https://www.raspberrypi.org/forums/viewtopic.php?t=216737\"],\n    mdxType: \"Callout\"\n  }), mdx(\"p\", null, \"Setting a default resolution will avoid the following error:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/f31efb2cbd9ab38dc3c0fd4d14b61c80/rasp-no-monitor.png\",\n    \"alt\": \"rasp\"\n  }))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2. Get your Raspberry Pi\\u2019s IP address\")), mdx(\"p\", null, \"Type \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ifconfig\"), \" to get the IP address of your Raspberry Pi to enter into your VNC Viewer. For SSH, you can run \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"ssh pi@[ipaddress]\"), \". The IP address is the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"inet\"), \" address which is not the localhost IP address 127.0.0.1:\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/97e8752a90f71bbe3dd6d089f9556324/rpi-private-address.jpg\",\n    \"alt\": \"rpi\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Callout from \"../../src/components/Callout\";\nimport Prompt from \"../../src/components/Prompt\";\nexport const _frontmatter = {\n  \"title\": \"Raspberry Pi\",\n  \"description\": \"Raspberry installation Guide\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"install-via-docker-beta\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#install-via-docker-beta\",\n        \"aria-label\": \"install via docker beta permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Install via Docker (BETA)`}</h2>\n    <h3 {...{\n      \"id\": \"prerequisite\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#prerequisite\",\n        \"aria-label\": \"prerequisite permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Prerequisite`}</h3>\n    <Callout type=\"note\" body=\"This installation method is currently under testing and awaiting feedback from users. Should you run into problems or have found a fix to solve errors along the way, feel free to reach out through our[Discord] support channel.\" link={[\"https://discord.com/invite/2MN3UWg\"]} mdxType=\"Callout\" />\n    <ol>\n      <li parentName=\"ol\">{`Install Docker and change permissions.`}</li>\n    </ol>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`curl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\nsudo usermod -a -G docker $USER`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Start and automate docker.`}</li>\n    </ol>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`sudo systemctl start docker && sudo systemctl enable docker`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Exit terminal/shell to refresh shell.`}</li>\n    </ol>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`Exit`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <Callout type=\"warning\" body=\"Restart terminal â€” Close and restart your terminal window to enable the correct permissions for `docker` command before proceeding.\" mdxType=\"Callout\" />\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Install Hummingbot:`}</li>\n    </ol>\n    <p>{`You can install Hummingbot with `}<strong parentName=\"p\"><em parentName=\"strong\">{`either`}</em></strong>{` of the following options:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Scripts`}</strong>{`: download and use automated install scripts.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Manual`}</strong>{`: run install commands manually.`}</li>\n    </ul>\n    <p>{`Scripts`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"scripts\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-scripts line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-scripts\"\n        }}>{`# 1) Download Hummingbot install, start, and update script\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/create.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/start.sh\nwget https://raw.githubusercontent.com/CoinAlpha/hummingbot/development/installation/docker-commands/update.sh\n\n# 2) Enable script permissions\nchmod a+x *.sh\n\n# 3) Create a hummingbot instance\n./create.sh\n\n# 4) Pull Hummingbot ARM image when asked what version to use\nEnter Hummingbot version: [ latest/development ] ( default = 'latest' )\n>> version-0.38.1-arm_beta\n`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Manual`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"manual\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-manual line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-manual\"\n        }}>{`# 1) Create folder for your new instance\nmkdir hummingbot_files\n\n# 2) Create folders for logs, config files and database file\nmkdir hummingbot_files/hummingbot_conf\nmkdir hummingbot_files/hummingbot_logs\nmkdir hummingbot_files/hummingbot_data\nmkdir hummingbot_files/hummingbot_scripts\n\n# 3) Launch a new instance of hummingbot\ndocker run -it \\\\\n--network host \\\\\n--name hummingbot-instance \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_conf,destination=/conf/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_logs,destination=/logs/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_data,destination=/data/\" \\\\\n--mount \"type=bind,source=$(pwd)/hummingbot_files/hummingbot_scripts,destination=/scripts/\" \\\\\ncoinalpha/hummingbot:version-0.38.1-arm_beta`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <h2 {...{\n      \"id\": \"install-from-source\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#install-from-source\",\n        \"aria-label\": \"install from source permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Install from Source`}</h2>\n    <p>{`This guide walks you through how to prepare your development environment and get started developing for Hummingbot.`}</p>\n    <p>{`Running Hummingbot on a Raspberry Pi has the same main benefit of running it on a cloud server: having a dedicated machine for Hummingbot. Raspberry Piâ€™s are relatively low cost, easy to set up, and, of course, donâ€™t have the monthly charges associated with a cloud provider.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/5793664bbf338565952b74c07da0221b/rpi-hummingbot.jpg\",\n        \"alt\": \"rpi\"\n      }}></img></p>\n    <p>{`Read through our full blog post about `}<a parentName=\"p\" {...{\n        \"href\": \"https://hummingbot.io/blog/2020-07-deploying-hummingbot-on-a-raspberry-pi/\"\n      }}>{`Deploying Hummingbot on a Raspberry Pi`}</a>{`.`}</p>\n    <p>{`The only way to currently install Hummingbot on a Raspberry Pi is by downloading the source files from GitHub and compiling and running from source. This adds a few more steps than downloading binaries or running from Docker, but below we have provided a step-by-step guide to walk you through the process.`}</p>\n    <h3 {...{\n      \"id\": \"prerequisites\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#prerequisites\",\n        \"aria-label\": \"prerequisites permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Prerequisites`}</h3>\n    <p><strong parentName=\"p\">{`Install 64-bit Raspberry Pi OS`}</strong></p>\n    <p>{`To run Hummingbot on a Raspberry Pi, a 64-bit OS is required. Raspberry Pi has a beta 64-bit version of the Raspberry Pi OS. You can download the OS from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.raspberrypi.org/forums/viewtopic.php?f=117&t=275370\"\n      }}>{`Raspberry Pi website`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Load the image file to your Raspberry Piâ€™s SD card`}</strong></p>\n    <p>{`Raspberry Pi has an easy to follow `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.raspberrypi.org/documentation/installation/installing-images/\"\n      }}>{`guide`}</a>{` with alternatives on how to load the SD card with a Raspberry Pi OS from different operating systems.`}</p>\n    <p><strong parentName=\"p\">{`Boot your Raspberry Pi`}</strong></p>\n    <p>{`Insert your SD card into the Raspberry Pi and plug in the power source.\nFrom there, the first launch options will be prompted.`}</p>\n    <p><strong parentName=\"p\">{` Install Hummingbot dependencies `}</strong></p>\n    <p>{`Open the Raspberry Pi terminal. In the top left corner of the desktop, there is a shortcut that opens the terminal.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`# Install Miniforge, Python and update alternatives\nwget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh\nsh Miniforge3-Linux-aarch64.sh\nsudo apt-get install python3.7\nsudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Logout and login again to enable `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`conda`}</code>{`, this will make the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`conda`}</code>{` command available in shell / terminal.`}</p>\n    <p><strong parentName=\"p\">{`Install pip dependencies`}</strong></p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`# Create a conda environment for Hummingbot\nconda create --name hummingbot\n\n# Activate your conda environment\nconda activate hummingbot\n\n# Clone the Hummingbot repo from Github\ngit clone https://github.com/CoinAlpha/hummingbot.git\n\n# Install the pip dependencies\ncd hummingbot\npip install -r setup/requirements-arm.txt`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p><strong parentName=\"p\">{`Compile and run Hummingbot`}</strong></p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`# Clean your Hummingbot directory and compile\n./clean && ./compile\n\n# Run Hummingbot\nbin/hummingbot.py`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <Callout type=\"warning\" body=\"#Compiling the bot from source would normally take 45 minutes or more#\" mdxType=\"Callout\" />\n    <h2 {...{\n      \"id\": \"create-hummingbot-arm-image-for-docker\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#create-hummingbot-arm-image-for-docker\",\n        \"aria-label\": \"create hummingbot arm image for docker permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Create Hummingbot ARM image for Docker`}</h2>\n    <p>{`This guide would help you build your own Hummingbot ARM image when there is a new release. Please be advised that for every new release, you would need to `}<a parentName=\"p\" {...{\n        \"href\": \"#install-from-source\"\n      }}>{`install from source`}</a>{` first and follow the steps provided in order to create an image that you can use for your RaspberryPi docker.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Go to your source directory and run the command below`}</li>\n    </ol>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`# Set a name of your image on insert_name\ndocker build -t coinalpha/hummingbot:insert_name -f Dockerfile.arm .`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span><span parentName=\"span\"></span></span></pre></div>\n    <p>{`On this sample, we set `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`v036`}</code>{` for the name of the image. This is needed when you run `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`./create.sh`}</code>{` command\n`}<img parentName=\"p\" {...{\n        \"src\": \"/f1ab4e5cfb30679a1a35c0ab2f936539/rpi-docker-img.png\",\n        \"alt\": null\n      }}></img></p>\n    <Callout type=\"warning\" body=\"#Building the Hummingbot ARM image from source would normally take 45 minutes or more#\" mdxType=\"Callout\" />\n    <h2 {...{\n      \"id\": \"controlling-remotely-using-vnc-viewer\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#controlling-remotely-using-vnc-viewer\",\n        \"aria-label\": \"controlling remotely using vnc viewer permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Controlling remotely using VNC Viewer`}</h2>\n    <p>{`SSH and VNC features are natively built into the Raspberry Pi and can easily be turned on in the Raspberry Pi configurations settings. By turning these on, you can access the Raspberry Pi from another computer by:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Using terminal to SSH, similar to how you would access a cloud server`}</li>\n      <li parentName=\"ol\">{`Using VNC to enable remote desktop access to the Raspberry Pi GUI.`}</li>\n    </ol>\n    <p>{`This is very convenient; after initial setup of the Raspberry Pi, you can simply unplug the monitor, keyboard and mouse, and just set the Raspberry Pi itself aside and just access it remotely going forward.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/9f69461a21c16087cafe029d99d1aaa6/rpi-ssh.jpg\",\n        \"alt\": \"rpi\"\n      }}></img></p>\n    <p><strong parentName=\"p\">{`Step 1. Enable SSH and VNC on your Raspberry Pi`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Option 1: Terminal using raspi-config`}</li>\n    </ul>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"style\": {\n          \"counterReset\": \"linenumber NaN\"\n        },\n        \"className\": \"language-text line-numbers\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`sudo raspi-config`}</code><span parentName=\"pre\" {...{\n          \"aria-hidden\": \"true\",\n          \"className\": \"line-numbers-rows\",\n          \"style\": {\n            \"whiteSpace\": \"normal\",\n            \"width\": \"auto\",\n            \"left\": \"0\"\n          }\n        }}><span parentName=\"span\"></span></span></pre></div>\n    <p>{`Under Interfacing Options, enable SSH and VNC.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Option 2: Access in Raspberry Pi Configuration`}</li>\n    </ul>\n    <p>{`Select the menu in the top left corner of the screen then go to `}<strong parentName=\"p\">{`Preferences > Raspberry Pi configuration > Interfaces`}</strong>{` from there you will see options to enable SSH and VNC.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/d6b4ebad8d5ddbf3f0728e1d07d1b7ae/rpi-config.jpg\",\n        \"alt\": \"rpi\"\n      }}></img></p>\n    <Callout type=\"tip\" body=\"Set a default screen resolution in `raspi-config` select: `7 Advanced Options` > `A5 Resolution` to enable VNC access to the GUI whenever you boot the Raspberry Pi without a connected monitor. For troubleshooting please visit this [link].\" link={[\"https://www.raspberrypi.org/forums/viewtopic.php?t=216737\"]} mdxType=\"Callout\" />\n    <p>{`Setting a default resolution will avoid the following error:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/f31efb2cbd9ab38dc3c0fd4d14b61c80/rasp-no-monitor.png\",\n        \"alt\": \"rasp\"\n      }}></img></p>\n    <p><strong parentName=\"p\">{`Step 2. Get your Raspberry Piâ€™s IP address`}</strong></p>\n    <p>{`Type `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ifconfig`}</code>{` to get the IP address of your Raspberry Pi to enter into your VNC Viewer. For SSH, you can run `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`ssh pi@[ipaddress]`}</code>{`. The IP address is the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`inet`}</code>{` address which is not the localhost IP address 127.0.0.1:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/97e8752a90f71bbe3dd6d089f9556324/rpi-private-address.jpg\",\n        \"alt\": \"rpi\"\n      }}></img></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}