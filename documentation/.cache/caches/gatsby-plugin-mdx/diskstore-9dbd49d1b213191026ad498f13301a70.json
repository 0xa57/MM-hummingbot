{"expireTime":9007200881073062000,"key":"gatsby-plugin-mdx-entire-payload-1ce0b4a7ec8a448bd67e167c1b1d5324-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import Callout from \"../../src/components/Callout\";","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":52,"offset":52},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Exchange connectors are modules that allow Hummingbot to connect to an exchange. This requires constant retrieval of live exchange/order book data and handling interactions with the exchange.","position":{"start":{"line":4,"column":1,"offset":54},"end":{"line":4,"column":192,"offset":245},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":54},"end":{"line":4,"column":192,"offset":245},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples / templates","position":{"start":{"line":6,"column":4,"offset":250},"end":{"line":6,"column":24,"offset":270},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":247},"end":{"line":6,"column":24,"offset":270},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are ","position":{"start":{"line":8,"column":1,"offset":272},"end":{"line":8,"column":11,"offset":282},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector","children":[{"type":"text","value":"existing connectors","position":{"start":{"line":8,"column":12,"offset":283},"end":{"line":8,"column":31,"offset":302},"indent":[]}}],"position":{"start":{"line":8,"column":11,"offset":282},"end":{"line":8,"column":106,"offset":377},"indent":[]}},{"type":"text","value":". Note that each folder contained here marks different exchange connector types. These should serve as a template for creating a new exchange connector.","position":{"start":{"line":8,"column":106,"offset":377},"end":{"line":8,"column":258,"offset":529},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":272},"end":{"line":8,"column":258,"offset":529},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Building a new exchange connector requires conforming to the template code to the new exchange's APIs, identifying and handling any differences in functions/behaviors, and testing the new exchange connector on that exchange.","position":{"start":{"line":10,"column":1,"offset":531},"end":{"line":10,"column":225,"offset":755},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":531},"end":{"line":10,"column":225,"offset":755},"indent":[]}},{"type":"jsx","value":"<Callout\n  type=\"info\"\n  body=\"For new developers building a connector, we recommend using Crypto.com as a template to start understanding the functions and behaviors.\"\n/>","position":{"start":{"line":12,"column":1,"offset":757},"end":{"line":15,"column":3,"offset":928},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The following list some examples/templates that you can refer to when building the connector:","position":{"start":{"line":17,"column":1,"offset":930},"end":{"line":17,"column":94,"offset":1023},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":930},"end":{"line":17,"column":94,"offset":1023},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/probit","children":[{"type":"text","value":"ProBit","position":{"start":{"line":19,"column":4,"offset":1028},"end":{"line":19,"column":10,"offset":1034},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":1027},"end":{"line":19,"column":101,"offset":1125},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":1027},"end":{"line":19,"column":101,"offset":1125},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1025},"end":{"line":19,"column":101,"offset":1125},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/crypto_com","children":[{"type":"text","value":"Crypto.com","position":{"start":{"line":20,"column":4,"offset":1129},"end":{"line":20,"column":14,"offset":1139},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":1128},"end":{"line":20,"column":109,"offset":1234},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":1128},"end":{"line":20,"column":109,"offset":1234},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1126},"end":{"line":20,"column":109,"offset":1234},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/binance","children":[{"type":"text","value":"Binance","position":{"start":{"line":21,"column":4,"offset":1238},"end":{"line":21,"column":11,"offset":1245},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":1237},"end":{"line":21,"column":103,"offset":1337},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":1237},"end":{"line":21,"column":103,"offset":1337},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1235},"end":{"line":21,"column":103,"offset":1337},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/coinbase_pro","children":[{"type":"text","value":"Coinbase Pro","position":{"start":{"line":22,"column":4,"offset":1341},"end":{"line":22,"column":16,"offset":1353},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":1340},"end":{"line":22,"column":113,"offset":1450},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":1340},"end":{"line":22,"column":113,"offset":1450},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1338},"end":{"line":22,"column":113,"offset":1450},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/huobi","children":[{"type":"text","value":"Huobi","position":{"start":{"line":23,"column":4,"offset":1454},"end":{"line":23,"column":9,"offset":1459},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":1453},"end":{"line":23,"column":99,"offset":1549},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":1453},"end":{"line":23,"column":99,"offset":1549},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1451},"end":{"line":23,"column":99,"offset":1549},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/bittrex","children":[{"type":"text","value":"Bittrex","position":{"start":{"line":24,"column":4,"offset":1553},"end":{"line":24,"column":11,"offset":1560},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":1552},"end":{"line":24,"column":103,"offset":1652},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":1552},"end":{"line":24,"column":103,"offset":1652},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1550},"end":{"line":24,"column":103,"offset":1652},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ethereum DEX (0x open order book): ","position":{"start":{"line":25,"column":3,"offset":1655},"end":{"line":25,"column":38,"offset":1690},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/radar_relay","children":[{"type":"text","value":"Radar Relay","position":{"start":{"line":25,"column":39,"offset":1691},"end":{"line":25,"column":50,"offset":1702},"indent":[]}}],"position":{"start":{"line":25,"column":38,"offset":1690},"end":{"line":25,"column":146,"offset":1798},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":1655},"end":{"line":25,"column":146,"offset":1798},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1653},"end":{"line":25,"column":146,"offset":1798},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Ethereum DEX (0x open order book w/coordinator support): ","position":{"start":{"line":26,"column":3,"offset":1801},"end":{"line":26,"column":60,"offset":1858},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/radar_relay","children":[{"type":"text","value":"Bamboo Relay","position":{"start":{"line":26,"column":61,"offset":1859},"end":{"line":26,"column":73,"offset":1871},"indent":[]}}],"position":{"start":{"line":26,"column":60,"offset":1858},"end":{"line":26,"column":169,"offset":1967},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":1801},"end":{"line":26,"column":169,"offset":1967},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1799},"end":{"line":26,"column":169,"offset":1967},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1025},"end":{"line":26,"column":169,"offset":1967},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Exchange connector requirements","position":{"start":{"line":28,"column":4,"offset":1972},"end":{"line":28,"column":35,"offset":2003},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1969},"end":{"line":28,"column":35,"offset":2003},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A complete set of exchange connector files as listed ","position":{"start":{"line":30,"column":4,"offset":2008},"end":{"line":30,"column":57,"offset":2061},"indent":[]}},{"type":"link","title":null,"url":"https://docs.hummingbot.io/spot-connectors/overview/","children":[{"type":"text","value":"above","position":{"start":{"line":30,"column":58,"offset":2062},"end":{"line":30,"column":63,"offset":2067},"indent":[]}}],"position":{"start":{"line":30,"column":57,"offset":2061},"end":{"line":30,"column":118,"offset":2122},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":30,"column":118,"offset":2122},"end":{"line":30,"column":119,"offset":2123},"indent":[]}}],"position":{"start":{"line":30,"column":4,"offset":2008},"end":{"line":30,"column":119,"offset":2123},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":2005},"end":{"line":30,"column":119,"offset":2123},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Unit tests (see existing unit tests ","position":{"start":{"line":31,"column":4,"offset":2127},"end":{"line":31,"column":40,"offset":2163},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector","children":[{"type":"text","value":"here","position":{"start":{"line":31,"column":41,"offset":2164},"end":{"line":31,"column":45,"offset":2168},"indent":[]}}],"position":{"start":{"line":31,"column":40,"offset":2163},"end":{"line":31,"column":114,"offset":2237},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":31,"column":114,"offset":2237},"end":{"line":31,"column":118,"offset":2241},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/test/integration","children":[{"type":"text","value":"here","position":{"start":{"line":31,"column":119,"offset":2242},"end":{"line":31,"column":123,"offset":2246},"indent":[]}}],"position":{"start":{"line":31,"column":118,"offset":2241},"end":{"line":31,"column":194,"offset":2317},"indent":[]}},{"type":"text","value":"):","position":{"start":{"line":31,"column":194,"offset":2317},"end":{"line":31,"column":196,"offset":2319},"indent":[]}}],"position":{"start":{"line":31,"column":4,"offset":2127},"end":{"line":31,"column":196,"offset":2319},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Exchange market test (","position":{"start":{"line":33,"column":7,"offset":2327},"end":{"line":33,"column":29,"offset":2349},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_exchange.py","children":[{"type":"text","value":"example","position":{"start":{"line":33,"column":30,"offset":2350},"end":{"line":33,"column":37,"offset":2357},"indent":[]}}],"position":{"start":{"line":33,"column":29,"offset":2349},"end":{"line":33,"column":154,"offset":2474},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":33,"column":154,"offset":2474},"end":{"line":33,"column":155,"offset":2475},"indent":[]}}],"position":{"start":{"line":33,"column":7,"offset":2327},"end":{"line":33,"column":155,"offset":2475},"indent":[]}}],"position":{"start":{"line":33,"column":4,"offset":2324},"end":{"line":33,"column":155,"offset":2475},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Order book tracker (","position":{"start":{"line":34,"column":7,"offset":2482},"end":{"line":34,"column":27,"offset":2502},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_order_book_tracker.py","children":[{"type":"text","value":"example","position":{"start":{"line":34,"column":28,"offset":2503},"end":{"line":34,"column":35,"offset":2510},"indent":[]}}],"position":{"start":{"line":34,"column":27,"offset":2502},"end":{"line":34,"column":162,"offset":2637},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":34,"column":162,"offset":2637},"end":{"line":34,"column":163,"offset":2638},"indent":[]}}],"position":{"start":{"line":34,"column":7,"offset":2482},"end":{"line":34,"column":163,"offset":2638},"indent":[]}}],"position":{"start":{"line":34,"column":4,"offset":2479},"end":{"line":34,"column":163,"offset":2638},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"User stream tracker (","position":{"start":{"line":35,"column":7,"offset":2645},"end":{"line":35,"column":28,"offset":2666},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_user_stream_tracker.py","children":[{"type":"text","value":"example","position":{"start":{"line":35,"column":29,"offset":2667},"end":{"line":35,"column":36,"offset":2674},"indent":[]}}],"position":{"start":{"line":35,"column":28,"offset":2666},"end":{"line":35,"column":164,"offset":2802},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":35,"column":164,"offset":2802},"end":{"line":35,"column":165,"offset":2803},"indent":[]}}],"position":{"start":{"line":35,"column":7,"offset":2645},"end":{"line":35,"column":165,"offset":2803},"indent":[]}}],"position":{"start":{"line":35,"column":4,"offset":2642},"end":{"line":35,"column":165,"offset":2803},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"User authentication module (","position":{"start":{"line":36,"column":7,"offset":2810},"end":{"line":36,"column":35,"offset":2838},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_auth.py","children":[{"type":"text","value":"example","position":{"start":{"line":36,"column":36,"offset":2839},"end":{"line":36,"column":43,"offset":2846},"indent":[]}}],"position":{"start":{"line":36,"column":35,"offset":2838},"end":{"line":36,"column":156,"offset":2959},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":36,"column":156,"offset":2959},"end":{"line":36,"column":157,"offset":2960},"indent":[]}}],"position":{"start":{"line":36,"column":7,"offset":2810},"end":{"line":36,"column":157,"offset":2960},"indent":[]}}],"position":{"start":{"line":36,"column":4,"offset":2807},"end":{"line":36,"column":157,"offset":2960},"indent":[]}}],"position":{"start":{"line":33,"column":4,"offset":2324},"end":{"line":36,"column":157,"offset":2960},"indent":[4,4,4]}}],"position":{"start":{"line":31,"column":1,"offset":2124},"end":{"line":37,"column":1,"offset":2961},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Documentation:","position":{"start":{"line":38,"column":4,"offset":2965},"end":{"line":38,"column":18,"offset":2979},"indent":[]}}],"position":{"start":{"line":38,"column":4,"offset":2965},"end":{"line":38,"column":18,"offset":2979},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Code commenting (particularly for any code that is materially different from the templates/examples)","position":{"start":{"line":40,"column":6,"offset":2986},"end":{"line":40,"column":106,"offset":3086},"indent":[]}}],"position":{"start":{"line":40,"column":6,"offset":2986},"end":{"line":40,"column":106,"offset":3086},"indent":[]}}],"position":{"start":{"line":40,"column":4,"offset":2984},"end":{"line":40,"column":106,"offset":3086},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Any specific instructions for the use of that exchange connector (","position":{"start":{"line":41,"column":6,"offset":3092},"end":{"line":41,"column":72,"offset":3158},"indent":[]}},{"type":"link","title":null,"url":"https://docs.hummingbot.io/spot-connectors/binance/","children":[{"type":"text","value":"example","position":{"start":{"line":41,"column":73,"offset":3159},"end":{"line":41,"column":80,"offset":3166},"indent":[]}}],"position":{"start":{"line":41,"column":72,"offset":3158},"end":{"line":41,"column":134,"offset":3220},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":41,"column":134,"offset":3220},"end":{"line":41,"column":135,"offset":3221},"indent":[]}}],"position":{"start":{"line":41,"column":6,"offset":3092},"end":{"line":41,"column":135,"offset":3221},"indent":[]}}],"position":{"start":{"line":41,"column":4,"offset":3090},"end":{"line":41,"column":135,"offset":3221},"indent":[]}}],"position":{"start":{"line":40,"column":4,"offset":2984},"end":{"line":41,"column":135,"offset":3221},"indent":[4]}}],"position":{"start":{"line":38,"column":1,"offset":2962},"end":{"line":41,"column":135,"offset":3221},"indent":[1,1,1]}}],"position":{"start":{"line":30,"column":1,"offset":2005},"end":{"line":41,"column":135,"offset":3221},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Requirements for community-developed connectors","position":{"start":{"line":43,"column":4,"offset":3226},"end":{"line":43,"column":51,"offset":3273},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":3223},"end":{"line":43,"column":51,"offset":3273},"indent":[]}},{"type":"jsx","value":"<Callout\n  type=\"note\"\n  body=\"If you would like to create a connector for a currently unsupported exchange, please contact the Hummingbot team to discuss beforehand and for approval. Due to the large amount of work in reviewing, testing, and maintaining exchange connectors, we will only merge in connectors that will have a meaningful benefit and impact to the Hummingbot community.\"\n/>","position":{"start":{"line":45,"column":1,"offset":3275},"end":{"line":48,"column":3,"offset":3663},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Introducing an exchange connector into the Hummingbot code base requires a mutual commitment from the Hummingbot team and community developers to maintaining a high standard of code quality and software reliability.","position":{"start":{"line":50,"column":1,"offset":3665},"end":{"line":50,"column":216,"offset":3880},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":3665},"end":{"line":50,"column":216,"offset":3880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We encourage and welcome contributions from the community, subject to the guidelines and expectations outlined below.","position":{"start":{"line":52,"column":1,"offset":3882},"end":{"line":52,"column":118,"offset":3999},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":3882},"end":{"line":52,"column":118,"offset":3999},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Guidelines for community developers","position":{"start":{"line":54,"column":5,"offset":4005},"end":{"line":54,"column":40,"offset":4040},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":4001},"end":{"line":54,"column":40,"offset":4040},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Provide a point of contact to the Hummingbot team.","position":{"start":{"line":56,"column":3,"offset":4044},"end":{"line":56,"column":53,"offset":4094},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":4044},"end":{"line":56,"column":53,"offset":4094},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":4042},"end":{"line":56,"column":53,"offset":4094},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Commitment to connector maintenance and keeping it up to date with Hummingbot releases. ","position":{"start":{"line":57,"column":3,"offset":4097},"end":{"line":57,"column":91,"offset":4185},"indent":[]}},{"type":"jsx","value":"<br/>","position":{"start":{"line":57,"column":91,"offset":4185},"end":{"line":57,"column":96,"offset":4190},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Any connectors that are not kept up to date or have unaddressed bugs will be removed from subsequent releases of Hummingbot unless such issues are resolved.","position":{"start":{"line":57,"column":97,"offset":4191},"end":{"line":57,"column":253,"offset":4347},"indent":[]}}],"position":{"start":{"line":57,"column":96,"offset":4190},"end":{"line":57,"column":254,"offset":4348},"indent":[]}}],"position":{"start":{"line":57,"column":3,"offset":4097},"end":{"line":57,"column":254,"offset":4348},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":4095},"end":{"line":57,"column":254,"offset":4348},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Adhere to ","position":{"start":{"line":58,"column":3,"offset":4351},"end":{"line":58,"column":13,"offset":4361},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/CoinAlpha/hummingbot/tree/master/CONTRIBUTING.md","children":[{"type":"text","value":"contributing guide","position":{"start":{"line":58,"column":14,"offset":4362},"end":{"line":58,"column":32,"offset":4380},"indent":[]}}],"position":{"start":{"line":58,"column":13,"offset":4361},"end":{"line":58,"column":102,"offset":4450},"indent":[]}},{"type":"text","value":", code conventions used in the Hummingbot repo, and these guidelines outlined here.","position":{"start":{"line":58,"column":102,"offset":4450},"end":{"line":58,"column":185,"offset":4533},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":4351},"end":{"line":58,"column":185,"offset":4533},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":4349},"end":{"line":58,"column":185,"offset":4533},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Complete all of the work listed in ","position":{"start":{"line":59,"column":3,"offset":4536},"end":{"line":59,"column":38,"offset":4571},"indent":[]}},{"type":"link","title":null,"url":"#exchange-connector-requirements","children":[{"type":"text","value":"Exchange connector requirements","position":{"start":{"line":59,"column":39,"offset":4572},"end":{"line":59,"column":70,"offset":4603},"indent":[]}}],"position":{"start":{"line":59,"column":38,"offset":4571},"end":{"line":59,"column":105,"offset":4638},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":59,"column":105,"offset":4638},"end":{"line":59,"column":106,"offset":4639},"indent":[]}}],"position":{"start":{"line":59,"column":3,"offset":4536},"end":{"line":59,"column":106,"offset":4639},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":4534},"end":{"line":59,"column":106,"offset":4639},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Address any comments or issues raised by the Hummingbot development team during the code review process.","position":{"start":{"line":60,"column":3,"offset":4642},"end":{"line":60,"column":107,"offset":4746},"indent":[]}}],"position":{"start":{"line":60,"column":3,"offset":4642},"end":{"line":60,"column":107,"offset":4746},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":4640},"end":{"line":60,"column":107,"offset":4746},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Notify the Hummingbot team and community of any known issues are bugs that are discovered.","position":{"start":{"line":61,"column":3,"offset":4749},"end":{"line":61,"column":93,"offset":4839},"indent":[]}}],"position":{"start":{"line":61,"column":3,"offset":4749},"end":{"line":61,"column":93,"offset":4839},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":4747},"end":{"line":61,"column":93,"offset":4839},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make sure every REST API call is done in an asynchronous fashion.","position":{"start":{"line":62,"column":3,"offset":4842},"end":{"line":62,"column":68,"offset":4907},"indent":[]}}],"position":{"start":{"line":62,"column":3,"offset":4842},"end":{"line":62,"column":68,"offset":4907},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":4840},"end":{"line":62,"column":68,"offset":4907},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":4042},"end":{"line":62,"column":68,"offset":4907},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Acceptance","position":{"start":{"line":64,"column":5,"offset":4913},"end":{"line":64,"column":15,"offset":4923},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":4909},"end":{"line":64,"column":15,"offset":4923},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The best way to create a connector that adheres to Hummingbot's standard is by cloning the logic of existing connectors. We've done a lot of work to build our core connectors, so no need to reinvent the wheel.","position":{"start":{"line":66,"column":3,"offset":4927},"end":{"line":66,"column":212,"offset":5136},"indent":[]}}],"position":{"start":{"line":66,"column":3,"offset":4927},"end":{"line":66,"column":212,"offset":5136},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":4925},"end":{"line":66,"column":212,"offset":5136},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Existing connector files to use as code samples are in ","position":{"start":{"line":67,"column":3,"offset":5139},"end":{"line":67,"column":58,"offset":5194},"indent":[]}},{"type":"link","title":null,"url":"#exchange-connector-requirements","children":[{"type":"text","value":"Exchange connector requirements","position":{"start":{"line":67,"column":59,"offset":5195},"end":{"line":67,"column":90,"offset":5226},"indent":[]}}],"position":{"start":{"line":67,"column":58,"offset":5194},"end":{"line":67,"column":125,"offset":5261},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":67,"column":125,"offset":5261},"end":{"line":67,"column":126,"offset":5262},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":5139},"end":{"line":67,"column":126,"offset":5262},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":5137},"end":{"line":67,"column":126,"offset":5262},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"While we don't require developers to have every file (You don't need to implement a user stream if the exchange doesn't support user stream, for instance), some general guidelines are:","position":{"start":{"line":68,"column":3,"offset":5265},"end":{"line":68,"column":187,"offset":5449},"indent":[]}}],"position":{"start":{"line":68,"column":3,"offset":5265},"end":{"line":68,"column":187,"offset":5449},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Websocket > REST. Hummingbot is a high-frequency trading bot, which means it'd perform better when it has all the information in real-time.","position":{"start":{"line":69,"column":5,"offset":5454},"end":{"line":69,"column":144,"offset":5593},"indent":[]}}],"position":{"start":{"line":69,"column":5,"offset":5454},"end":{"line":69,"column":144,"offset":5593},"indent":[]}}],"position":{"start":{"line":69,"column":3,"offset":5452},"end":{"line":69,"column":144,"offset":5593},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Adhere to conventions. Using the same naming pattern/code structure will help our developers review your code and get your connector approved faster.","position":{"start":{"line":70,"column":5,"offset":5598},"end":{"line":70,"column":154,"offset":5747},"indent":[]}}],"position":{"start":{"line":70,"column":5,"offset":5598},"end":{"line":70,"column":154,"offset":5747},"indent":[]}}],"position":{"start":{"line":70,"column":3,"offset":5596},"end":{"line":70,"column":154,"offset":5747},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Always add in-code comments for your custom logic.","position":{"start":{"line":71,"column":5,"offset":5752},"end":{"line":71,"column":55,"offset":5802},"indent":[]}}],"position":{"start":{"line":71,"column":5,"offset":5752},"end":{"line":71,"column":55,"offset":5802},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":5750},"end":{"line":71,"column":55,"offset":5802},"indent":[]}}],"position":{"start":{"line":69,"column":3,"offset":5452},"end":{"line":71,"column":55,"offset":5802},"indent":[3,3]}}],"position":{"start":{"line":68,"column":1,"offset":5263},"end":{"line":71,"column":55,"offset":5802},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Required functionalities;","position":{"start":{"line":72,"column":3,"offset":5805},"end":{"line":72,"column":28,"offset":5830},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":5805},"end":{"line":72,"column":28,"offset":5830},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tracking real-time order book snapshots / diffs / trades","position":{"start":{"line":73,"column":5,"offset":5835},"end":{"line":73,"column":61,"offset":5891},"indent":[]}}],"position":{"start":{"line":73,"column":5,"offset":5835},"end":{"line":73,"column":61,"offset":5891},"indent":[]}}],"position":{"start":{"line":73,"column":3,"offset":5833},"end":{"line":73,"column":61,"offset":5891},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Getting prices from the order book","position":{"start":{"line":74,"column":5,"offset":5896},"end":{"line":74,"column":39,"offset":5930},"indent":[]}}],"position":{"start":{"line":74,"column":5,"offset":5896},"end":{"line":74,"column":39,"offset":5930},"indent":[]}}],"position":{"start":{"line":74,"column":3,"offset":5894},"end":{"line":74,"column":39,"offset":5930},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Order parameter quantization (Adjust any order price/quantity inputs into values accepted by the exchange, considering min/max order size requirement, number of digits, etc.)","position":{"start":{"line":75,"column":5,"offset":5935},"end":{"line":75,"column":179,"offset":6109},"indent":[]}}],"position":{"start":{"line":75,"column":5,"offset":5935},"end":{"line":75,"column":179,"offset":6109},"indent":[]}}],"position":{"start":{"line":75,"column":3,"offset":5933},"end":{"line":75,"column":179,"offset":6109},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Submitting limit buy and sell orders","position":{"start":{"line":76,"column":5,"offset":6114},"end":{"line":76,"column":41,"offset":6150},"indent":[]}}],"position":{"start":{"line":76,"column":5,"offset":6114},"end":{"line":76,"column":41,"offset":6150},"indent":[]}}],"position":{"start":{"line":76,"column":3,"offset":6112},"end":{"line":76,"column":41,"offset":6150},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Submitting market buy and sell orders","position":{"start":{"line":77,"column":5,"offset":6155},"end":{"line":77,"column":42,"offset":6192},"indent":[]}}],"position":{"start":{"line":77,"column":5,"offset":6155},"end":{"line":77,"column":42,"offset":6192},"indent":[]}}],"position":{"start":{"line":77,"column":3,"offset":6153},"end":{"line":77,"column":42,"offset":6192},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Cancelling a single order","position":{"start":{"line":78,"column":5,"offset":6197},"end":{"line":78,"column":30,"offset":6222},"indent":[]}}],"position":{"start":{"line":78,"column":5,"offset":6197},"end":{"line":78,"column":30,"offset":6222},"indent":[]}}],"position":{"start":{"line":78,"column":3,"offset":6195},"end":{"line":78,"column":30,"offset":6222},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Cancelling all orders that the bot submitted","position":{"start":{"line":79,"column":5,"offset":6227},"end":{"line":79,"column":49,"offset":6271},"indent":[]}}],"position":{"start":{"line":79,"column":5,"offset":6227},"end":{"line":79,"column":49,"offset":6271},"indent":[]}}],"position":{"start":{"line":79,"column":3,"offset":6225},"end":{"line":79,"column":49,"offset":6271},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tracking all in-flight orders","position":{"start":{"line":80,"column":5,"offset":6276},"end":{"line":80,"column":34,"offset":6305},"indent":[]}}],"position":{"start":{"line":80,"column":5,"offset":6276},"end":{"line":80,"column":34,"offset":6305},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":6274},"end":{"line":80,"column":34,"offset":6305},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Updating statuses of in-flight orders","position":{"start":{"line":81,"column":5,"offset":6310},"end":{"line":81,"column":42,"offset":6347},"indent":[]}}],"position":{"start":{"line":81,"column":5,"offset":6310},"end":{"line":81,"column":42,"offset":6347},"indent":[]}}],"position":{"start":{"line":81,"column":3,"offset":6308},"end":{"line":81,"column":42,"offset":6347},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Updating user balance (all balance & balance available for trading)","position":{"start":{"line":82,"column":5,"offset":6352},"end":{"line":82,"column":72,"offset":6419},"indent":[]}}],"position":{"start":{"line":82,"column":5,"offset":6352},"end":{"line":82,"column":72,"offset":6419},"indent":[]}}],"position":{"start":{"line":82,"column":3,"offset":6350},"end":{"line":82,"column":72,"offset":6419},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Any other functionalities/error handling required to trade on the exchange","position":{"start":{"line":83,"column":5,"offset":6424},"end":{"line":83,"column":79,"offset":6498},"indent":[]}}],"position":{"start":{"line":83,"column":5,"offset":6424},"end":{"line":83,"column":79,"offset":6498},"indent":[]}}],"position":{"start":{"line":83,"column":3,"offset":6422},"end":{"line":83,"column":79,"offset":6498},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Extensive unit tests that cover all functionalities above","position":{"start":{"line":84,"column":5,"offset":6503},"end":{"line":84,"column":62,"offset":6560},"indent":[]}}],"position":{"start":{"line":84,"column":5,"offset":6503},"end":{"line":84,"column":62,"offset":6560},"indent":[]}}],"position":{"start":{"line":84,"column":3,"offset":6501},"end":{"line":84,"column":62,"offset":6560},"indent":[]}}],"position":{"start":{"line":73,"column":3,"offset":5833},"end":{"line":84,"column":62,"offset":6560},"indent":[3,3,3,3,3,3,3,3,3,3,3]}}],"position":{"start":{"line":72,"column":1,"offset":5803},"end":{"line":84,"column":62,"offset":6560},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Once the PR is submitted, our developers will review your code and likely request changes. Please expect the review process to take 2-3 weeks before the PR is merged.","position":{"start":{"line":85,"column":3,"offset":6563},"end":{"line":85,"column":169,"offset":6729},"indent":[]}}],"position":{"start":{"line":85,"column":3,"offset":6563},"end":{"line":85,"column":169,"offset":6729},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":6561},"end":{"line":85,"column":169,"offset":6729},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"After the requirements above are fulfilled, we will merge the PR to the ","position":{"start":{"line":86,"column":3,"offset":6732},"end":{"line":86,"column":75,"offset":6804},"indent":[]}},{"type":"inlineCode","value":"development","position":{"start":{"line":86,"column":75,"offset":6804},"end":{"line":86,"column":88,"offset":6817},"indent":[]}},{"type":"text","value":" branch, which will be merged into ","position":{"start":{"line":86,"column":88,"offset":6817},"end":{"line":86,"column":123,"offset":6852},"indent":[]}},{"type":"inlineCode","value":"master","position":{"start":{"line":86,"column":123,"offset":6852},"end":{"line":86,"column":131,"offset":6860},"indent":[]}},{"type":"text","value":" in the next release.","position":{"start":{"line":86,"column":131,"offset":6860},"end":{"line":86,"column":152,"offset":6881},"indent":[]}}],"position":{"start":{"line":86,"column":3,"offset":6732},"end":{"line":86,"column":152,"offset":6881},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":6730},"end":{"line":86,"column":152,"offset":6881},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In the future, we may separate community-contributed connectors and strategies from the core Hummingbot codebase so that users can choose to install exchange connectors that they are using. However, we will not do that right now.","position":{"start":{"line":87,"column":3,"offset":6884},"end":{"line":87,"column":232,"offset":7113},"indent":[]}}],"position":{"start":{"line":87,"column":3,"offset":6884},"end":{"line":87,"column":232,"offset":7113},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":6882},"end":{"line":87,"column":232,"offset":7113},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":4925},"end":{"line":87,"column":232,"offset":7113},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<Callout\n  type=\"note\"\n  body=\"#Trading Pair Conversion#, HummingBot's standard pair format is: `Base_Asset-Quote_Asset`. Therefore, a new connector that doesn't follow that convention of naming pairs would require both `convert_to_exchange_trading_pair` and `convert_from_exchange_trading_pair` methods to be implemented in the connector's connector_util.py file. In addition, such connectors have to perform the necessary conversions when performing certain API requests. Additionally, ensure that the dictionary keys for `self._trading_rules` are in HummingBot's pair format.\n\"\n/>","position":{"start":{"line":89,"column":1,"offset":7115},"end":{"line":93,"column":3,"offset":7698},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Expectations for the Hummingbot team","position":{"start":{"line":95,"column":5,"offset":7704},"end":{"line":95,"column":41,"offset":7740},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":7700},"end":{"line":95,"column":41,"offset":7740},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Make available a dedicated channel on discord (","position":{"start":{"line":97,"column":3,"offset":7744},"end":{"line":97,"column":50,"offset":7791},"indent":[]}},{"type":"link","title":null,"url":"https://discord.hummingbot.io","children":[{"type":"text","value":"https://discord.hummingbot.io","position":{"start":{"line":97,"column":50,"offset":7791},"end":{"line":97,"column":79,"offset":7820},"indent":[]}}],"position":{"start":{"line":97,"column":50,"offset":7791},"end":{"line":97,"column":79,"offset":7820},"indent":[]}},{"type":"text","value":") during the initial development process.","position":{"start":{"line":97,"column":79,"offset":7820},"end":{"line":97,"column":120,"offset":7861},"indent":[]}}],"position":{"start":{"line":97,"column":3,"offset":7744},"end":{"line":97,"column":120,"offset":7861},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":7742},"end":{"line":97,"column":120,"offset":7861},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Provide a main point of contact for the developer.","position":{"start":{"line":98,"column":3,"offset":7864},"end":{"line":98,"column":53,"offset":7914},"indent":[]}}],"position":{"start":{"line":98,"column":3,"offset":7864},"end":{"line":98,"column":53,"offset":7914},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":7862},"end":{"line":98,"column":53,"offset":7914},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Notify the developer of code changes that may affect the connector.","position":{"start":{"line":99,"column":3,"offset":7917},"end":{"line":99,"column":70,"offset":7984},"indent":[]}}],"position":{"start":{"line":99,"column":3,"offset":7917},"end":{"line":99,"column":70,"offset":7984},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":7915},"end":{"line":99,"column":70,"offset":7984},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Notify the developer of any bug reports or issues reported by Hummingbot users.","position":{"start":{"line":100,"column":3,"offset":7987},"end":{"line":100,"column":82,"offset":8066},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":7987},"end":{"line":100,"column":82,"offset":8066},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":7985},"end":{"line":100,"column":82,"offset":8066},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Code review.","position":{"start":{"line":101,"column":3,"offset":8069},"end":{"line":101,"column":15,"offset":8081},"indent":[]}}],"position":{"start":{"line":101,"column":3,"offset":8069},"end":{"line":101,"column":15,"offset":8081},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":8067},"end":{"line":101,"column":15,"offset":8081},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Testing and QA.","position":{"start":{"line":102,"column":3,"offset":8084},"end":{"line":102,"column":18,"offset":8099},"indent":[]}}],"position":{"start":{"line":102,"column":3,"offset":8084},"end":{"line":102,"column":18,"offset":8099},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":8082},"end":{"line":102,"column":18,"offset":8099},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":7742},"end":{"line":102,"column":18,"offset":8099},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The Hummingbot team reserves the right to withhold community code contributions and excluding them from the Hummingbot code base should any such contributions fail to meet the above requirements.","position":{"start":{"line":104,"column":1,"offset":8101},"end":{"line":104,"column":196,"offset":8296},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":8101},"end":{"line":104,"column":196,"offset":8296},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Required skills","position":{"start":{"line":106,"column":4,"offset":8301},"end":{"line":106,"column":19,"offset":8316},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":8298},"end":{"line":106,"column":19,"offset":8316},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Python","position":{"start":{"line":108,"column":3,"offset":8320},"end":{"line":108,"column":9,"offset":8326},"indent":[]}}],"position":{"start":{"line":108,"column":3,"offset":8320},"end":{"line":108,"column":9,"offset":8326},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":8318},"end":{"line":108,"column":9,"offset":8326},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Prior Cython experience is a plus","position":{"start":{"line":109,"column":3,"offset":8329},"end":{"line":109,"column":36,"offset":8362},"indent":[]}}],"position":{"start":{"line":109,"column":3,"offset":8329},"end":{"line":109,"column":36,"offset":8362},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":8327},"end":{"line":109,"column":36,"offset":8362},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":8318},"end":{"line":109,"column":36,"offset":8362},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Additional resources","position":{"start":{"line":111,"column":4,"offset":8367},"end":{"line":111,"column":24,"offset":8387},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":8364},"end":{"line":111,"column":24,"offset":8387},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Developer discussions, please visit the ","position":{"start":{"line":113,"column":3,"offset":8391},"end":{"line":113,"column":43,"offset":8431},"indent":[]}},{"type":"inlineCode","value":"#dev","position":{"start":{"line":113,"column":43,"offset":8431},"end":{"line":113,"column":49,"offset":8437},"indent":[]}},{"type":"text","value":" channel on our ","position":{"start":{"line":113,"column":49,"offset":8437},"end":{"line":113,"column":65,"offset":8453},"indent":[]}},{"type":"link","title":null,"url":"https://discord.hummingbot.io","children":[{"type":"text","value":"discord server","position":{"start":{"line":113,"column":66,"offset":8454},"end":{"line":113,"column":80,"offset":8468},"indent":[]}}],"position":{"start":{"line":113,"column":65,"offset":8453},"end":{"line":113,"column":112,"offset":8500},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":113,"column":112,"offset":8500},"end":{"line":113,"column":113,"offset":8501},"indent":[]}}],"position":{"start":{"line":113,"column":3,"offset":8391},"end":{"line":113,"column":113,"offset":8501},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":8389},"end":{"line":113,"column":113,"offset":8501},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Contact the dev team: ","position":{"start":{"line":114,"column":3,"offset":8504},"end":{"line":114,"column":25,"offset":8526},"indent":[]}},{"type":"link","title":null,"url":"mailto:dev@hummingbot.io","children":[{"type":"text","value":"dev@hummingbot.io","position":{"start":{"line":114,"column":26,"offset":8527},"end":{"line":114,"column":43,"offset":8544},"indent":[]}}],"position":{"start":{"line":114,"column":25,"offset":8526},"end":{"line":114,"column":70,"offset":8571},"indent":[]}}],"position":{"start":{"line":114,"column":3,"offset":8504},"end":{"line":114,"column":70,"offset":8571},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":8502},"end":{"line":114,"column":70,"offset":8571},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":8389},"end":{"line":114,"column":70,"offset":8571},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Overview\",\"description\":\"Overview on developing connectors\"}","position":{"start":{"line":117,"column":1,"offset":8574},"end":{"line":117,"column":99,"offset":8672},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":117,"column":99,"offset":8672}}},"scopeImports":["import Callout from \"../../src/components/Callout\";","import * as React from 'react'"],"scopeIdentifiers":["Callout","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Overview\",\n  \"description\": \"Overview on developing connectors\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Exchange connectors are modules that allow Hummingbot to connect to an exchange. This requires constant retrieval of live exchange/order book data and handling interactions with the exchange.\"), mdx(\"h2\", {\n    \"id\": \"examples--templates\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#examples--templates\",\n    \"aria-label\": \"examples  templates permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Examples / templates\"), mdx(\"p\", null, \"There are \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector\"\n  }), \"existing connectors\"), \". Note that each folder contained here marks different exchange connector types. These should serve as a template for creating a new exchange connector.\"), mdx(\"p\", null, \"Building a new exchange connector requires conforming to the template code to the new exchange's APIs, identifying and handling any differences in functions/behaviors, and testing the new exchange connector on that exchange.\"), mdx(Callout, {\n    type: \"info\",\n    body: \"For new developers building a connector, we recommend using Crypto.com as a template to start understanding the functions and behaviors.\",\n    mdxType: \"Callout\"\n  }), mdx(\"p\", null, \"The following list some examples/templates that you can refer to when building the connector:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/probit\"\n  }), \"ProBit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/crypto_com\"\n  }), \"Crypto.com\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/binance\"\n  }), \"Binance\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/coinbase_pro\"\n  }), \"Coinbase Pro\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/huobi\"\n  }), \"Huobi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/bittrex\"\n  }), \"Bittrex\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ethereum DEX (0x open order book): \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/radar_relay\"\n  }), \"Radar Relay\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ethereum DEX (0x open order book w/coordinator support): \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/radar_relay\"\n  }), \"Bamboo Relay\"))), mdx(\"h2\", {\n    \"id\": \"exchange-connector-requirements\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#exchange-connector-requirements\",\n    \"aria-label\": \"exchange connector requirements permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Exchange connector requirements\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A complete set of exchange connector files as listed \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.hummingbot.io/spot-connectors/overview/\"\n  }), \"above\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Unit tests (see existing unit tests \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector\"\n  }), \"here\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/integration\"\n  }), \"here\"), \"):\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Exchange market test (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_exchange.py\"\n  }), \"example\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Order book tracker (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_order_book_tracker.py\"\n  }), \"example\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"User stream tracker (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_user_stream_tracker.py\"\n  }), \"example\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"User authentication module (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_auth.py\"\n  }), \"example\"), \")\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Documentation:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code commenting (particularly for any code that is materially different from the templates/examples)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any specific instructions for the use of that exchange connector (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://docs.hummingbot.io/spot-connectors/binance/\"\n  }), \"example\"), \")\")))), mdx(\"h2\", {\n    \"id\": \"requirements-for-community-developed-connectors\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#requirements-for-community-developed-connectors\",\n    \"aria-label\": \"requirements for community developed connectors permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Requirements for community-developed connectors\"), mdx(Callout, {\n    type: \"note\",\n    body: \"If you would like to create a connector for a currently unsupported exchange, please contact the Hummingbot team to discuss beforehand and for approval. Due to the large amount of work in reviewing, testing, and maintaining exchange connectors, we will only merge in connectors that will have a meaningful benefit and impact to the Hummingbot community.\",\n    mdxType: \"Callout\"\n  }), mdx(\"p\", null, \"Introducing an exchange connector into the Hummingbot code base requires a mutual commitment from the Hummingbot team and community developers to maintaining a high standard of code quality and software reliability.\"), mdx(\"p\", null, \"We encourage and welcome contributions from the community, subject to the guidelines and expectations outlined below.\"), mdx(\"h3\", {\n    \"id\": \"guidelines-for-community-developers\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#guidelines-for-community-developers\",\n    \"aria-label\": \"guidelines for community developers permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Guidelines for community developers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Provide a point of contact to the Hummingbot team.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Commitment to connector maintenance and keeping it up to date with Hummingbot releases. \", mdx(\"br\", null), mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Any connectors that are not kept up to date or have unaddressed bugs will be removed from subsequent releases of Hummingbot unless such issues are resolved.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adhere to \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/CONTRIBUTING.md\"\n  }), \"contributing guide\"), \", code conventions used in the Hummingbot repo, and these guidelines outlined here.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Complete all of the work listed in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#exchange-connector-requirements\"\n  }), \"Exchange connector requirements\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Address any comments or issues raised by the Hummingbot development team during the code review process.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notify the Hummingbot team and community of any known issues are bugs that are discovered.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make sure every REST API call is done in an asynchronous fashion.\")), mdx(\"h3\", {\n    \"id\": \"acceptance\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#acceptance\",\n    \"aria-label\": \"acceptance permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Acceptance\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The best way to create a connector that adheres to Hummingbot's standard is by cloning the logic of existing connectors. We've done a lot of work to build our core connectors, so no need to reinvent the wheel.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Existing connector files to use as code samples are in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#exchange-connector-requirements\"\n  }), \"Exchange connector requirements\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"While we don't require developers to have every file (You don't need to implement a user stream if the exchange doesn't support user stream, for instance), some general guidelines are:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Websocket > REST. Hummingbot is a high-frequency trading bot, which means it'd perform better when it has all the information in real-time.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Adhere to conventions. Using the same naming pattern/code structure will help our developers review your code and get your connector approved faster.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Always add in-code comments for your custom logic.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Required functionalities;\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tracking real-time order book snapshots / diffs / trades\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Getting prices from the order book\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Order parameter quantization (Adjust any order price/quantity inputs into values accepted by the exchange, considering min/max order size requirement, number of digits, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submitting limit buy and sell orders\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submitting market buy and sell orders\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cancelling a single order\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cancelling all orders that the bot submitted\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tracking all in-flight orders\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Updating statuses of in-flight orders\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Updating user balance (all balance & balance available for trading)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Any other functionalities/error handling required to trade on the exchange\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extensive unit tests that cover all functionalities above\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Once the PR is submitted, our developers will review your code and likely request changes. Please expect the review process to take 2-3 weeks before the PR is merged.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After the requirements above are fulfilled, we will merge the PR to the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"development\"), \" branch, which will be merged into \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"master\"), \" in the next release.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In the future, we may separate community-contributed connectors and strategies from the core Hummingbot codebase so that users can choose to install exchange connectors that they are using. However, we will not do that right now.\")), mdx(Callout, {\n    type: \"note\",\n    body: \"#Trading Pair Conversion#, HummingBot's standard pair format is: `Base_Asset-Quote_Asset`. Therefore, a new connector that doesn't follow that convention of naming pairs would require both `convert_to_exchange_trading_pair` and `convert_from_exchange_trading_pair` methods to be implemented in the connector's connector_util.py file. In addition, such connectors have to perform the necessary conversions when performing certain API requests. Additionally, ensure that the dictionary keys for `self._trading_rules` are in HummingBot's pair format.\\n\",\n    mdxType: \"Callout\"\n  }), mdx(\"h3\", {\n    \"id\": \"expectations-for-the-hummingbot-team\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#expectations-for-the-hummingbot-team\",\n    \"aria-label\": \"expectations for the hummingbot team permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Expectations for the Hummingbot team\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make available a dedicated channel on discord (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://discord.hummingbot.io\"\n  }), \"https://discord.hummingbot.io\"), \") during the initial development process.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Provide a main point of contact for the developer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notify the developer of code changes that may affect the connector.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notify the developer of any bug reports or issues reported by Hummingbot users.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code review.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Testing and QA.\")), mdx(\"p\", null, \"The Hummingbot team reserves the right to withhold community code contributions and excluding them from the Hummingbot code base should any such contributions fail to meet the above requirements.\"), mdx(\"h2\", {\n    \"id\": \"required-skills\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#required-skills\",\n    \"aria-label\": \"required skills permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Required skills\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Python\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prior Cython experience is a plus\")), mdx(\"h2\", {\n    \"id\": \"additional-resources\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#additional-resources\",\n    \"aria-label\": \"additional resources permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Additional resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Developer discussions, please visit the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"#dev\"), \" channel on our \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://discord.hummingbot.io\"\n  }), \"discord server\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Contact the dev team: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"mailto:dev@hummingbot.io\"\n  }), \"dev@hummingbot.io\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Callout from \"../../src/components/Callout\";\nexport const _frontmatter = {\n  \"title\": \"Overview\",\n  \"description\": \"Overview on developing connectors\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Exchange connectors are modules that allow Hummingbot to connect to an exchange. This requires constant retrieval of live exchange/order book data and handling interactions with the exchange.`}</p>\n    <h2 {...{\n      \"id\": \"examples--templates\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#examples--templates\",\n        \"aria-label\": \"examples  templates permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Examples / templates`}</h2>\n    <p>{`There are `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector\"\n      }}>{`existing connectors`}</a>{`. Note that each folder contained here marks different exchange connector types. These should serve as a template for creating a new exchange connector.`}</p>\n    <p>{`Building a new exchange connector requires conforming to the template code to the new exchange's APIs, identifying and handling any differences in functions/behaviors, and testing the new exchange connector on that exchange.`}</p>\n    <Callout type=\"info\" body=\"For new developers building a connector, we recommend using Crypto.com as a template to start understanding the functions and behaviors.\" mdxType=\"Callout\" />\n    <p>{`The following list some examples/templates that you can refer to when building the connector:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/probit\"\n        }}>{`ProBit`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/crypto_com\"\n        }}>{`Crypto.com`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/binance\"\n        }}>{`Binance`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/coinbase_pro\"\n        }}>{`Coinbase Pro`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/huobi\"\n        }}>{`Huobi`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/bittrex\"\n        }}>{`Bittrex`}</a></li>\n      <li parentName=\"ul\">{`Ethereum DEX (0x open order book): `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/radar_relay\"\n        }}>{`Radar Relay`}</a></li>\n      <li parentName=\"ul\">{`Ethereum DEX (0x open order book w/coordinator support): `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/hummingbot/connector/exchange/radar_relay\"\n        }}>{`Bamboo Relay`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"exchange-connector-requirements\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#exchange-connector-requirements\",\n        \"aria-label\": \"exchange connector requirements permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Exchange connector requirements`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`A complete set of exchange connector files as listed `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.hummingbot.io/spot-connectors/overview/\"\n          }}>{`above`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Unit tests (see existing unit tests `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector\"\n          }}>{`here`}</a>{` or `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/integration\"\n          }}>{`here`}</a>{`):`}</p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`Exchange market test (`}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_exchange.py\"\n            }}>{`example`}</a>{`)`}</li>\n          <li parentName=\"ol\">{`Order book tracker (`}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_order_book_tracker.py\"\n            }}>{`example`}</a>{`)`}</li>\n          <li parentName=\"ol\">{`User stream tracker (`}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_user_stream_tracker.py\"\n            }}>{`example`}</a>{`)`}</li>\n          <li parentName=\"ol\">{`User authentication module (`}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/test/connector/exchange/crypto_com/test_crypto_com_auth.py\"\n            }}>{`example`}</a>{`)`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Documentation:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Code commenting (particularly for any code that is materially different from the templates/examples)`}</li>\n          <li parentName=\"ul\">{`Any specific instructions for the use of that exchange connector (`}<a parentName=\"li\" {...{\n              \"href\": \"https://docs.hummingbot.io/spot-connectors/binance/\"\n            }}>{`example`}</a>{`)`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"requirements-for-community-developed-connectors\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#requirements-for-community-developed-connectors\",\n        \"aria-label\": \"requirements for community developed connectors permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Requirements for community-developed connectors`}</h2>\n    <Callout type=\"note\" body=\"If you would like to create a connector for a currently unsupported exchange, please contact the Hummingbot team to discuss beforehand and for approval. Due to the large amount of work in reviewing, testing, and maintaining exchange connectors, we will only merge in connectors that will have a meaningful benefit and impact to the Hummingbot community.\" mdxType=\"Callout\" />\n    <p>{`Introducing an exchange connector into the Hummingbot code base requires a mutual commitment from the Hummingbot team and community developers to maintaining a high standard of code quality and software reliability.`}</p>\n    <p>{`We encourage and welcome contributions from the community, subject to the guidelines and expectations outlined below.`}</p>\n    <h3 {...{\n      \"id\": \"guidelines-for-community-developers\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#guidelines-for-community-developers\",\n        \"aria-label\": \"guidelines for community developers permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Guidelines for community developers`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Provide a point of contact to the Hummingbot team.`}</li>\n      <li parentName=\"ul\">{`Commitment to connector maintenance and keeping it up to date with Hummingbot releases. `}<br /><em parentName=\"li\">{`Any connectors that are not kept up to date or have unaddressed bugs will be removed from subsequent releases of Hummingbot unless such issues are resolved.`}</em></li>\n      <li parentName=\"ul\">{`Adhere to `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/CoinAlpha/hummingbot/tree/master/CONTRIBUTING.md\"\n        }}>{`contributing guide`}</a>{`, code conventions used in the Hummingbot repo, and these guidelines outlined here.`}</li>\n      <li parentName=\"ul\">{`Complete all of the work listed in `}<a parentName=\"li\" {...{\n          \"href\": \"#exchange-connector-requirements\"\n        }}>{`Exchange connector requirements`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Address any comments or issues raised by the Hummingbot development team during the code review process.`}</li>\n      <li parentName=\"ul\">{`Notify the Hummingbot team and community of any known issues are bugs that are discovered.`}</li>\n      <li parentName=\"ul\">{`Make sure every REST API call is done in an asynchronous fashion.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"acceptance\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#acceptance\",\n        \"aria-label\": \"acceptance permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Acceptance`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`The best way to create a connector that adheres to Hummingbot's standard is by cloning the logic of existing connectors. We've done a lot of work to build our core connectors, so no need to reinvent the wheel.`}</li>\n      <li parentName=\"ul\">{`Existing connector files to use as code samples are in `}<a parentName=\"li\" {...{\n          \"href\": \"#exchange-connector-requirements\"\n        }}>{`Exchange connector requirements`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`While we don't require developers to have every file (You don't need to implement a user stream if the exchange doesn't support user stream, for instance), some general guidelines are:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Websocket > REST. Hummingbot is a high-frequency trading bot, which means it'd perform better when it has all the information in real-time.`}</li>\n          <li parentName=\"ul\">{`Adhere to conventions. Using the same naming pattern/code structure will help our developers review your code and get your connector approved faster.`}</li>\n          <li parentName=\"ul\">{`Always add in-code comments for your custom logic.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Required functionalities;`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Tracking real-time order book snapshots / diffs / trades`}</li>\n          <li parentName=\"ul\">{`Getting prices from the order book`}</li>\n          <li parentName=\"ul\">{`Order parameter quantization (Adjust any order price/quantity inputs into values accepted by the exchange, considering min/max order size requirement, number of digits, etc.)`}</li>\n          <li parentName=\"ul\">{`Submitting limit buy and sell orders`}</li>\n          <li parentName=\"ul\">{`Submitting market buy and sell orders`}</li>\n          <li parentName=\"ul\">{`Cancelling a single order`}</li>\n          <li parentName=\"ul\">{`Cancelling all orders that the bot submitted`}</li>\n          <li parentName=\"ul\">{`Tracking all in-flight orders`}</li>\n          <li parentName=\"ul\">{`Updating statuses of in-flight orders`}</li>\n          <li parentName=\"ul\">{`Updating user balance (all balance & balance available for trading)`}</li>\n          <li parentName=\"ul\">{`Any other functionalities/error handling required to trade on the exchange`}</li>\n          <li parentName=\"ul\">{`Extensive unit tests that cover all functionalities above`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Once the PR is submitted, our developers will review your code and likely request changes. Please expect the review process to take 2-3 weeks before the PR is merged.`}</li>\n      <li parentName=\"ul\">{`After the requirements above are fulfilled, we will merge the PR to the `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`development`}</code>{` branch, which will be merged into `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`master`}</code>{` in the next release.`}</li>\n      <li parentName=\"ul\">{`In the future, we may separate community-contributed connectors and strategies from the core Hummingbot codebase so that users can choose to install exchange connectors that they are using. However, we will not do that right now.`}</li>\n    </ul>\n    <Callout type=\"note\" body=\"#Trading Pair Conversion#, HummingBot's standard pair format is: `Base_Asset-Quote_Asset`. Therefore, a new connector that doesn't follow that convention of naming pairs would require both `convert_to_exchange_trading_pair` and `convert_from_exchange_trading_pair` methods to be implemented in the connector's connector_util.py file. In addition, such connectors have to perform the necessary conversions when performing certain API requests. Additionally, ensure that the dictionary keys for `self._trading_rules` are in HummingBot's pair format.\n\" mdxType=\"Callout\" />\n    <h3 {...{\n      \"id\": \"expectations-for-the-hummingbot-team\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#expectations-for-the-hummingbot-team\",\n        \"aria-label\": \"expectations for the hummingbot team permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Expectations for the Hummingbot team`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Make available a dedicated channel on discord (`}<a parentName=\"li\" {...{\n          \"href\": \"https://discord.hummingbot.io\"\n        }}>{`https://discord.hummingbot.io`}</a>{`) during the initial development process.`}</li>\n      <li parentName=\"ul\">{`Provide a main point of contact for the developer.`}</li>\n      <li parentName=\"ul\">{`Notify the developer of code changes that may affect the connector.`}</li>\n      <li parentName=\"ul\">{`Notify the developer of any bug reports or issues reported by Hummingbot users.`}</li>\n      <li parentName=\"ul\">{`Code review.`}</li>\n      <li parentName=\"ul\">{`Testing and QA.`}</li>\n    </ul>\n    <p>{`The Hummingbot team reserves the right to withhold community code contributions and excluding them from the Hummingbot code base should any such contributions fail to meet the above requirements.`}</p>\n    <h2 {...{\n      \"id\": \"required-skills\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#required-skills\",\n        \"aria-label\": \"required skills permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Required skills`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Python`}</li>\n      <li parentName=\"ul\">{`Prior Cython experience is a plus`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"additional-resources\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#additional-resources\",\n        \"aria-label\": \"additional resources permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Additional resources`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Developer discussions, please visit the `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`#dev`}</code>{` channel on our `}<a parentName=\"li\" {...{\n          \"href\": \"https://discord.hummingbot.io\"\n        }}>{`discord server`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Contact the dev team: `}<a parentName=\"li\" {...{\n          \"href\": \"mailto:dev@hummingbot.io\"\n        }}>{`dev@hummingbot.io`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}