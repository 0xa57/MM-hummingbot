"use strict";
var path = require("path");
var visit = require("unist-util-visit");
function withPathPrefix(url, pathPrefix) {
    var prefixed = pathPrefix + url;
    return prefixed.replace(/\/\//, '/');
}
module.exports = function plugin(_a) {
    var markdownAST = _a.markdownAST, markdownNode = _a.markdownNode, pathPrefix = _a.pathPrefix, getNode = _a.getNode;
    function visitor(node) {
        if (markdownNode.fields &&
            markdownNode.fields.slug &&
            !node.url.startsWith('/') &&
            !node.url.startsWith('#') &&
            !node.url.startsWith('mailto:') &&
            !/^https?:\/\//.test(node.url)) {
            var parent_1 = getNode(markdownNode.parent);
            node.url = withPathPrefix(path
                .resolve(markdownNode.fields.slug
                .replace(/\/$/, '')
                .split(path.sep)
                .slice(0, parent_1.name === 'index' ? undefined : -1)
                .join(path.sep) || '/', node.url)
                .replace(/\/?(\?|#|$)/, '/$1'), pathPrefix);
        }
    }
    visit(markdownAST, 'link', visitor);
    return markdownAST;
};
