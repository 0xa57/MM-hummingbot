{"version":3,"file":"Table.js","sources":["../src/Table/Table.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport * as typography from \"../typography\";\nimport { colors } from \"../colors\";\n\ninterface Props<RowShape> {\n  /**\n   * Component data\n   *\n   * The shape of the data will be inferred from here\n   */\n  data: ReadonlyArray<RowShape>;\n\n  /**\n   * How dense the table should be\n   *\n   * @default \"standard\"\n   */\n  density?: \"standard\" | \"condensed\" | \"relaxed\";\n\n  /**\n   * Definition of how each column will be rendered\n   */\n  columns: readonly {\n    /**\n     * Column's title\n     */\n    headerTitle?: React.ReactNode | string;\n\n    /**\n     * Unique identifier for the column\n     *\n     * Initially, we'll just be using this for the `key` attribute on cells and\n     * `col`s\n     */\n    id: string | number;\n    /**\n     * Properties to be applied to `col` elements nested below the `table`'s\n     * single `<colgroup>`.\n     *\n     * This allows you to apply styles to columns by setting a class on a single\n     * element instead of _all_ elements in a table's row.\n     *\n     * Note that, per the [column\n     * spec](https://www.w3.org/TR/CSS2/tables.html#columns), there is a very\n     * limited set of style properties that can be applied to a column (via\n     * `style` or `className`):\n     * * `background`\n     * * `border`\n     * * `visiblity`\n     * * `width`\n     */\n    colProps?: React.DetailedHTMLProps<\n      React.ColHTMLAttributes<HTMLTableColElement>,\n      HTMLTableColElement\n    >;\n\n    /**\n     * Render function that renders the content for the column to be placed\n     * inside the `<td>`\n     *\n     * Since this is a render function, `React.createElement` will _not_ be\n     * called, nor will propTypes be checked. This is to prevent mounting and\n     * unmounting on each render\n     *\n     * Note: the signature of the method is the same as a `map` function\n     */\n    render: (\n      input: Readonly<RowShape>,\n      index: number,\n      list: readonly RowShape[]\n    ) => React.ReactNode;\n  }[];\n\n  /**\n   * String or method to calculate the `key` for each row\n   *\n   * When re-ordering rows (by sorting or any other means), this will ensure\n   * that DOM elements are reused correctly.\n   *\n   * Can be a string representing a field in `RowData` (inferred from `data` or\n   * included as a generic to `<Table<RowData>>`) or a function that takes the\n   * row data and returns a key\n   */\n  keyOn: keyof RowShape | ((row: RowShape) => any);\n}\n\n/**\n * Tables provide a structure to data and a visual grid making it easier to see\n * relationships and are one of the most useful tools and formats for organizing\n * and communiting structured data.\n *\n * @see https://zpl.io/bAlrjJe\n */\nexport function Table<RowShape>({\n  data,\n  density = \"standard\",\n  columns,\n  keyOn,\n}: Props<RowShape>): ReturnType<React.FC> {\n  const padding = density === \"standard\" ? 8 : density === \"condensed\" ? 3 : 11;\n  const getRowKey =\n    typeof keyOn === \"function\" ? keyOn : (row: RowShape) => row[keyOn];\n\n  return (\n    <table\n      css={{\n        borderCollapse: \"collapse\",\n        width: \"100%\",\n      }}\n    >\n      <colgroup>\n        {columns.map(({ colProps, id }) => (\n          <col key={id} {...colProps} />\n        ))}\n      </colgroup>\n\n      <thead>\n        <tr\n          css={{\n            borderBottom: `1px solid ${colors.silver.dark}`,\n          }}\n        >\n          {columns.map(({ headerTitle, id }, colIndex) => (\n            <th\n              key={id}\n              css={{\n                ...typography.base.xsmall,\n                textTransform: \"uppercase\",\n                color: colors.grey.darker,\n                fontWeight: 600,\n                textAlign: \"left\",\n                padding,\n                paddingLeft: colIndex === 0 ? 0 : padding,\n                paddingRight: colIndex === columns.length - 1 ? 0 : padding,\n              }}\n            >\n              {headerTitle}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item, index) => (\n          <tr key={getRowKey(item)}>\n            {columns.map(({ render, id }, colIndex) => (\n              <td\n                key={id}\n                css={{\n                  // no border on the bottom row\n                  borderBottom:\n                    index === data.length - 1\n                      ? `none`\n                      : `1px solid ${colors.silver.dark}`,\n                  padding,\n                  paddingLeft: colIndex === 0 ? 0 : padding,\n                  paddingRight: colIndex === columns.length - 1 ? 0 : padding,\n                }}\n              >\n                {render(item, index, data)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n"],"names":["jsx","colors","typography.base.xsmall"],"mappings":";;;;;;;;;;;AAwFA;;;;;;;AAOA,SAAgB,KAAK,CAAW,EAKd;QAJhB,IAAI,UAAA,EACJ,eAAoB,EAApB,OAAO,mBAAG,UAAU,KAAA,EACpB,OAAO,aAAA,EACP,KAAK,WAAA;IAEL,IAAM,OAAO,GAAG,OAAO,KAAK,UAAU,GAAG,CAAC,GAAG,OAAO,KAAK,WAAW,GAAG,CAAC,GAAG,EAAE,CAAC;IAC9E,IAAM,SAAS,GACb,OAAO,KAAK,KAAK,UAAU,GAAG,KAAK,GAAG,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,KAAK,CAAC,GAAA,CAAC;IAEtE,QACEA,oBACE,GAAG,EAAE;YACH,cAAc,EAAE,UAAU;YAC1B,KAAK,EAAE,MAAM;SACd;QAEDA,2BACG,OAAO,CAAC,GAAG,CAAC,UAAC,EAAgB;gBAAd,QAAQ,cAAA,EAAE,EAAE,QAAA;YAAO,QACjCA,kCAAK,GAAG,EAAE,EAAE,IAAM,QAAQ,EAAI;SAC/B,CAAC,CACO;QAEXA;YACEA,iBACE,GAAG,EAAE;oBACH,YAAY,EAAE,eAAaC,aAAM,CAAC,MAAM,CAAC,IAAM;iBAChD,IAEA,OAAO,CAAC,GAAG,CAAC,UAAC,EAAmB,EAAE,QAAQ;oBAA3B,WAAW,iBAAA,EAAE,EAAE,QAAA;gBAAiB,QAC9CD,iBACE,GAAG,EAAE,EAAE,EACP,GAAG,sCACEE,aAAsB,KACzB,aAAa,EAAE,WAAW,EAC1B,KAAK,EAAED,aAAM,CAAC,IAAI,CAAC,MAAM,EACzB,UAAU,EAAE,GAAG,EACf,SAAS,EAAE,MAAM,EACjB,OAAO,SAAA,EACP,WAAW,EAAE,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,EACzC,YAAY,EAAE,QAAQ,KAAK,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,OAG5D,WAAW,CACT;aACN,CAAC,CACC,CACC;QACRD,wBACG,IAAI,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,QACzBA,iBAAI,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,IACrB,OAAO,CAAC,GAAG,CAAC,UAAC,EAAc,EAAE,QAAQ;gBAAtB,MAAM,YAAA,EAAE,EAAE,QAAA;YAAiB,QACzCA,iBACE,GAAG,EAAE,EAAE,EACP,GAAG,EAAE;;oBAEH,YAAY,EACV,KAAK,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC;0BACrB,MAAM;0BACN,eAAaC,aAAM,CAAC,MAAM,CAAC,IAAM;oBACvC,OAAO,SAAA;oBACP,WAAW,EAAE,QAAQ,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO;oBACzC,YAAY,EAAE,QAAQ,KAAK,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO;iBAC5D,IAEA,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CACvB;SACN,CAAC,CACC,IACN,CAAC,CACI,CACF,EACR;CACH;;;;"}